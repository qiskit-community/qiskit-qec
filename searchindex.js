Search.setIndex({"docnames": ["apidocs/analysis", "apidocs/circuits", "apidocs/codes", "apidocs/decoders", "apidocs/geometry", "apidocs/index", "apidocs/info", "apidocs/linear", "apidocs/operators", "apidocs/structures", "apidocs/utils", "discussions/index", "how_tos/1-how-to-create-codes", "how_tos/2-how-to-work-with-shape-objects", "how_tos/index", "index", "stubs/qiskit_qec.circuits.ArcCircuit", "stubs/qiskit_qec.circuits.CSSCodeCircuit", "stubs/qiskit_qec.circuits.CodeCircuit", "stubs/qiskit_qec.circuits.RepetitionCodeCircuit", "stubs/qiskit_qec.circuits.SurfaceCodeCircuit", "stubs/qiskit_qec.codes.CodeLibrarian", "stubs/qiskit_qec.codes.CodeLibrary", "stubs/qiskit_qec.codes.QECCode", "stubs/qiskit_qec.codes.StabSubSystemCode", "stubs/qiskit_qec.codes.all_small_codes", "stubs/qiskit_qec.codes.small_code", "stubs/qiskit_qec.decoders.DecodingGraph", "stubs/qiskit_qec.decoders.UnionFindDecoder", "stubs/qiskit_qec.geometry.CheckerBoardTile", "stubs/qiskit_qec.geometry.DiagonalBarTile", "stubs/qiskit_qec.geometry.DiagonalHourGlassTile", "stubs/qiskit_qec.geometry.Edge", "stubs/qiskit_qec.geometry.Face", "stubs/qiskit_qec.geometry.GeometryBounds", "stubs/qiskit_qec.geometry.HexagonTile", "stubs/qiskit_qec.geometry.Lattice", "stubs/qiskit_qec.geometry.Manifold", "stubs/qiskit_qec.geometry.OctaSquareTile", "stubs/qiskit_qec.geometry.Plane", "stubs/qiskit_qec.geometry.QubitCount", "stubs/qiskit_qec.geometry.QubitData", "stubs/qiskit_qec.geometry.Shape", "stubs/qiskit_qec.geometry.ShapeObject", "stubs/qiskit_qec.geometry.Shell", "stubs/qiskit_qec.geometry.SquareDiamondTile", "stubs/qiskit_qec.geometry.Tile", "stubs/qiskit_qec.geometry.TileFactory", "stubs/qiskit_qec.geometry.Tiling", "stubs/qiskit_qec.geometry.TwoManifold", "stubs/qiskit_qec.geometry.Vertex", "stubs/qiskit_qec.geometry.WireFrame", "stubs/qiskit_qec.info.Properties", "stubs/qiskit_qec.linear.all_commute", "stubs/qiskit_qec.linear.augment_mat", "stubs/qiskit_qec.linear.build_hyper_partner", "stubs/qiskit_qec.linear.create_lambda_matrix", "stubs/qiskit_qec.linear.is_center", "stubs/qiskit_qec.linear.is_hyper_form", "stubs/qiskit_qec.linear.is_same_span", "stubs/qiskit_qec.linear.is_stabilizer_group", "stubs/qiskit_qec.linear.is_symplectic_form", "stubs/qiskit_qec.linear.is_symplectic_matrix_form", "stubs/qiskit_qec.linear.is_symplectic_vector_form", "stubs/qiskit_qec.linear.locate_hyper_partner", "stubs/qiskit_qec.linear.make_commute_hyper", "stubs/qiskit_qec.linear.rank", "stubs/qiskit_qec.linear.rref", "stubs/qiskit_qec.linear.rref_complete", "stubs/qiskit_qec.linear.symplectic_gram_schmidt", "stubs/qiskit_qec.linear.symplectic_product", "stubs/qiskit_qec.operators.BasePauli", "stubs/qiskit_qec.operators.Pauli", "stubs/qiskit_qec.operators.PauliList", "stubs/qiskit_qec.structures.GaugeGroup", "stubs/qiskit_qec.structures.Group", "stubs/qiskit_qec.utils.DecodingGraphEdge", "stubs/qiskit_qec.utils.DecodingGraphNode", "stubs/qiskit_qec.utils.get_counts_via_stim", "stubs/qiskit_qec.utils.get_stim_circuits", "stubs/qiskit_qec.utils.indexer", "stubs/qiskit_qec.utils.noisify_circuit", "stubs/qiskit_qec.utils.pauli_rep", "stubs/qiskit_qec.utils.visualizations", "tutorials/1-tutorial-example", "tutorials/QEC_Framework_IEEE_2022", "tutorials/how-to-use-union-find", "tutorials/index"], "filenames": ["apidocs/analysis.rst", "apidocs/circuits.rst", "apidocs/codes.rst", "apidocs/decoders.rst", "apidocs/geometry.rst", "apidocs/index.rst", "apidocs/info.rst", "apidocs/linear.rst", "apidocs/operators.rst", "apidocs/structures.rst", "apidocs/utils.rst", "discussions/index.rst", "how_tos/1-how-to-create-codes.ipynb", "how_tos/2-how-to-work-with-shape-objects.ipynb", "how_tos/index.rst", "index.rst", "stubs/qiskit_qec.circuits.ArcCircuit.rst", "stubs/qiskit_qec.circuits.CSSCodeCircuit.rst", "stubs/qiskit_qec.circuits.CodeCircuit.rst", "stubs/qiskit_qec.circuits.RepetitionCodeCircuit.rst", "stubs/qiskit_qec.circuits.SurfaceCodeCircuit.rst", "stubs/qiskit_qec.codes.CodeLibrarian.rst", "stubs/qiskit_qec.codes.CodeLibrary.rst", "stubs/qiskit_qec.codes.QECCode.rst", "stubs/qiskit_qec.codes.StabSubSystemCode.rst", "stubs/qiskit_qec.codes.all_small_codes.rst", "stubs/qiskit_qec.codes.small_code.rst", "stubs/qiskit_qec.decoders.DecodingGraph.rst", "stubs/qiskit_qec.decoders.UnionFindDecoder.rst", "stubs/qiskit_qec.geometry.CheckerBoardTile.rst", "stubs/qiskit_qec.geometry.DiagonalBarTile.rst", "stubs/qiskit_qec.geometry.DiagonalHourGlassTile.rst", "stubs/qiskit_qec.geometry.Edge.rst", "stubs/qiskit_qec.geometry.Face.rst", "stubs/qiskit_qec.geometry.GeometryBounds.rst", "stubs/qiskit_qec.geometry.HexagonTile.rst", "stubs/qiskit_qec.geometry.Lattice.rst", "stubs/qiskit_qec.geometry.Manifold.rst", "stubs/qiskit_qec.geometry.OctaSquareTile.rst", "stubs/qiskit_qec.geometry.Plane.rst", "stubs/qiskit_qec.geometry.QubitCount.rst", "stubs/qiskit_qec.geometry.QubitData.rst", "stubs/qiskit_qec.geometry.Shape.rst", "stubs/qiskit_qec.geometry.ShapeObject.rst", "stubs/qiskit_qec.geometry.Shell.rst", "stubs/qiskit_qec.geometry.SquareDiamondTile.rst", "stubs/qiskit_qec.geometry.Tile.rst", "stubs/qiskit_qec.geometry.TileFactory.rst", "stubs/qiskit_qec.geometry.Tiling.rst", "stubs/qiskit_qec.geometry.TwoManifold.rst", "stubs/qiskit_qec.geometry.Vertex.rst", "stubs/qiskit_qec.geometry.WireFrame.rst", "stubs/qiskit_qec.info.Properties.rst", "stubs/qiskit_qec.linear.all_commute.rst", "stubs/qiskit_qec.linear.augment_mat.rst", "stubs/qiskit_qec.linear.build_hyper_partner.rst", "stubs/qiskit_qec.linear.create_lambda_matrix.rst", "stubs/qiskit_qec.linear.is_center.rst", "stubs/qiskit_qec.linear.is_hyper_form.rst", "stubs/qiskit_qec.linear.is_same_span.rst", "stubs/qiskit_qec.linear.is_stabilizer_group.rst", "stubs/qiskit_qec.linear.is_symplectic_form.rst", "stubs/qiskit_qec.linear.is_symplectic_matrix_form.rst", "stubs/qiskit_qec.linear.is_symplectic_vector_form.rst", "stubs/qiskit_qec.linear.locate_hyper_partner.rst", "stubs/qiskit_qec.linear.make_commute_hyper.rst", "stubs/qiskit_qec.linear.rank.rst", "stubs/qiskit_qec.linear.rref.rst", "stubs/qiskit_qec.linear.rref_complete.rst", "stubs/qiskit_qec.linear.symplectic_gram_schmidt.rst", "stubs/qiskit_qec.linear.symplectic_product.rst", "stubs/qiskit_qec.operators.BasePauli.rst", "stubs/qiskit_qec.operators.Pauli.rst", "stubs/qiskit_qec.operators.PauliList.rst", "stubs/qiskit_qec.structures.GaugeGroup.rst", "stubs/qiskit_qec.structures.Group.rst", "stubs/qiskit_qec.utils.DecodingGraphEdge.rst", "stubs/qiskit_qec.utils.DecodingGraphNode.rst", "stubs/qiskit_qec.utils.get_counts_via_stim.rst", "stubs/qiskit_qec.utils.get_stim_circuits.rst", "stubs/qiskit_qec.utils.indexer.rst", "stubs/qiskit_qec.utils.noisify_circuit.rst", "stubs/qiskit_qec.utils.pauli_rep.rst", "stubs/qiskit_qec.utils.visualizations.rst", "tutorials/1-tutorial-example.ipynb", "tutorials/QEC_Framework_IEEE_2022.ipynb", "tutorials/how-to-use-union-find.ipynb", "tutorials/index.rst"], "titles": ["Analysis (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.analysis</span></code>)", "Circuits (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.circuits</span></code>)", "Codes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.codes</span></code>)", "Decoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.decoders</span></code>)", "Geometry (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.geometry</span></code>)", "Qiskit QEC API Reference", "Info (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.info</span></code>)", "Linear (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.linear</span></code>)", "Operators (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.operators</span></code>)", "Structures (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.structures</span></code>)", "Utils (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.utils</span></code>)", "QEC Discussions", "How-to: Create Codes", "How-to: work with geometry objects", "Qiskit QEC How-to guides", "Qiskit QEC documentation", "ArcCircuit", "CSSCodeCircuit", "CodeCircuit", "RepetitionCodeCircuit", "SurfaceCodeCircuit", "CodeLibrarian", "CodeLibrary", "QECCode", "StabSubSystemCode", "qiskit_qec.codes.all_small_codes", "qiskit_qec.codes.small_code", "DecodingGraph", "UnionFindDecoder", "CheckerBoardTile", "DiagonalBarTile", "DiagonalHourGlassTile", "Edge", "Face", "GeometryBounds", "HexagonTile", "Lattice", "Manifold", "OctaSquareTile", "Plane", "QubitCount", "QubitData", "Shape", "ShapeObject", "Shell", "SquareDiamondTile", "Tile", "TileFactory", "Tiling", "TwoManifold", "Vertex", "WireFrame", "Properties", "qiskit_qec.linear.all_commute", "qiskit_qec.linear.augment_mat", "qiskit_qec.linear.build_hyper_partner", "qiskit_qec.linear.create_lambda_matrix", "qiskit_qec.linear.is_center", "qiskit_qec.linear.is_hyper_form", "qiskit_qec.linear.is_same_span", "qiskit_qec.linear.is_stabilizer_group", "qiskit_qec.linear.is_symplectic_form", "qiskit_qec.linear.is_symplectic_matrix_form", "qiskit_qec.linear.is_symplectic_vector_form", "qiskit_qec.linear.locate_hyper_partner", "qiskit_qec.linear.make_commute_hyper", "qiskit_qec.linear.rank", "qiskit_qec.linear.rref", "qiskit_qec.linear.rref_complete", "qiskit_qec.linear.symplectic_gram_schmidt", "qiskit_qec.linear.symplectic_product", "BasePauli", "Pauli", "PauliList", "GaugeGroup", "Group", "DecodingGraphEdge", "DecodingGraphNode", "qiskit_qec.utils.get_counts_via_stim", "qiskit_qec.utils.get_stim_circuits", "qiskit_qec.utils.indexer", "qiskit_qec.utils.noisify_circuit", "qiskit_qec.utils.pauli_rep", "qiskit_qec.utils.visualizations", "Tutorial: example", "Qiskit QEC Software Framework", "Using the Union Find decoder in qiskit_qec", "QEC Tutorials"], "terms": {"thi": [0, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 42, 53, 55, 57, 64, 65, 71, 72, 73, 76, 77, 85, 86], "contain": [0, 12, 17, 26, 29, 30, 31, 34, 35, 38, 41, 42, 45, 72, 73, 79, 85, 86], "an": [0, 12, 13, 15, 16, 17, 18, 23, 27, 28, 34, 36, 40, 42, 53, 55, 56, 60, 65, 69, 71, 72, 73, 85, 86], "errorpropag": 0, "circuit": [0, 5, 16, 17, 18, 19, 20, 27, 71, 72, 78, 79, 81, 86], "error": [0, 12, 15, 16, 17, 18, 19, 20, 23, 27, 28, 81, 86], "propag": 0, "interfac": [0, 18], "analysi": [5, 85, 86], "qiskit_qec": [5, 12, 13, 17, 42, 85], "code": [5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 44, 48, 52, 73, 76, 77, 86], "decod": [5, 16, 18, 23, 27, 28, 76, 77], "geometri": [5, 12, 34, 40, 42, 43, 85], "info": [5, 12, 25, 26, 52, 85], "linear": [5, 85, 86], "oper": [5, 12, 13, 16, 17, 18, 19, 20, 27, 29, 30, 31, 35, 38, 44, 45, 47, 53, 55, 57, 65, 71, 72, 73, 74, 79, 81, 86], "structur": [5, 12, 13, 38], "util": [5, 12, 85], "about": [11, 26, 27, 85], "topic": [11, 85], "concept": [11, 85], "relat": [11, 85], "packag": [11, 15, 85], "The": [12, 13, 15, 16, 17, 24, 27, 28, 29, 30, 31, 34, 35, 38, 40, 42, 45, 54, 62, 63, 71, 72, 73, 86], "qec": [12, 13, 23, 27], "framework": [12, 13, 15, 71, 72, 73, 86], "doe": [12, 16, 55, 57, 59, 71, 72, 73, 85], "prescrib": 12, "ani": [12, 15, 16, 17, 18, 19, 20, 61, 71, 72, 73, 74, 76, 77, 78, 85], "particular": [12, 85], "wai": [12, 18, 73, 85], "follow": [12, 17, 18, 19, 20, 28, 29, 30, 31, 38, 42, 45, 85], "some": [12, 13, 19, 20, 71, 85], "simpl": [12, 17, 18, 34, 42, 85], "design": 12, "philosophi": 12, "look": [12, 85, 86], "wide": [12, 85], "rang": [12, 44, 55, 65, 85], "tool": [12, 83, 85], "method": [12, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 53, 55, 57, 64, 65, 71, 72, 73, 76, 77, 85], "instructur": 12, "make": [12, 16, 17, 18, 19, 20, 44, 65, 71, 72, 73, 85], "easier": [12, 85], "within": [12, 16, 27, 34, 42, 85], "ar": [12, 13, 16, 17, 18, 19, 20, 23, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 42, 43, 44, 45, 50, 51, 57, 62, 63, 65, 69, 71, 72, 73, 76, 77, 79, 81, 85, 86], "veri": [12, 15, 85, 86], "few": [12, 85], "class": [12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 74, 75, 76, 77, 80, 83, 85, 86], "i": [12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 52, 54, 55, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 77, 79, 81, 85, 86], "done": [12, 18, 27, 36, 85], "two": [12, 16, 39, 42, 48, 54, 62, 63, 68, 70, 72, 79, 85, 86], "primari": [12, 85], "reason": [12, 85], "first": [12, 28, 36, 59, 71, 73, 85, 86], "chang": [12, 15, 16, 17, 18, 19, 20, 71, 72, 85], "due": [12, 19, 20, 85], "failur": [12, 85], "fix": [12, 73, 85], "other": [12, 18, 36, 44, 71, 72, 73, 85], "can": [12, 18, 24, 28, 29, 35, 36, 38, 45, 62, 63, 71, 72, 73, 79, 85, 86], "easi": [12, 85], "take": [12, 16, 28, 85, 86], "out": [12, 42, 55, 72, 73, 85], "given": [12, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 34, 35, 36, 38, 41, 42, 44, 45, 54, 55, 61, 62, 63, 65, 71, 72, 73, 76, 77, 79, 85, 86], "wheer": [12, 85], "longer": [12, 85], "work": [12, 28, 44, 73, 85, 86], "we": [12, 19, 20, 85, 86], "want": [12, 35, 85, 86], "avoid": [12, 42, 85], "have": [12, 13, 16, 17, 18, 19, 20, 32, 33, 40, 43, 44, 50, 51, 53, 54, 55, 64, 65, 69, 70, 73, 85], "continu": [12, 85], "check": [12, 39, 42, 57, 61, 62, 63, 73, 85, 86], "still": [12, 15, 72, 73, 85], "whether": [12, 16, 17, 18, 19, 20, 27, 77, 85], "keep": [12, 44, 48, 85], "insid": [12, 36, 42, 44, 85], "second": [12, 42, 59, 85], "sinc": [12, 72, 73, 85], "heirachi": [12, 85], "could": [12, 16, 17, 18, 19, 20, 85], "us": [12, 13, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 50, 51, 56, 65, 68, 69, 71, 72, 73, 81, 85], "number": [12, 16, 17, 18, 19, 20, 26, 27, 40, 42, 62, 63, 64, 65, 70, 71, 72, 73, 74, 78, 85, 86], "would": [12, 16, 17, 18, 19, 20, 85, 86], "larg": [12, 42, 73, 85], "overlap": [12, 85], "difficult": [12, 85], "manag": [12, 18, 85], "instead": [12, 36, 71, 72, 73, 85], "aim": [12, 85], "onli": [12, 13, 16, 17, 18, 19, 20, 26, 42, 44, 50, 51, 73, 81, 85, 86], "stabsubsystemcod": [12, 17, 25, 26, 52, 85], "which": [12, 16, 17, 18, 19, 20, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42, 43, 44, 45, 48, 50, 51, 71, 72, 73, 77, 81, 85, 86], "deal": [12, 19, 20, 85], "subsystem": [12, 24, 71, 72, 73], "A": [12, 13, 17, 18, 23, 24, 27, 28, 29, 34, 35, 36, 38, 42, 44, 45, 50, 51, 52, 68, 70, 71, 72, 73, 79, 86], "construct": [12, 16, 17, 23, 27, 28, 72, 73, 85], "rather": [12, 16, 85], "than": [12, 16, 72, 85], "group": [12, 24, 57, 60, 71, 72, 73, 74], "usual": [12, 85], "ha": [12, 13, 38, 42, 55, 64, 71, 72, 73, 85], "mani": [12, 16, 17, 18, 19, 20, 85], "differ": [12, 16, 19, 44, 48, 53, 69, 71, 72, 73, 85, 86], "paramet": [12, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 78, 79, 81, 85], "option": [12, 16, 21, 24, 25, 29, 30, 31, 32, 34, 35, 36, 38, 42, 43, 44, 45, 48, 54, 61, 62, 63, 64, 65, 69, 71, 72, 73, 74, 78, 79], "inherit": [12, 24, 33, 44, 50, 51, 72, 73, 74, 85], "from": [12, 13, 16, 17, 18, 19, 20, 23, 27, 29, 33, 34, 35, 36, 38, 41, 42, 44, 45, 48, 50, 51, 55, 65, 71, 72, 73, 74, 85, 86], "exampl": [12, 17, 24, 25, 26, 35, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "build": [12, 55, 69], "base": [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 74, 75, 76, 77, 85], "cut": [12, 44, 85], "glu": [12, 85], "region": [12, 36, 42, 44, 85], "tile": [12, 29, 30, 31, 35, 36, 38, 42, 45, 47], "place": [12, 36, 42, 48, 71, 72, 73, 85], "lattic": [12, 29, 35, 38, 45, 48, 85], "small": [12, 25, 85], "rel": [12, 48, 85], "often": [12, 85], "special": [12, 85], "mai": [12, 13, 29, 30, 31, 35, 38, 42, 45, 85, 86], "For": [12, 72, 73, 79, 85], "triangularcolorcodebuild": [12, 85], "heavyhexcodebuild": [12, 85], "qiskit": [12, 16, 71, 72, 73, 78, 79], "codelibrarian": [12, 85], "variou": [12, 18, 85], "codelibrari": [12, 85], "instanc": [12, 32, 33, 41, 43, 44, 50, 51, 71, 72, 85], "store": [12, 13, 16, 27, 29, 30, 31, 35, 38, 42, 45, 71, 85], "properti": [12, 25, 26, 27, 73, 76, 77, 85], "eventu": [12, 85], "host": [12, 85], "separ": [12, 48, 85], "web": [12, 85], "server": [12, 85], "possibl": [12, 13, 27, 53, 71, 72, 73, 85, 86], "even": [12, 17, 18, 62, 63, 71, 72, 73, 85], "under": [12, 85], "local": [12, 16, 85], "clifford": [12, 71, 72, 73], "permut": [12, 85], "equival": [12, 25, 26, 71, 72], "grow": [12, 28, 85, 86], "quickli": [12, 85], "meant": [12, 85], "analog": [12, 85], "gap": [12, 25, 26, 85], "": [12, 13, 16, 17, 28, 55, 65, 71, 72, 73, 77, 79, 85], "sloan": [12, 85], "encyclopedia": [12, 85], "integ": [12, 28, 44, 56, 62, 63, 71, 72, 73, 85, 86], "sequenc": [12, 16, 42, 85], "There": [12, 85], "These": [12, 28, 85], "includ": [12, 16, 17, 18, 19, 20, 28, 34, 42, 44, 73, 86], "write": [12, 71, 73, 85], "custom": [12, 81, 85], "consid": [12, 48, 65, 71, 72, 73, 76, 77, 85, 86], "7": [12, 29, 30, 31, 35, 38, 45, 85, 86], "qubit": [12, 13, 16, 17, 18, 19, 20, 24, 26, 28, 29, 30, 31, 35, 38, 40, 41, 44, 45, 48, 71, 72, 73, 74, 76, 77, 79, 82, 86], "stean": [12, 85], "color": [12, 16, 29, 30, 31, 35, 38, 44, 45, 85], "todo": [12, 69, 73, 85], "add": [12, 32, 33, 41, 43, 44, 50, 51, 69, 81, 85], "imag": 12, "import": [12, 13, 17, 73, 84, 85, 86], "numpi": [12, 13, 24, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 84, 85], "np": [12, 13, 29, 30, 31, 35, 36, 38, 45, 53, 55, 57, 66, 67, 68, 71, 72, 73, 74, 84, 85], "gaugegroup": [12, 24, 26, 85], "pauli_list": [12, 85], "paulilist": [12, 24, 25, 26, 29, 30, 31, 35, 38, 44, 45, 71, 72, 85], "arrai": [12, 13, 24, 29, 30, 31, 35, 36, 38, 41, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 85], "1": [12, 13, 16, 19, 20, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 42, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 81, 86], "0": [12, 13, 16, 17, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 81, 84, 85, 86], "gauge_group": [12, 24, 25, 52, 85], "also": [12, 16, 17, 18, 19, 20, 27, 42, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 85], "set": [12, 13, 16, 17, 18, 19, 20, 28, 34, 36, 42, 44, 50, 55, 59, 65, 71, 72, 73, 76, 77, 86], "pauli": [12, 13, 17, 24, 28, 29, 30, 31, 35, 38, 45, 53, 55, 57, 60, 65, 71, 78, 79, 81, 82], "genertor": [12, 85], "describ": [12, 28, 29, 30, 31, 35, 38, 42, 45, 76, 77, 85, 86], "2": [12, 13, 16, 25, 26, 29, 30, 31, 35, 38, 42, 44, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 84, 86], "default": [12, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 38, 42, 43, 44, 45, 48, 61, 62, 63, 65, 69, 71, 72, 73, 74, 76, 77, 85], "read": [12, 19, 20, 71, 72, 73, 85], "product": [12, 53, 55, 56, 64, 65, 70, 71, 72, 73, 85], "sytnax": 12, "right": [12, 19, 20, 54, 71, 72, 73, 85], "left": [12, 19, 20, 54, 71, 72, 73, 85], "so": [12, 13, 16, 17, 18, 19, 20, 42, 71, 72, 73, 85, 86], "iixx": [12, 85], "x0x1": 12, "iiixxxx": 12, "iiizzzz": 12, "ixxxixi": 12, "izzzizi": 12, "xixiixx": 12, "ziziizz": 12, "3": [12, 17, 25, 26, 29, 30, 31, 35, 38, 44, 45, 71, 72, 73, 85], "need": [12, 36, 71, 73, 77, 85, 86], "syntax": [12, 71, 72, 73], "form": [12, 16, 17, 18, 20, 28, 29, 30, 31, 38, 44, 45, 58, 62, 63, 67, 68, 73, 78, 81, 85], "index": [12, 17, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 35, 38, 45, 52, 55, 64, 71, 72, 73, 77, 79, 85, 86], "x0x1x2x3": [12, 85], "z0z1z2z3": [12, 85], "x1x3x4x5": [12, 85], "z1z3z4z5": [12, 85], "x0x1x4x6": [12, 85], "z0z1z4z6": [12, 85], "6": [12, 29, 30, 31, 35, 38, 45, 85], "start": [12, 19, 85, 86], "cb": [12, 85], "output": [12, 16, 17, 18, 19, 20, 28, 71, 72, 73, 85], "format": [12, 28, 71, 72, 73, 85], "pauli_rep": [12, 71, 72, 73, 85], "base_pauli": [12, 71, 73, 85], "basepauli": [12, 72, 73, 74, 85], "set_syntax": [12, 71, 72, 73, 85], "index_syntax": [12, 71, 72, 73, 85], "set_qubit_ord": [12, 71, 72, 73, 85], "n": [12, 17, 21, 22, 24, 25, 26, 27, 34, 52, 56, 71, 72, 73, 74, 82, 85, 86], "5": [12, 26, 29, 30, 31, 35, 38, 45, 84, 85, 86], "k": [12, 21, 22, 25, 26, 29, 30, 31, 35, 38, 45, 52, 55, 57, 64, 65, 68, 74, 85], "show": [12, 69, 85], "its": [12, 18, 34, 64, 85], "small_cod": [12, 85], "4": [12, 25, 26, 29, 30, 31, 35, 38, 44, 45, 52, 55, 66, 68, 85, 86], "fetch": [12, 85], "inform": [12, 16, 19, 20, 26, 27, 41, 55, 85], "info_onli": [12, 21, 22, 25, 26, 85], "true": [12, 13, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 42, 44, 45, 53, 54, 57, 58, 59, 60, 61, 62, 63, 71, 72, 73, 74, 85], "type": [12, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 81, 85], "isotropic_gener": [12, 25, 26, 52, 74, 85], "39": [12, 85], "z1z2": [12, 85], "z0z4": [12, 85], "y1y2x3": [12, 85], "z0z1z3": [12, 85], "y0x3y4": [12, 85], "is_subsystem": [12, 25, 26, 85], "code_typ": [12, 25, 26, 52, 85], "aut_group_s": [12, 25, 26, 52, 85], "32": [12, 85], "is_triorthogon": [12, 52, 85], "is_decompos": [12, 25, 26, 52, 85], "weight_enumer": [12, 25, 26, 52, 85], "8": [12, 25, 29, 30, 31, 35, 38, 45, 52, 85, 86], "13": [12, 35, 38, 85], "is_css": [12, 25, 26, 52, 85], "uuid": [12, 25, 26, 52, 85], "33f790cd": [12, 85], "ab06": [12, 85], "47fb": [12, 85], "a2b3": [12, 85], "057f38329942": [12, 85], "is_degener": [12, 25, 26, 52, 85], "d": [12, 17, 18, 19, 20, 25, 26, 38, 45, 52, 85, 86], "is_gf4linear": [12, 25, 26, 52, 85], "23": [12, 85], "all": [12, 16, 18, 19, 20, 23, 25, 27, 28, 40, 43, 44, 47, 57, 71, 72, 73, 85, 86], "css": [12, 17, 44, 85], "all_small_cod": [12, 85], "fals": [12, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 34, 35, 36, 42, 44, 53, 54, 57, 59, 61, 62, 63, 71, 72, 73, 77, 85], "36": [12, 85], "x1z2z3": 12, "y0y1x3": [12, 25], "z0z1x2z4": 12, "logical_op": [12, 25, 26, 52, 85], "z0z1x3": 12, "z2x4": 12, "z0z3": [12, 25], "z4": [12, 26], "712505a9": 12, "19ed": 12, "4702": 12, "ba25": 12, "d2270317afaa": 12, "more": [12, 16, 17, 18, 19, 20, 28, 42, 71, 73, 86], "triangular": [12, 85], "see": [12, 16, 20, 28, 35, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 85], "intermedi": [12, 13, 44, 85], "result": [12, 16, 17, 18, 19, 20, 27, 69, 71, 72, 73, 85], "when": [12, 16, 42, 71, 72, 73, 76, 77, 85, 86], "distanc": [12, 16, 17, 18, 19, 20, 42, 48], "appropri": [12, 29, 35, 38, 45, 85], "hexagon": [12, 35, 85], "hexagontil": [12, 38, 45, 85], "shape": [12, 36, 73, 85], "cutter": [12, 44, 85], "codefactori": [12, 85], "minifold": 12, "plane": [12, 42, 85], "lattiv": [12, 85], "against": [12, 85], "triangular_code_factori": [12, 85], "manifold": [12, 39, 42, 49, 85], "tile_optyp": [12, 48, 85], "dxz": [12, 35, 38, 85], "choos": [12, 71, 72, 73, 85], "both": [12, 19, 20, 24, 36, 72, 85], "x": [12, 13, 16, 17, 19, 20, 29, 30, 31, 38, 45, 54, 56, 58, 65, 69, 71, 72, 73, 85, 86], "z": [12, 13, 16, 17, 19, 20, 29, 30, 31, 38, 45, 57, 58, 65, 69, 71, 72, 73, 84, 85, 86], "each": [12, 16, 27, 29, 30, 31, 34, 35, 38, 40, 44, 45, 53, 55, 65, 71, 72, 73, 85], "predefin": [12, 85], "u_vec": [12, 29, 30, 31, 35, 36, 38, 45, 85], "v_vec": [12, 29, 30, 31, 35, 36, 38, 45, 85], "length": [12, 16, 36, 42, 64, 65, 72, 85], "side": [12, 42, 71], "scale": [12, 42, 44, 85], "defin": [12, 18, 24, 29, 30, 31, 35, 38, 42, 44, 45, 53, 70, 71, 72, 81, 85, 86], "point": [12, 13, 34, 36, 39, 42, 44, 48, 71, 85, 86], "triangl": [12, 85], "h": [12, 35, 71, 72, 73, 79, 85, 86], "r": [12, 34, 35, 66, 67, 85], "on_boundari": [12, 42, 85], "boundari": [12, 16, 17, 18, 19, 42, 44, 77, 85], "boundary_strategi": [12, 44, 85], "combin": [12, 34, 44, 71, 72, 73, 85], "peic": 12, "level": [12, 44, 85], "weight": [12, 27, 35, 44, 73, 76, 85], "after": [12, 16, 19, 20, 71, 72, 86], "displai": [12, 29, 30, 31, 35, 38, 45, 46, 71, 72, 73, 85], "view": [12, 85], "allow": [12, 13, 19, 20, 85], "correct": [12, 15, 16, 27, 28, 42, 71, 73, 86], "show_face_color": [12, 85], "As": [12, 16, 85], "face": [12, 13, 29, 30, 31, 35, 38, 44, 45], "show_insid": [12, 85], "lattice_view": [12, 85], "precut_tiling_view": [12, 85], "befor": [12, 72, 73, 85], "set_paramet": [12, 85], "updat": [12, 27, 71, 72, 73, 85], "is_configur": [12, 85], "directli": [12, 85], "individu": [12, 85], "update_is_configur": [12, 85], "make_cod": [12, 85], "produc": [12, 16, 17, 18, 19, 20, 28, 71, 72, 73, 85], "who": 12, "qubit_index": 12, "draw": [12, 13, 24, 29, 30, 31, 35, 38, 44, 45, 46, 85], "face_color": [12, 29, 30, 31, 35, 38, 44, 45, 47, 85], "show_index": [12, 44, 85], "previou": [12, 16, 32], "approach": [12, 85], "wrap": 12, "In": [12, 18, 28, 76, 85, 86], "case": [12, 16, 17, 18, 19, 20, 85], "9": [12, 16, 29, 30, 31, 35, 38, 85], "triangular_color_code_build": [12, 85], "anoth": [12, 71, 72, 73, 85], "surfac": [12, 17, 18, 20, 42], "surface_code_build": [12, 85], "surfacecodebuild": [12, 85], "dx": [12, 85], "dz": [12, 85], "xcolor": [12, 13, 44, 85], "lightcor": [12, 85], "zcolor": [12, 13, 44, 85], "skyblu": [12, 85], "rotat": [12, 20, 39, 44, 45, 85], "rotated_surface_code_buil": [12, 85], "rotatedsurfacecodebuild": [12, 85], "ul_op": [12, 85], "Or": 12, "heavi": [12, 85], "hex": 12, "heavyhex_code_build": [12, 85], "primit": [13, 85], "geometr": [13, 34, 47, 85], "At": [13, 16, 85], "present": [13, 27, 85], "consist": [13, 23, 71, 85], "vertic": [13, 32, 42, 44, 48, 86], "edg": [13, 16, 27, 28, 44, 51, 76, 86], "wirefram": [13, 33, 44, 85], "shell": [13, 24, 29, 30, 31, 35, 38, 42, 45, 48, 85], "vertex": [13, 32, 42, 44, 85], "space": [13, 34, 85], "list": [13, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 31, 34, 35, 36, 38, 41, 42, 44, 45, 47, 50, 51, 58, 68, 71, 72, 73, 74, 76, 77, 78, 79, 81, 85, 86], "hyperedg": [13, 27, 85], "self": [13, 16, 17, 19, 20, 34, 36, 44, 71, 72, 73, 85], "loop": [13, 28, 85], "associ": [13, 24, 48, 71, 85], "them": [13, 28, 73, 85], "current": [13, 40, 42, 71, 72, 73, 85], "etc": [13, 17, 18, 29, 30, 31, 79, 85], "ad": [13, 16, 19, 20, 69, 81, 85, 86], "futur": [13, 15], "assocoi": [13, 85], "system": [13, 24, 85], "being": [13, 17, 19, 20, 48, 50, 68, 85], "step": [13, 85, 86], "until": [13, 85], "solid": [13, 85], "c": [13, 16, 17, 29, 30, 31, 34, 38, 45, 71, 72, 73, 85], "librari": [13, 22, 26], "creat": [13, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 47, 48, 50, 51, 52, 56, 86], "implement": [13, 16, 19, 42, 55, 85, 86], "thu": [13, 32, 33, 43, 44, 50, 51, 85], "necessarili": [13, 85], "fast": [13, 85], "fulli": [13, 85, 86], "featur": [13, 44, 85], "model": [13, 17, 23, 78, 81, 85, 86], "qubit_count": [13, 24, 29, 30, 31, 35, 38, 44, 45, 47, 48, 85], "qubitcount": [13, 24, 44, 47, 48, 85], "qubit_data": [13, 24, 29, 30, 31, 35, 38, 44, 45, 47, 48, 85], "qubitdata": [13, 24, 44, 47, 48, 85], "squar": [13, 38, 42, 45, 85], "repres": [13, 28, 34, 39, 53, 55, 57, 60, 69, 71, 72, 73, 85], "xxxx": [13, 29, 30, 31, 38, 85], "zzzz": [13, 29, 30, 31, 38, 85], "share": [13, 85], "common": [13, 85], "x_oper": [13, 85], "z_oper": [13, 85], "y_oper": [13, 85], "y": [13, 16, 29, 30, 31, 38, 45, 71, 72, 73, 85, 86], "v1": [13, 29, 30, 31, 35, 38, 45, 85], "id": [13, 32, 33, 40, 43, 44, 50, 51, 85, 86], "new_qubit": [13, 40, 85], "increment_qubit": [13, 40, 85], "v2": [13, 29, 30, 31, 35, 38, 45, 85], "v3": [13, 29, 30, 31, 35, 38, 85], "v4": [13, 35, 38, 85], "e1": [13, 85], "e2": [13, 85], "e3": [13, 85], "e4": [13, 85], "wf1": [13, 85], "f1": [13, 85], "v5": [13, 35, 38, 85], "v6": [13, 38, 85], "v7": [13, 38, 85], "v8": [13, 31, 85], "e5": [13, 85], "e6": [13, 85], "e7": [13, 85], "e8": [13, 85], "wf2": [13, 85], "f2": [13, 85], "14": [13, 38, 86], "green": [13, 85], "yellow": [13, 85], "show_face_id": [13, 44, 85], "earli": 15, "stage": 15, "develop": [15, 85], "like": [15, 49, 62, 63, 79, 85], "break": 15, "api": 15, "releas": [15, 72, 85], "If": [15, 16, 17, 18, 19, 20, 25, 26, 27, 29, 30, 31, 35, 36, 38, 42, 45, 53, 55, 64, 65, 71, 72, 73, 85], "you": [15, 85, 86], "encount": 15, "bug": 15, "pleas": 15, "open": [15, 85], "issu": [15, 85], "github": [15, 79, 85], "sourc": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 85], "experimentalist": [15, 85], "theorist": [15, 85], "quantum": [15, 27, 55], "tutori": [15, 85], "how": [15, 16, 17, 18, 19, 20, 42, 71, 72, 73, 85], "guid": 15, "refer": [15, 16, 40, 72, 73, 85], "discuss": [15, 85], "link": [16, 85], "t": [16, 17, 18, 19, 20, 57, 70, 71, 72, 73, 77, 85, 86], "basi": [16, 17, 19, 20, 29, 35, 36, 38, 45, 58, 65, 69, 79, 85], "xy": [16, 73, 85], "logic": [16, 17, 18, 19, 20, 27, 28, 74, 77, 79, 86], "reset": [16, 19, 20, 79, 85, 86], "delai": [16, 19], "none": [16, 17, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 61, 62, 63, 64, 65, 69, 71, 72, 73, 74, 76, 77, 78, 79, 85], "barrier": [16, 19, 20, 79, 85], "max_dist": 16, "schedul": 16, "run_202": 16, "rounds_per_202": 16, "conditional_reset": 16, "codecircuit": [16, 17, 19, 20, 27], "anisotrop": 16, "repetit": [16, 17, 18, 19, 20, 85], "correspond": [16, 17, 18, 19, 20, 27, 28, 76, 79, 81, 85], "over": [16, 19, 71, 73, 85, 86], "syndrom": [16, 17, 18, 19, 20, 27, 28, 77, 85, 86], "measur": [16, 17, 18, 19, 20, 27, 28, 77, 78, 79, 85, 86], "round": [16, 17, 18, 19, 20, 77, 85, 86], "provid": [16, 24, 28, 29, 30, 31, 35, 36, 38, 45, 72, 73], "param": [16, 17, 18, 19, 20, 44], "tupl": [16, 17, 19, 20, 21, 22, 27, 28, 32, 41, 42, 44, 64, 68, 69, 71, 72, 73], "c0": 16, "c1": 16, "where": [16, 29, 30, 31, 35, 38, 45, 65, 71, 72, 73, 85, 86], "auxiliari": 16, "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 32, 33, 34, 36, 37, 40, 42, 43, 44, 47, 50, 51, 55, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 85], "str": [16, 17, 19, 20, 21, 22, 27, 28, 41, 42, 44, 48, 54, 71, 72, 73, 74, 76, 77, 86], "pair": [16, 27, 53, 58, 64, 65, 69, 85], "specifi": [16, 26, 27, 28, 71, 72, 73], "string": [16, 17, 18, 19, 20, 27, 28, 41, 71, 72, 73, 86], "valu": [16, 17, 18, 19, 20, 27, 28, 36, 40, 42, 44, 64, 68, 71, 72, 73, 76, 77, 86], "bool": [16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 34, 36, 42, 44, 47, 53, 57, 58, 59, 60, 61, 62, 63, 71, 72, 73, 74, 77, 85], "gate": [16, 19, 20, 79, 81, 85], "mid": [16, 19, 20], "ff": 16, "effect": [16, 27, 85], "via": [16, 27, 71, 85], "feed": 16, "forward": 16, "time": [16, 17, 19, 71, 72, 73, 77, 79, 85, 86], "dt": [16, 19], "float": [16, 19, 34, 36, 42, 44, 48, 50, 76], "between": [16, 17, 19, 42, 48, 71, 72, 73, 85], "section": [16, 19, 85], "dict": [16, 17, 18, 19, 20, 27, 28, 42, 44, 76, 77, 79], "dictionari": [16, 17, 18, 20, 27, 28, 40, 42, 78, 79], "kei": [16, 18, 27, 28, 29, 30, 31, 38, 40, 45, 76, 77, 79, 85], "predetermin": 16, "bicolor": 16, "found": [16, 64, 85], "initi": [16, 18, 20, 24, 27, 34, 73, 85], "maximum": [16, 85], "determin": [16, 17, 18, 19, 20, 27, 36, 44, 53], "order": [16, 17, 18, 71, 72, 73, 85], "entangl": [16, 85], "appli": [16, 19, 20, 36, 69, 71, 72, 73, 78], "element": [16, 19, 20, 27, 65, 69, 71, 85], "simultan": 16, "run": [16, 27, 28, 85, 86], "overwritten": [16, 17, 18], "high": [16, 85], "enough": [16, 42, 85], "least": 16, "rounds_per_202xlen": 16, "part": [16, 71, 73, 85], "202": 16, "typic": [16, 18, 28, 86], "begin": [16, 73, 85], "end": [16, 20, 42, 72, 73, 85], "requir": [16, 17, 18, 19, 20, 42, 85], "get": [16, 21, 71, 72, 73, 76, 77, 85, 86], "event": [16, 27, 85, 86], "dedic": [16, 85], "conjug": [16, 71, 72, 73, 85], "condit": [16, 73], "check_nod": [16, 17, 18, 19, 20], "node": [16, 17, 18, 19, 20, 27, 28, 77, 85, 86], "ignore_extra": [16, 17, 18, 19, 20], "minim": [16, 17, 18, 19, 20, 85], "neutral": [16, 17, 18, 19, 20, 28], "addit": [16, 17, 18, 19, 20, 27, 44, 78, 85], "readout": [16, 17, 18, 19, 20], "flip": [16, 17, 18, 19, 20, 85], "cluster": [16, 17, 18, 19, 20, 28, 86], "string2nod": [16, 17, 18, 19, 20, 28], "undeed": [16, 17, 18, 19, 20], "ignor": [16, 17, 18, 19, 20, 85], "should": [16, 17, 18, 19, 20, 27, 35, 42, 51, 71, 85], "reflect": [16, 17, 18, 19, 20], "return": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 85], "independ": [16, 17, 18, 19, 20, 55, 65, 85], "valid": [16, 17, 18, 19, 20], "flipped_logical_nod": [16, 17, 18, 19, 20], "were": [16, 17, 18, 19, 20, 85], "origin": [16, 17, 18, 19, 20, 24, 29, 30, 31, 35, 38, 42, 45, 47, 71, 72, 73], "num_error": [16, 17, 18, 19, 20], "minimum": [16, 17, 18, 19, 20, 48], "clean_cod": 16, "obviou": 16, "identifi": [16, 54, 72], "remov": [16, 27, 72, 73, 85], "modif": 16, "static": [16, 22, 32, 33, 34, 39, 42, 43, 44, 50, 51, 72], "flatten_nod": 16, "consolid": 16, "those": [16, 42, 85], "same": [16, 28, 36, 64, 65, 70, 72, 73, 85], "posit": [16, 42, 50, 54, 56, 68, 71, 72, 73, 85], "decodinggraphnod": [16, 17, 27], "flatten": 16, "flat_nod": 16, "get_error_coord": 16, "count": [16, 24, 27, 44, 78], "decoding_graph": [16, 28], "spitz": [16, 27], "remove_invalid_edg": 16, "return_sampl": [16, 27], "get_error_prob": [16, 27], "graph": [16, 18, 27, 28, 86], "gener": [16, 17, 18, 24, 25, 26, 27, 28, 36, 42, 53, 55, 57, 60, 72, 73, 74, 78, 86], "probabl": [16, 17, 27, 85, 86], "singl": [16, 27, 51, 72, 73, 79, 85, 86], "locat": [16, 64, 72, 85], "calcul": [16, 27, 71, 72, 73, 85], "analyz": [16, 27], "decodinggraph": [16, 17, 18, 76, 77], "object": [16, 21, 22, 23, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 47, 48, 52, 71, 72, 73, 75, 76, 77, 80], "support": [16, 27, 42, 85], "delet": [16, 41, 44, 72, 73], "invalid": [16, 72, 73], "thei": [16, 27, 58, 71, 72, 73, 85, 86], "sampl": [16, 27, 78], "coordin": [16, 29, 30, 31, 35, 38, 42, 45, 71, 85], "start_tim": 16, "end_tim": 16, "specif": [16, 27, 29, 30, 31, 35, 38, 45, 62, 63, 72, 76, 77, 85], "whose": [16, 17, 19, 20, 27, 79, 85], "detect": [16, 85], "account": 16, "It": [16, 17, 18, 28, 42, 55, 65, 85, 86], "assum": [16, 17, 18, 28, 36, 42, 55, 65, 73, 81, 85], "subround": 16, "unit": [16, 85], "is_cluster_neutr": [16, 17, 18, 19, 20], "mean": [16, 17, 18, 19, 20, 72, 85, 86], "one": [16, 17, 18, 19, 20, 28, 42, 71, 72, 73, 85, 86], "caus": [16, 17, 18, 19, 20], "pass": [16, 17, 18, 19, 20, 44, 86], "kwarg": [16, 17, 18, 19, 20, 21, 22, 24, 25, 44, 47, 72, 73], "convert": [16, 17, 18, 19, 20, 28, 44, 72, 73, 79, 85, 86], "keyword": [16, 17, 18, 19, 20], "argument": [16, 17, 18, 19, 20, 54, 62, 63, 85], "below": [16, 20, 85], "all_log": [16, 17, 19, 20, 27], "irrespect": [16, 17, 19, 20], "non": [16, 19, 20, 27, 28, 45, 73, 85, 86], "trivial": [16, 19, 20, 27, 85], "string2raw_log": [16, 17, 19, 20, 28], "extract": [16, 19, 20, 44, 85], "raw": [16, 19, 20], "transpil": 16, "backend": 16, "echo": 16, "echo_num": 16, "ibmq": 16, "ibmqbackend": 16, "express": [16, 19, 20, 85], "xzx": 16, "respect": [16, 17, 85], "repeat": [16, 85], "dynam": [16, 85], "decoupl": 16, "transpiled_circuit": 16, "attribut": [16, 18, 21, 24, 27, 29, 30, 31, 32, 33, 35, 36, 38, 43, 44, 45, 50, 51, 52, 71, 72, 73, 74, 76, 77], "available_method": [16, 27], "naiv": [16, 27], "method_na": [16, 27], "method_spitz": [16, 27], "round_schedul": [17, 19], "zx": [17, 71, 72, 73, 85], "noise_model": [17, 78, 81, 86], "either": [17, 24, 27, 71, 72, 73, 79, 85], "b": [17, 34, 42, 65, 70, 71, 72, 85], "x_gaug": 17, "indic": [17, 27, 28, 42, 65, 72, 73, 76, 77, 85], "z_gaug": 17, "x_stabil": 17, "z_stabil": 17, "logical_x": [17, 85], "logical_z": [17, 85], "encod": [17, 19, 20, 26, 71, 72, 73, 81, 82, 85, 86], "measurem": 17, "gaug": [17, 24], "xz": [17, 71, 72, 73, 85], "nois": [17, 78, 79, 81, 85, 86], "noisi": 17, "pnenomolog": 17, "entri": [17, 40, 42, 62, 63, 72, 73, 86], "probab": 17, "depolar": [17, 85], "quantumcircuit": [17, 19, 71, 72, 73, 78, 79, 81, 85], "memori": [17, 73, 85], "experi": [17, 85], "heavyhex": 17, "hhc": 17, "css_code": 17, "01": [17, 42, 48, 85], "version": [17, 18, 42, 72, 85], "here": [17, 18, 85], "odd": [17, 18, 85, 86], "assess": [17, 18], "complex": [17, 18, 71, 72, 73, 85], "care": [17, 18], "suppli": [17, 18, 36, 57], "stim_detector": 17, "detector": [17, 79], "stim": [17, 79], "clbit": [17, 79], "classic": [17, 72, 79, 85], "bit": [17, 72, 79, 85], "regist": 17, "comparison": [17, 42, 79], "particip": 17, "stabil": [17, 24, 52, 60, 77], "earlier": [17, 72, 86], "trigger": 17, "outcom": [17, 19, 28, 78, 86], "abc": [18, 46], "abstract": [18, 85], "well": [18, 19, 20, 68, 85], "fault": [18, 86], "toler": [18, 42], "inher": 18, "depend": 18, "famili": [18, 85], "must": [18, 26, 29, 30, 31, 35, 38, 42, 44, 45, 54, 55, 56, 59, 64, 65, 70, 72, 85], "label": [18, 45, 71, 72, 73, 85, 86], "xbasi": [19, 85], "henc": [19, 20, 71, 72], "ancilla": [19, 20, 77], "assist": [19, 20], "No": [19, 20, 27, 85], "otherwis": [19, 20, 42, 57, 59, 61, 62, 63, 71, 72, 73, 85], "final": [19, 20, 28, 71, 73, 85, 86], "get_circuit_list": [19, 20], "circuit_list": [19, 20], "partition_outcom": 19, "infer": [19, 20], "ugli": [19, 20], "whenev": [19, 20, 85], "re": [19, 20], "syndrome_measur": [19, 20], "applic": [19, 20, 85, 86], "disregard": [19, 20], "boolean": [19, 20, 62, 63, 71, 72, 73, 85], "denot": [19, 20, 85], "log": [19, 20, 27], "state": [20, 85, 86], "config": [21, 85], "configur": [21, 22, 85], "_summary_": [21, 22, 24, 71, 72, 73, 74], "_description_": [21, 22, 24, 25, 34, 41, 42, 44, 71, 72, 73, 74], "_de_": 21, "union": [21, 22, 25, 26, 27, 28, 36, 41, 42, 43, 44, 50, 58, 62, 63, 70, 74, 76, 78, 79, 81], "n_dir_format": 21, "n_": [21, 85], "n_k_codes_file_format": 21, "codes_n_": 21, "_k_": 21, "json": 21, "name": [22, 41, 52, 72, 74, 79, 81, 85], "path": [22, 28, 42, 85], "config_filenam": 22, "codebas": [22, 85], "config_fil": 22, "file": [22, 85], "nme": 22, "data2cod": 22, "record": 22, "in_rang": 22, "_type_": [22, 42, 44, 73], "search": [22, 64, 85], "core": [23, 86], "central": [23, 85], "deriv": [23, 85], "recoveri": 23, "stuff": [23, 86], "init": [23, 32, 33, 37, 39, 40, 41, 42, 43, 44, 49, 50, 51, 71, 72, 73, 75], "function": [23, 28, 71, 72, 73, 82, 85], "data": [24, 27, 28, 29, 30, 31, 35, 38, 41, 42, 44, 45, 48, 72, 73, 85], "defing": 24, "x1x2": 24, "z3z4": [24, 85], "x3z9": 24, "checkerboardtil": [24, 85], "subsytem": 24, "exist": [24, 27, 64, 85], "list_onli": 25, "alwai": [25, 44], "desc": 25, "match": [25, 71, 72, 73], "queri": 25, "0x13e304f40": 25, "0x13e30a490": 25, "0x13e30a880": 25, "0x13e30aa60": 25, "z0x1z2": [25, 85], "z1x2z3": 25, "code_info": [25, 26], "z2x3": 25, "24": [25, 85], "e6e4edd6": 25, "2ec6": 25, "467f": 25, "9187": 25, "0cc64bc51f1a": 25, "allsmallgroup": 25, "physic": [26, 85], "uniqu": [26, 32, 33, 40, 43, 44, 50, 51, 72, 73, 77], "request": 26, "suitabl": [26, 27, 68], "subclass": 26, "rais": [26, 29, 30, 31, 34, 35, 36, 38, 42, 45, 54, 55, 56, 57, 59, 60, 64, 65, 68, 69, 70, 71, 72, 73], "qiskiterror": [26, 29, 30, 31, 34, 35, 36, 38, 42, 45, 54, 55, 56, 57, 59, 60, 64, 65, 68, 69, 70, 71, 72, 73, 85], "assign": [26, 48, 85], "x0x2": 26, "z1z4": 26, "z0z2": 26, "x3": [26, 85], "x1x4": [26, 85], "z3": [26, 85], "576": 26, "47e52342": 26, "8ffc": 26, "48e5": 26, "be51": 26, "c60aab28e9b8": 26, "smallgroup": 26, "brute": 27, "empti": [27, 40, 72, 73, 85], "analys": 27, "helper": 27, "clean_measur": 27, "obvious": 27, "input": [27, 28, 34, 42, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 85], "edge_in_graph": 27, "in_graph": 27, "get_edge_graph": 27, "copi": [27, 29, 30, 31, 34, 38, 45, 50, 71, 72, 73], "fault_id": [27, 76], "edge_graph": 27, "rx": 27, "pygraph": [27, 28], "estim": 27, "et": [27, 85], "al": 27, "http": [27, 79, 85], "doi": [27, 85], "org": [27, 85], "10": [27, 31, 35, 38, 55, 84, 85, 86], "1002": 27, "qute": 27, "201800012": 27, "get_node_graph": 27, "node_graph": 27, "make_error_graph": 27, "ouput": 27, "do": [27, 28, 58, 60, 69, 85], "subgraph": [27, 28], "node_index": [27, 28], "corrspond": [27, 77], "update_attribut": 27, "call": [27, 85], "weight_syndrome_graph": 27, "replac": [27, 71, 72, 85], "p": [27, 29, 30, 31, 38, 42, 45, 70, 71, 72, 73, 85, 86], "use_peel": 28, "use_is_cluster_neutr": 28, "clusteringdecod": 28, "around": [28, 39, 86], "erasur": [28, 86], "easili": [28, 85], "peel": [28, 86], "compat": [28, 71, 78, 79], "standard": [28, 78, 85], "hdrg": 28, "arxiv": [28, 85], "1709": 28, "06218v3": 28, "detail": [28, 44, 71], "find": [28, 55, 64], "algorithm": [28, 42, 86], "u": [28, 85], "paper": [28, 85], "root": [28, 44, 85], "compress": 28, "get_correct": 28, "turn": [28, 64, 71, 72, 73, 85], "corrected_log": 28, "transvers": 28, "neighbouring_edg": 28, "neighbour": 28, "payload": 28, "decodinggraphedg": 28, "connect": [28, 51], "compon": [28, 44, 51], "infinit": [28, 42, 85], "tree": 28, "span": [28, 59, 65, 85], "forest": 28, "go": [28, 85, 86], "backward": 28, "through": [28, 64, 85, 86], "comput": [28, 42, 55, 66, 67, 68, 86], "1703": 28, "01517": 28, "occur": [28, 85], "process": [28, 69, 86], "predecod": 28, "callabl": 28, "preprocess": 28, "optyp": [29, 30, 31, 35, 38, 45], "pxzxz": [29, 35, 38, 45], "checker": [29, 35], "board": [29, 35], "diagram": [29, 30, 31], "q0": [29, 30, 31, 35, 38, 45, 85], "q1": [29, 30, 31, 35, 38, 45, 85], "q2": [29, 30, 31, 35, 38, 45, 85], "v0": [29, 30, 31, 35, 38, 45, 85], "o": [29, 30, 31, 35, 38, 42, 45, 85, 86], "q3": [29, 30, 31, 35, 38, 45, 85], "q4": [29, 30, 31, 35, 38, 45, 85], "q5": [29, 30, 31, 35, 38, 45, 85], "q6": [29, 30, 31, 35, 38, 45, 85], "q7": [29, 30, 31, 35, 38, 45, 85], "q8": [29, 30, 35, 38, 85], "yellowgreen": [29, 30, 31, 35, 38, 44, 45, 85], "tomato": [29, 30, 31, 35, 38, 44, 45, 85], "preformat": [29, 30, 31, 35, 38, 45], "op_dict": [29, 30, 31, 38, 45], "pppp": [29, 30, 31, 38, 45], "pattern": [29, 30, 31, 38, 45], "opertor": [29, 30, 31, 35, 38, 45], "cxzzx": [29, 38], "xzzx": 29, "avail": [29, 30, 31, 32, 33, 38, 43, 44, 45, 50, 51, 85], "precomput": [29, 30, 31, 38, 45], "layout": [29, 30, 31, 38, 45], "pzxzx": [29, 45], "cxxxx": [29, 45], "czzzz": [29, 45], "czxxz": [29, 38], "variabl": [29, 30, 31, 35, 38, 45, 85], "built": [29, 30, 31, 35, 38, 45], "abov": [29, 30, 31, 35, 38, 45, 85], "counter": [29, 30, 31, 35, 38, 45], "mapp": [29, 30, 31, 35, 38, 45], "scall": [29, 35, 38, 45], "access": [29, 35, 38, 45, 85], "unsupport": [29, 30, 31, 35, 38, 45], "classmethod": [29, 30, 31, 34, 35, 36, 38, 42, 45, 46, 48, 71, 72, 73], "faces_wf_compon": [29, 30, 31, 35, 38, 45, 47, 85], "num_fac": [29, 30, 31, 35, 38, 45, 85], "num_qubit": [29, 30, 31, 35, 38, 45, 47, 71, 72, 73, 85], "size": [29, 30, 31, 34, 35, 36, 38, 42, 44, 45, 56, 71, 72, 73, 85], "wf_coordin": [29, 30, 31, 35, 38, 45, 47, 85], "wf_loop_ind": [29, 30, 31, 35, 38, 45, 47, 85], "wf_operator_dict": [29, 30, 31, 35, 38, 45, 85], "zxxz": 29, "wf_q_indic": [29, 30, 31, 35, 38, 45, 47, 85], "pxxzzxx": [30, 31], "diagon": [30, 31], "bar": [30, 85], "hour": [30, 31, 85], "glass": [30, 31], "diagonalhourglasstil": [30, 85], "xx": [30, 35, 73, 86], "pzzxxzz": [30, 31], "zz": [30, 73], "v9": 31, "q9": [31, 35, 38, 85], "q10": [31, 35, 38, 85], "xxx": [31, 45], "11": [31, 35, 38, 85, 86], "zzz": [31, 45], "next_edg": 32, "previous_edg": 32, "shapeobject": [32, 33, 44, 50, 51], "endpoint": 32, "next": [32, 42, 85, 86], "add_par": [32, 33, 43, 44, 50, 51], "parent": [32, 33, 43, 44, 50, 51], "create_id": [32, 33, 43, 44, 50, 51], "track": [32, 33, 43, 44, 48, 50, 51, 72], "previous": [32, 33, 43, 44, 50, 51, 85], "been": [32, 33, 43, 44, 50, 51, 85], "last_id": [32, 33, 43, 44, 50, 51], "center": [34, 36, 57, 69], "dim": [34, 37, 71, 72, 73], "bound": [34, 42, 72, 73, 85], "box": [34, 42, 85], "aabb": [34, 36, 85], "nd": 34, "ndarri": 34, "dimens": [34, 37, 54, 69, 70, 71, 72, 73, 85], "descript": [34, 72, 85], "bounding_box_from_lin": [34, 42], "point1": [34, 48], "point2": [34, 48], "points1": 34, "points2": 34, "bounds1": 34, "bounds2": 34, "smallest": [34, 85], "test": [34, 58, 85], "els": [34, 85], "expand": [34, 36, 71, 72, 73], "amount": [34, 36, 85], "increas": [34, 42, 85], "along": [34, 85], "axi": [34, 85], "vector": [34, 36, 39, 42, 44, 55, 57, 59, 61, 63, 64, 65, 70, 71, 72, 73, 85], "intercept": 34, "line": [34, 42], "ax": [34, 85], "set_min_max": 34, "min_point": 34, "max_point": 34, "max": [34, 72], "min": [34, 85], "cz": 35, "axx": 35, "q11": [35, 38, 85], "q12": [35, 38, 85], "steelblu": [35, 44, 45, 85], "red": [35, 85], "12": [35, 38, 85], "8660254037844386": 35, "46410162": 35, "59807621": 35, "7320508075688772": 35, "cx": [35, 38, 85, 86], "xxxxxx": [35, 38, 85], "cyzx2": [35, 85], "hxx": [35, 85], "xzyxzi": 35, "zzzzzz": [35, 38], "dzx": 35, "zeroth": 36, "width": [36, 70], "height": 36, "someth": [36, 72, 73], "went": [36, 72, 73], "wrong": [36, 72, 73], "apply_transform_from": 36, "transform": [36, 68], "find_pre_transform_length": 36, "shear": 36, "generate_point": 36, "make_transform": 36, "restrict": [36, 85], "in_plac": 36, "new": [36, 40, 50, 71, 72, 73, 85], "fit": [36, 85], "geometrybound": 36, "modifi": [36, 71, 72, 85], "bounding_box": 36, "restrict_for_til": 36, "expand_valu": 36, "alpha": [36, 85], "complet": [36, 79, 85], "fill": 36, "ensur": 36, "entir": [36, 72, 73, 85], "provi": 36, "approxim": [36, 85], "perform": [36, 85], "tile_s": 36, "optim": 36, "factori": [36, 76], "octa": 38, "q13": 38, "q14": 38, "q15": 38, "doubl": [38, 45], "c8": 38, "9238795325112867": 38, "16": [38, 52, 85], "s8": 38, "3826834323650897": 38, "15432203": 38, "61312593": 38, "6892463972414662": 38, "230442497387663": 38, "zzzzzzzz": 38, "xxxxxxxx": 38, "15": 38, "twomanifold": [39, 42], "r2": [39, 42], "ison": 39, "rot_matrix": 39, "theta": [39, 85], "matrix": [39, 44, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 85], "maintain": [40, 85], "pointer": 40, "decrement_qubit": 40, "decrement": 40, "increment": 40, "qubits_count": 40, "add_data_arrai": 41, "data_arrai": 41, "ndarrai": [41, 42, 47, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "del_data_arrai": 41, "select": [42, 71, 72, 73, 85], "sublattic": 42, "epsilon": [42, 48, 85], "wind": 42, "contains_quad_winding_numb": 42, "deterin": 42, "polygon": 42, "pip": [42, 85], "problem": [42, 85], "On": [42, 85], "l2": 42, "interior": 42, "hornmann": 42, "agatho": 42, "20": [42, 85], "2001": 42, "131": 42, "144": 42, "With": [42, 44, 85], "slower": 42, "later": [42, 85], "date": [42, 72], "slow": 42, "larger": [42, 85], "close": [42, 85], "contains_ray_trac": 42, "horizont": 42, "infin": 42, "straight": 42, "sophist": 42, "verison": 42, "real": [42, 85, 86], "equal": [42, 71, 72, 73, 85], "001": 42, "create_lin": 42, "expens": [42, 86], "better": [42, 49, 85], "slightli": [42, 85], "is_between": 42, "strict": [42, 85], "Will": [42, 44], "squeez": [42, 71, 72, 73], "inequ": 42, "rect": 42, "direct": [42, 85, 86], "scale1": 42, "scale2": 42, "delta": [42, 85], "dtype": [42, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 85], "rectangl": 42, "labl": 42, "r3": 42, "r1": 42, "r0": 42, "corner": 42, "up": [42, 44, 72, 73], "live": 42, "definit": [42, 79, 85], "yet": [42, 85], "2d": [42, 71, 73], "head": [42, 68], "toward": 42, "proceed": 42, "obj": 42, "children": 43, "intern": [44, 71, 85], "sever": [44, 85], "subcompon": 44, "ex": [44, 48, 73], "delete_subtre": 44, "show_axi": [44, 85], "show_qubit": [44, 85], "figsiz": [44, 85], "point_siz": 44, "50": [44, 85], "ycolor": 44, "moment": [44, 85], "is_insid": 44, "inside_level": [44, 85], "boundary_level": [44, 85], "exclud": [44, 85], "debug": 44, "subshel": 44, "in_vertic": 44, "def": [44, 85], "vertex_path": [44, 85], "deflault": 44, "That": [44, 71, 72, 85], "exlud": 44, "noth": [44, 85], "extra": [44, 85], "print": [44, 52, 71, 72, 73, 84, 85, 86], "integer_snap": 44, "snap": 44, "rotate2d": 44, "angl": 44, "90": 44, "about_point": 44, "inplac": [44, 71, 72, 73], "shell2symplect": 44, "from_index": 44, "from_qubit": 44, "symplect": [44, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73], "shift": 44, "traslat": 44, "other_shel": 44, "disjoint": 44, "diamond": [45, 85], "orient": 45, "wf_orient": 45, "tile_typ": 48, "rssc": 48, "po": [50, 54, 85], "set_posit": 50, "global": [50, 71, 72, 73], "shallowcopi": 50, "shallow": [50, 71, 72, 73], "linit": 51, "compris": 51, "prop_dict": 52, "citat": 52, "necessari": [52, 85], "hyperbolic_gen": 52, "hyperbolic_gener": [52, 74], "isotropic_gen": 52, "is_css_kei": 52, "is_decomposable_kei": 52, "is_degenerate_kei": 52, "is_gf4linear_kei": 52, "is_triorthogonal_kei": 52, "row": [53, 59, 60, 67, 68, 71, 73, 85], "gf": [53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "zero": [53, 55, 65, 85], "abelian": [53, 60, 85], "subgroup": [53, 60, 85], "mutual": [53, 73], "commut": [53, 55, 65, 71, 72, 73, 85], "bool_": [53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 85], "augment": 54, "ident": [54, 56, 73, 81, 85], "m": [54, 85], "top": 54, "bottom": 54, "agument": 54, "One": [54, 85], "unknown": [54, 71, 72, 73, 85], "_augment_mat": 54, "hyperbol": [55, 58, 64, 65, 69], "partner": [55, 64, 85], "let": [55, 57, 64, 65, 70, 85], "m_0": [55, 57, 64], "m_": [55, 57, 64], "v": [55, 64, 71, 85], "m_index": 55, "pairwis": 55, "e": [55, 72, 73, 85, 86], "commmut": 55, "m_i": [55, 64, 85], "anticommut": [55, 72, 73, 85], "simplecticmatrix": 55, "full": [55, 57, 71, 72, 73, 85], "rank": [55, 68, 73, 85], "wrt": 55, "av": [55, 64, 85], "astyp": [55, 56, 64, 65, 67, 68, 69, 70, 71, 73, 85], "_build_hyper_partn": [55, 64, 85], "locate_hyper_partn": [55, 85], "_locate_hyper_partn": [55, 64], "note": [55, 71, 72, 73, 85, 86], "proposit": [55, 85], "nielsen": [55, 85], "chuang": [55, 85], "lambda": [56, 85], "i_n": 56, "_create_lambda_matrix": 56, "cntr": 57, "op": 57, "c_0": 57, "c_1": [57, 85], "c_": [57, 85], "center_matrix": 57, "m_1": 57, "Not": [57, 68, 85], "matric": [57, 58, 59, 65, 69, 70, 71, 73, 85], "symnplect": 58, "matrix1": 59, "matrix2": 59, "inpiut": 59, "is_symplectic_vector_form": [61, 62], "is_symplectic_matrix_form": [61, 63], "dimension": [62, 63, 64, 68, 70], "column": [62, 63, 64, 65, 68, 73], "is_symplectic_form": [62, 63], "int8": 63, "noncommut": 64, "parter": 64, "build_hyper_partn": [64, 85], "arang": [65, 85], "xrang": 65, "zrang": 65, "a_0": 65, "a_": 65, "a_i": [65, 85], "x_0": 65, "x_": [65, 85], "l": [65, 85], "z_0": 65, "z_": [65, 85], "x_i": [65, 85], "z_i": [65, 85], "hyerbol": 65, "b_0": 65, "b_": 65, "b_i": 65, "x_j": [65, 85], "z_j": [65, 85], "j": [65, 85], "op_": 65, "bf": 65, "iter": [65, 73, 85, 86], "x1x2x3": 65, "x2x3": 65, "x2": [65, 85], "z2": 65, "_make_commute_hyp": 65, "_rank": 66, "reduc": [67, 68, 85], "echelon": [67, 68], "_rref": [67, 68], "rref_complet": 67, "_rref_complet": [67, 68], "pivot": 68, "kth": 68, "rref_mat": 68, "transform_mat": 68, "tranform": 68, "rref": 68, "rank_": 68, "symplet": [69, 85], "gram": 69, "schmidt": 69, "gramschmidt": 69, "upon": 69, "split": 69, "accross": 69, "center_": [69, 85], "_symplectic_gram_schmidt": 69, "mat1": 70, "mat2": 70, "math": 70, "2m": [70, 85], "cdot": [70, 85], "lambda_n": 70, "_symplectic_product_vv": 70, "_symplectic_product_dens": 70, "phase_exp": [71, 72, 73], "baseoper": [71, 72, 73], "adjointmixin": 71, "multiplymixin": 71, "represent": [71, 72, 82], "phase": [71, 72, 73, 85], "izx": [71, 85], "modul": [71, 82, 85], "expon": [71, 72, 73], "z_4": [71, 73], "imput": 71, "coeffici": [71, 72, 73, 85], "adjoint": [71, 72, 73], "all_commut": [71, 72, 73], "qarg": [71, 72, 73], "paulisbas": 71, "dot": [71, 72, 73, 85], "anti": [71, 72, 73], "compos": [71, 72, 73, 85], "front": [71, 72, 73], "composit": [71, 72, 73], "To": [71, 72, 73, 85], "multipl": [71, 72, 85], "likewis": [71, 85], "a_1": 71, "a_2": 71, "a_k": 71, "b_1": 71, "b_2": 71, "b_k": 71, "wise": [71, 73], "paulit": 71, "compositon": 71, "cl": [71, 72], "clase": [71, 72], "deep": [71, 72, 73], "multipli": [71, 72], "obtain": [71, 72], "binari": [71, 72, 85], "evolv": [71, 72, 73], "frame": [71, 72, 73, 85], "heisenberg": [71, 72, 73], "pictur": [71, 72], "evolut": [71, 72, 73], "prime": [71, 72, 73], "dagger": [71, 72, 73, 85], "By": [71, 72, 73, 85], "schr\u00f6dinger": [71, 72, 73], "yield": [71, 72, 73, 85], "faster": [71, 72, 73], "don": [71, 72, 73], "revers": [71, 72], "tensor": [71, 72, 73, 85], "otim": [71, 72, 85], "input_dim": [71, 72, 73], "output_dim": [71, 72, 73], "power": [71, 72, 73, 85], "itself": [71, 72, 73, 85], "reshap": [71, 72, 73], "preserv": [71, 72, 73, 85], "constant": [71, 72, 73, 85], "set_pauli_encod": [71, 72, 73], "iyzx": [71, 72, 73], "default_external_pauli_rep_format": [71, 72, 73], "set_phase_encod": [71, 72, 73], "default_external_phase_encod": [71, 72, 73], "set_print_phase_encod": [71, 72, 73], "phase_encod": [71, 72, 73], "qubit_ord": [71, 72, 73], "extern": [71, 72, 73, 85], "syntax_cod": [71, 72, 73], "syntax_str": [71, 72, 73], "latex": [71, 72, 73], "set_tensor_encod": [71, 72, 73], "yzx": [71, 72, 73, 85], "default_external_tensor_encod": [71, 72, 73], "to_label": [71, 72, 73], "output_pauli_encod": [71, 72, 73], "no_phas": [71, 72, 73], "return_phas": [71, 72, 73], "index_start": [71, 72, 73], "index_str": [71, 72, 73], "representatiojn": [71, 72, 73], "notat": [71, 72, 73, 85], "external_pauli_encod": [71, 72, 73], "appear": [71, 72, 73, 85], "matter": [71, 72, 73], "what": [71, 72, 73, 77, 85, 86], "xzy": [71, 72, 73, 85], "adjust": [71, 72, 73], "full_group": [71, 72, 73], "product_syntax": [71, 72, 73, 85], "aree": [71, 72, 73], "lowest": [71, 72, 73], "reult": [71, 72, 73], "scalar": [71, 72, 73], "insert": [71, 72, 73, 81, 86], "unsign": [71, 72, 73], "q": [71, 72, 73, 85], "transpos": [71, 72, 73, 85], "external_phase_encod": [71, 72, 73], "external_qubit_ord": [71, 72, 73], "external_syntax": [71, 72, 73], "external_tensor_encod": [71, 72, 73], "print_phase_encod": [71, 72, 73], "input_shap": [71, 72, 73], "output_shap": [71, 72, 73], "num_i": [71, 72, 73], "pauli_encod": [71, 72, 73], "tensor_encod": [71, 72, 73], "1d": [71, 73], "_x": [71, 73], "marked": [71, 73], "_z": [71, 73], "input_pauli_encod": [72, 73], "input_qubit_ord": [72, 73, 85], "tuple_ord": [72, 73], "progress": 72, "phase_expon": 72, "stype": 72, "tuple_prd": 72, "append_pauli": 72, "pauli_label": 72, "deprec": 72, "append": [72, 85], "month": [72, 85], "cannot": [72, 73, 85], "incompat": 72, "while": [72, 85, 86], "ind": [72, 73, 85], "delete_qubit": 72, "equiv": 72, "from_label": 72, "insert_pauli": 72, "target": 72, "similar": [72, 85], "g": [72, 85, 86], "zyxi": 72, "zy": [72, 73], "xi": [72, 73, 85, 86], "instrs2symplect": 72, "instr": 72, "invers": [72, 73], "kron": 72, "kroneck": 72, "p_2": 72, "p_1": 72, "terra": [72, 85], "17": [72, 85], "p2": 72, "pauli_singl": 72, "random": [72, 73, 84, 85, 86], "seed": 72, "random_pauli": 72, "quantum_info": [72, 73, 85], "set_trunc": 72, "val": [72, 85], "charact": [72, 85], "truncat": 72, "disabl": [72, 85], "sgn_prod": 72, "p1": 72, "now": [72, 86], "handl": [72, 81], "p_3": 72, "without": [72, 85], "sign": [72, 85], "1j": 72, "to_cpx_matrix": 72, "spars": [72, 73, 85], "to_instruct": [72, 81], "instruct": 72, "to_matrix": [72, 73], "to_spmatrix": 72, "csr": [72, 73], "scipi": 72, "csr_matrix": 72, "update_x": 72, "partial": 72, "setter": 72, "update_z": 72, "whole": 72, "num_clbit": 72, "pltb_int": 72, "pltb_str": 72, "linearmixin": 73, "groupmixin": 73, "iixxz": 73, "pdata": 73, "anticommutes_with_al": 73, "multi": 73, "satisfi": [73, 85], "argsort": 73, "sort": 73, "tabl": 73, "lexicograph": 73, "addition": 73, "term": [73, 85], "commutes_with_al": 73, "underli": 73, "from_symplect": 73, "old": 73, "getaslist": 73, "slc": 73, "group_qubit_wise_commut": 73, "partit": [73, 85], "label_it": 73, "lazi": 73, "labeliter": 73, "matrix_it": 73, "matrixiter": 73, "shuffl": 73, "ii": [73, 85], "ix": [73, 85, 86], "iz": [73, 85], "yi": 73, "yx": 73, "yy": 73, "yz": [73, 85], "zi": [73, 85], "pt": 73, "srt": 73, "effici": [73, 85, 86], "alloc": 73, "advanc": 73, "bmatrix": [73, 85], "dens": [73, 85], "return_index": 73, "return_count": 73, "item": 73, "unique_indic": 73, "occurr": 73, "unique_count": 73, "come": [73, 85], "_phase_exp": 73, "versu": 73, "num_pauli": 73, "with_gener": 74, "num_gen": 74, "style": 76, "pymatch": 76, "compar": [76, 77], "is_boundari": 77, "is_log": 77, "doesn": 77, "shot": 78, "4000": 78, "get_stim_circuit": 78, "thereof": [78, 81], "paulinoisemodel": [78, 81, 86], "com": [79, 85], "quantumlib": 79, "blob": [79, 85], "main": [79, 85], "doc": [79, 85], "md": 79, "control": [79, 85], "sdg": 79, "swap": [79, 85], "channel": [79, 85], "mandatori": 79, "eigenvalu": [79, 85], "total": [79, 85], "pariti": [79, 86], "again": [79, 85], "stim_circuit": 79, "stim_measurement_data": 79, "hashabl": 80, "accord": [81, 85], "idl": [81, 85], "idle_": 81, "qc": 81, "idle_1": 81, "noisy_circuit": 81, "convers": 82, "interact": [83, 85], "h_": 84, "text": [84, 85], "drift": 84, "frac": [84, 85], "omega": 84, "randint": 84, "tomorrow": 85, "great": 85, "tut19": 85, "ibm": 85, "servic": 85, "micheal": 85, "heali": 85, "usa": 85, "thoma": 85, "alexand": 85, "canada": 85, "edward": 85, "chen": 85, "introduc": 85, "attende": 85, "alongsid": 85, "openqasm3": 85, "languag": 85, "achiev": 85, "advantag": 85, "overview": 85, "hardwar": 85, "flow": 85, "taught": 85, "commun": 85, "qec_framework_ieee_2022": 85, "ipynb": 85, "rapidli": 85, "envolv": 85, "field": 85, "experiment": 85, "theoret": 85, "imporant": 85, "public": 85, "most": 85, "shame": 85, "extens": 85, "generaliz": 85, "document": 85, "significi": 85, "wast": 85, "qiksit": 85, "apach": 85, "licens": 85, "isol": 85, "user": 85, "flexibl": 85, "modular": 85, "architectur": 85, "priorit": 85, "eas": 85, "speed": 85, "conveni": 85, "three": 85, "componet": 85, "cli": 85, "command": 85, "graphic": 85, "edit": 85, "abil": 85, "load": 85, "save": 85, "explor": 85, "best": 85, "visual": 85, "appeal": 85, "stabl": 85, "modern": 85, "help": 85, "theori": 85, "research": 85, "machin": 85, "pi": 85, "gui": 85, "script": 85, "repo": 85, "jame": 85, "wooton": 85, "andrew": 85, "cross": 85, "minut": 85, "higher": 85, "virtual": 85, "qrao": 85, "remaind": 85, "activ": 85, "qiskit_qec_env": 85, "wish": 85, "python3": 85, "bin": 85, "folder": 85, "directori": 85, "git": 85, "gitignor": 85, "prefer": 85, "automat": 85, "enter": 85, "direnv": 85, "clone": 85, "cd": 85, "txt": 85, "dev": 85, "pylatexenc": 85, "altern": 85, "properli": 85, "sure": 85, "exact": 85, "shown": 85, "tox": 85, "pylint": 85, "jupyt": 85, "notebook": [85, 86], "project": 85, "cach": 85, "upgrad": 85, "troubl": 85, "lab": 85, "past": 85, "cell": 85, "Then": 85, "good": 85, "concern": 85, "funcdment": 85, "storag": 85, "mathbb": 85, "f": 85, "_2": 85, "messag": 85, "therefor": 85, "n_2": 85, "idea": [85, 86], "dan": 85, "dun": 85, "steve": 85, "flammia": 85, "summer": 85, "school": 85, "2022": 85, "simplist": 85, "sai": 85, "000": 85, "111": 85, "010011": 85, "0000000": 85, "1111111": 85, "1000000": 85, "1100000": 85, "1110000": 85, "1111000": 85, "1111100": 85, "1111110": 85, "less": 85, "half": [85, 86], "major": [85, 86], "vote": 85, "0000000000": 85, "0000100110": 85, "abl": 85, "thing": 85, "destroi": 85, "repeatedli": 85, "unknow": 85, "simplest": 85, "fundament": 85, "world": 85, "hilbert": 85, "think": 85, "inner": 85, "langl": 85, "rangl": 85, "induc": 85, "norm": 85, "metric": 85, "convent": 85, "bra": 85, "ket": 85, "mostli": 85, "adjunct": 85, "varaiabl": 85, "phi": 85, "act": 85, "psi": 85, "rai": 85, "known": 85, "pure": 85, "mechan": 85, "axiom": 85, "denisti": 85, "mix": 85, "howev": 85, "densiti": 85, "limit": 85, "aspect": 85, "rho_": 85, "unitari": 85, "action": 85, "mapsto": 85, "align": 85, "mathcal": 85, "offer": 85, "signific": 85, "cost": 85, "discret": 85, "observ": 85, "superposit": 85, "fatal": 85, "situat": 85, "decomposit": 85, "oplu": 85, "qauntum": 85, "simeq": 85, "just": 85, "subspac": 85, "trace": 85, "cptp": 85, "map": 85, "rightarrow": 85, "arbitari": 85, "recover": 85, "esist": 85, "rho_a": 85, "rho_b": 85, "rho": 85, "_b": 85, "circ": [85, 86], "studi": 85, "interest": 85, "know": 85, "understand": 85, "introducd": 85, "plai": 85, "role": 85, "sigma_0": 85, "sigma_i": 85, "quad": 85, "sigma_1": 85, "sigma_x": 85, "sigma_2": 85, "sigma_z": 85, "sigma_3": 85, "nice": 85, "hermitian": 85, "involutori": 85, "textrm": 85, "_": 85, "2x2": 85, "sigma_a": 85, "_1": 85, "sometim": 85, "deifn": 85, "natur": 85, "univers": 85, "_n": 85, "x_1": 85, "x_2": 85, "x_n": 85, "z_1": 85, "z_2": 85, "z_n": 85, "effectic": 85, "defint": 85, "t_i": 85, "th": 85, "remain": 85, "e_0": 85, "e_1": 85, "orthonorm": 85, "qquad": 85, "2n": 85, "written": 85, "rho_q": 85, "tau": 85, "delta_1": 85, "delta_2": 85, "delta_n": 85, "yxiz": 85, "y_0x_1z_3": 85, "ixz": 85, "x_0y_3": 85, "xyxyxxxiiix": 85, "mutilpl": 85, "interpret": 85, "primarili": 85, "respons": [85, 86], "qikit": 85, "rewritten": 85, "onc": 85, "becom": 85, "merg": [85, 86], "plu": 85, "mention": 85, "decid": 85, "ineffici": 85, "especi": 85, "basesparsepauli": 85, "sparsepauli": 85, "sparsepaulilist": 85, "loss": 85, "delta_j": 85, "rho_j": 85, "f_2": 85, "rho_1": 85, "rho_n": 85, "ixzi": 85, "mathemat": 85, "phantom": 85, "f_4": 85, "extend": 85, "cetera": 85, "give": 85, "vert": 85, "latex_syntax": 85, "x0y1x2y3x4x5x6x10": 85, "ixyxz": 85, "prone": 85, "iiiiiixiiiiiiiiiiiiiiiiiiiiiiiz": 85, "ix_6z_": 85, "30": 85, "compact": 85, "far": 85, "much": 85, "paulirep": 85, "x1x4y6": 85, "yixiixi": 85, "taken": 85, "largest": 85, "x1i9": 85, "iiiiiiiixi": 85, "x1x2x3x4": 85, "y9y6x3x1": 85, "iiiiixxxxi": 85, "yiiyiixixi": 85, "hold": 85, "p_1n_1p_2n_2": 85, "p_kn_k": 85, "p_i": 85, "n_1": 85, "n_k": 85, "equio": 85, "bilinear": 85, "w": 85, "foral": 85, "degener": 85, "skew": 85, "symmetr": 85, "pq": 85, "qp": 85, "finit": 85, "said": 85, "proper": 85, "subset": 85, "burnsid": 85, "theorem": 85, "1016": 85, "jalgebra": 85, "2013": 85, "005": 85, "g_1": 85, "g_2": 85, "g_k": 85, "leq": 85, "_k": 85, "_j": 85, "g_l": 85, "p_n": 85, "g_i": 85, "g_j": 85, "19": 85, "x0": 85, "x1": 85, "z0": 85, "procedur": 85, "g_m": 85, "unprocess": 85, "setup": 85, "leftarrow": 85, "backslash": 85, "everi": [85, 86], "cup": 85, "vg": 85, "2r": 85, "21": 85, "22": 85, "x_k": 85, "y_1": 85, "y_k": 85, "y_i": 85, "make_commute_hyp": 85, "symplectic_gram_schmidt": 85, "x0y1x2": 85, "x0x1x3": 85, "y0x1x2z3": 85, "x0z1z2y3": 85, "shall": 85, "commonli": 85, "stabilz": 85, "princip": 85, "s_1": 85, "s_2": 85, "s_k": 85, "s_j": 85, "sum": [85, 86], "topolog": [85, 86], "demonstr": [85, 86], "fact": 85, "cousin": 85, "simpli": 85, "becaus": 85, "stabilzi": 85, "solv": 85, "propos": [85, 86], "wild": 85, "0903": 85, "5256": 85, "gottesman": 85, "phd": 85, "dissert": 85, "sect": 85, "setminu": 85, "he": 85, "dress": 85, "sp": 85, "psp": 85, "29": 85, "x_new": 85, "z_new": 85, "n_pn": 85, "x0x3": 85, "x0z2": 85, "x0z1": 85, "david": 85, "poulin": 85, "pou05": 85, "proce": 85, "underbrac": 85, "destabil": 85, "factor": 85, "protect": 85, "choic": [85, 86], "practic": 85, "bare": 85, "make_isotropic_hyperbolic_form": 85, "x1y3": 85, "x2x3y4": 85, "z1z5": 85, "cen": 85, "z1x2x3y4z5": 85, "31": 85, "codebuild": 85, "subsystem_surface_code_build": 85, "subsystemsurfacecodebuild": 85, "equat": 85, "mathrm": 85, "supp": 85, "neq": 85, "min_": 85, "gp": 85, "hard": 85, "cite": 85, "vardy1997": 85, "polynomi": 85, "rp": 85, "unless": 85, "dumer2003": 85, "exactli": 85, "cw": 85, "reduct": 85, "kapshikar2022": 85, "nevertheless": 85, "valuabl": 85, "our": [85, 86], "belong": 85, "straightforward": 85, "cal": 85, "s_i": 85, "membership": 85, "latter": 85, "enumer": [85, 86], "sum_": 85, "3n": 85, "3ne": 85, "goal": 85, "synd": 85, "w_1": 85, "w_2": 85, "approx": 85, "t_": 85, "w_i": 85, "suppos": 85, "cap": 85, "6ne": 85, "sigma": 85, "ee": 85, "intersect": 85, "proport": 85, "uniformli": 85, "2k": 85, "subroutin": 85, "exercis": 85, "review": 85, "literatur": 85, "certain": 85, "minimum_dist": 85, "3x3": 85, "bacon": 85, "shor": 85, "gauge_op_str": 85, "xiixiiiii": 85, "ixiixiiii": 85, "iixiixiii": 85, "iiixiixii": 85, "iiiixiixi": 85, "iiiiixiix": 85, "zziiiiiii": 85, "izziiiiii": 85, "iiizziiii": 85, "iiiizziii": 85, "iiiiiizzi": 85, "iiiiiiizz": 85, "x3x6": 85, "z0z1": 85, "z4z5": 85, "x4x7": 85, "z6z7": 85, "x2x5": 85, "x5x8": 85, "z7z8": 85, "bacon_shor_cod": 85, "34": 85, "codet": 85, "de": 85, "yzizzzizizizzzizi": 85, "ixzziizzzzzziizzx": 85, "zzxiiziiziziiziix": 85, "zizyzzzziiiizzzzi": 85, "iiiixizizzizzizix": 85, "zzizzyiiiizziiiii": 85, "iizziiyziziiizizi": 85, "iziiizixzzzzzzzzx": 85, "zzzzzzzzxiziiizix": 85, "ziziiizizyiizziii": 85, "iiiizziiiiyzzizzi": 85, "izizzizzizixiiiix": 85, "zzzziiiizzzzyzizi": 85, "iiziiziziiziixzzx": 85, "zziizzzzzziizzxix": 85, "zizzzizizizzzizyi": 85, "code_17_1_7": 85, "35": 85, "max_weight": 85, "c_n": 85, "infti": 85, "_nt": 85, "h_j": 85, "cnot": 85, "ij": 85, "hadamard": 85, "sqrt": 85, "eta": 85, "eighth": 85, "uniti": 85, "eqsim": 85, "s_3": 85, "2h": 85, "xyz": 85, "zyx": 85, "sh": 85, "3h": 85, "hsh": 85, "s_": 85, "s_n": 85, "pi_2": 85, "simplic": 85, "coeffient": 85, "isomorph": 85, "wr": 85, "automorph": 85, "aut": 85, "four": 85, "xixi": 85, "iizz": 85, "zizi": 85, "izii": 85, "xixx": 85, "hyperbolc": 85, "diffiult": 85, "inspect": 85, "perserv": 85, "anyth": 85, "comment": 85, "i_a": 85, "i_b": 85, "h_a": 85, "h_b": 85, "ab": 85, "exchang": 85, "hand": 85, "notin": 85, "100": 85, "carri": 85, "cacluat": 85, "cardinat": 85, "soon": 85, "framemwork": 85, "librarian": 85, "40": 85, "y0y4": 85, "codelibarian": 85, "ldpc": 85, "ini": 85, "dummi": 85, "although": 85, "realli": 85, "filenam": 85, "tell": 85, "ontain": 85, "codelibraian": 85, "themselv": 85, "infom": 85, "ite": 85, "back": 85, "info_only_": 85, "flag": 85, "41": 85, "42": 85, "43": 85, "44": 85, "27": 85, "z0z1x2": 85, "x1z2x3z4": 85, "x0x1y3y4": 85, "z0x3": 85, "z1x4": 85, "z1z3": 85, "65e7ef69": 85, "1b5b": 85, "49a7": 85, "97f7": 85, "f41ca540cc8f": 85, "45": 85, "360": 85, "26": 85, "48": 85, "64": 85, "tilecodefactori": 85, "46": 85, "47": 85, "celluat": 85, "appraoch": 85, "simplifi": 85, "choosen": 85, "bedlow": 85, "regulat": 85, "collect": 85, "lai": 85, "planar": 85, "49": 85, "58": 85, "59": 85, "57": 85, "diagonalbartil": 85, "33": 85, "octasquaretil": 85, "squarediamondtil": 85, "enabl": 85, "creation": 85, "wf": 85, "car": 85, "plant": 85, "brand": 85, "lot": 85, "67": 85, "68": 85, "02": 85, "69": 85, "show_work": 85, "occupi": 85, "x4x5x6x7x8x9": 85, "z4z5z6z7z8z9": 85, "x1x3x6x8": 85, "z1z3z6z8": 85, "x10x11x12x13x14x15": 85, "z10z11z12z13z14z15": 85, "x7x9x12x14": 85, "z7z9z12z14": 85, "x13x15x16x17": 85, "z13z15z16z17": 85, "x18x19x20x21": 85, "z18z19z20z21": 85, "x0x1x4x6x20x21": 85, "z0z1z4z6z20z21": 85, "x22x23x24x25x26x27": 85, "z22z23z24z25z26z27": 85, "x4x5x19x21x24x26": 85, "z4z5z19z21z24z26": 85, "x5x7x10x12x26x27": 85, "z5z7z10z12z26z27": 85, "x10x11x25x27x28x29": 85, "z10z11z25z27z28z29": 85, "x11x13x16x29": 85, "z11z13z16z29": 85, "x30x31x32x33": 85, "z30z31z32z33": 85, "x18x19x22x24x32x33": 85, "z18z19z22z24z32z33": 85, "x22x23x31x33x34x35": 85, "z22z23z31z33z34z35": 85, "x23x25x28x35": 85, "z23z25z28z35": 85, "x30x31x34x36": 85, "z30z31z34z36": 85, "70": 85, "8660254": 85, "73205081": 85, "bundl": 85, "71": 85, "orang": 85, "blue": 85, "basudha": 85, "srivastava": 85, "anton": 85, "frisk": 85, "kockum": 85, "mat": 85, "granath": 85, "22331": 85, "04": 85, "698": 85, "unus": 85, "_weight_len": 85, "len": 85, "m_grad": 85, "near_lin": 85, "find_ind": 85, "lines_": 85, "triangle_po": 85, "zip": 85, "on_line_indic": 85, "elif": 85, "line_ind": 85, "line_index": 85, "branch": 85, "yzx2_code_factori": 85, "51": 85, "52": 85, "yxz2_code": 85, "53": 85, "compass": 85, "illustr": 85, "journal": 85, "ap": 85, "prx": 85, "1103": 85, "physrevx": 85, "011022": 85, "chamberland": 85, "zhu": 85, "yoder": 85, "hertzberg": 85, "awc": 85, "prl": 85, "physrevlett": 85, "128": 85, "110504": 85, "kim": 85, "sundaresan": 85, "srinivasan": 85, "li": 85, "c\u00f3rcole": 85, "takita": 85, "2203": 85, "07205": 85, "harper": 85, "thorbeck": 85, "awcross1": 85, "54": 85, "nonumb": 85, "overbrac": 85, "prod_i": 85, "bulk": 85, "significantli": 85, "depth": 85, "stuctur": 85, "categori": 85, "outsid": 85, "pedagog": 85, "teach": 85, "scope": 85, "realiz": 85, "put": 85, "examin": 85, "signatur": 85, "translat": 85, "eigenst": 85, "ideal": 85, "dure": 85, "cycl": 85, "sensit": 85, "hypergraph": 85, "subsequ": 85, "repetitioncodecircuit": [85, 86], "mpl": 85, "quantumregist": 85, "classicalregist": 85, "examples_qasm": 85, "openqasm": 85, "ninclud": 85, "qelib1": 85, "inc": 85, "nqreg": 85, "code_qubit": 85, "link_qubit": 85, "ncreg": 85, "round_0_link_bit": 85, "round_1_link_bit": 85, "code_bit": 85, "nx": 85, "nbarrier": 85, "ncx": 85, "nmeasur": 85, "nreset": 85, "qasm": 85, "from_qasm_str": 85, "example_explan": 85, "unfortun": 85, "juli": 85, "cours": 85, "address": 85, "quantumjim": 85, "qec_lectur": 85, "jan": 85, "feb": 85, "2023": 85, "video": 85, "lectur": 85, "walk": 86, "wa": 86, "nicola": 86, "delfoss": 86, "naomi": 86, "nickerson": 86, "2020": 86, "almost": 86, "per": 86, "meet": 86, "atyp": 86, "grown": 86, "twice": 86, "unweight": 86, "relev": 86, "faultenumer": 86, "unionfinddecod": 86, "surfacecodecircuit": 86, "arccircuit": 86, "quit": 86, "last": 86, "05": 86, "add_oper": 86, "set_error_prob": 86, "handi": 86, "try": 86, "prepar": 86, "normal": 86, "circumst": 86, "pick": 86, "fault_enumer": 86, "join": 86, "corrected_outcom": 86, "logical_outcom": 86, "css_z_logic": 86, "assert": 86}, "objects": {"": [[5, 0, 0, "-", "qiskit_qec"]], "qiskit_qec": [[0, 0, 0, "-", "analysis"], [1, 0, 0, "-", "circuits"], [2, 0, 0, "-", "codes"], [3, 0, 0, "-", "decoders"], [4, 0, 0, "-", "geometry"], [6, 0, 0, "-", "info"], [7, 0, 0, "-", "linear"], [8, 0, 0, "-", "operators"], [9, 0, 0, "-", "structures"], [10, 0, 0, "-", "utils"]], "qiskit_qec.circuits": [[16, 1, 1, "", "ArcCircuit"], [17, 1, 1, "", "CSSCodeCircuit"], [18, 1, 1, "", "CodeCircuit"], [19, 1, 1, "", "RepetitionCodeCircuit"], [20, 1, 1, "", "SurfaceCodeCircuit"]], "qiskit_qec.circuits.ArcCircuit": [[16, 2, 1, "", "AVAILABLE_METHODS"], [16, 2, 1, "", "METHOD_NAIVE"], [16, 2, 1, "", "METHOD_SPITZ"], [16, 3, 1, "", "check_nodes"], [16, 3, 1, "", "clean_code"], [16, 3, 1, "", "flatten_nodes"], [16, 3, 1, "", "get_error_coords"], [16, 3, 1, "", "is_cluster_neutral"], [16, 3, 1, "", "string2nodes"], [16, 3, 1, "", "string2raw_logicals"], [16, 3, 1, "", "transpile"]], "qiskit_qec.circuits.CSSCodeCircuit": [[17, 3, 1, "", "check_nodes"], [17, 3, 1, "", "is_cluster_neutral"], [17, 3, 1, "", "stim_detectors"], [17, 3, 1, "", "string2nodes"], [17, 3, 1, "", "string2raw_logicals"]], "qiskit_qec.circuits.CodeCircuit": [[18, 3, 1, "", "check_nodes"], [18, 3, 1, "", "is_cluster_neutral"], [18, 3, 1, "", "string2nodes"]], "qiskit_qec.circuits.RepetitionCodeCircuit": [[19, 3, 1, "", "check_nodes"], [19, 3, 1, "", "get_circuit_list"], [19, 3, 1, "", "is_cluster_neutral"], [19, 3, 1, "", "partition_outcomes"], [19, 3, 1, "", "readout"], [19, 3, 1, "", "string2nodes"], [19, 3, 1, "", "string2raw_logicals"], [19, 3, 1, "", "syndrome_measurement"], [19, 3, 1, "", "x"]], "qiskit_qec.circuits.SurfaceCodeCircuit": [[20, 3, 1, "", "check_nodes"], [20, 3, 1, "", "get_circuit_list"], [20, 3, 1, "", "is_cluster_neutral"], [20, 3, 1, "", "readout"], [20, 3, 1, "", "string2nodes"], [20, 3, 1, "", "string2raw_logicals"], [20, 3, 1, "", "syndrome_measurement"], [20, 3, 1, "", "x"], [20, 3, 1, "", "z"]], "qiskit_qec.codes": [[21, 1, 1, "", "CodeLibrarian"], [22, 1, 1, "", "CodeLibrary"], [23, 1, 1, "", "QECCode"], [24, 1, 1, "", "StabSubSystemCode"], [25, 4, 1, "", "all_small_codes"], [26, 4, 1, "", "small_code"]], "qiskit_qec.codes.CodeLibrarian": [[21, 3, 1, "", "get"], [21, 2, 1, "", "n_dir_format"], [21, 2, 1, "", "n_k_codes_file_format"]], "qiskit_qec.codes.CodeLibrary": [[22, 3, 1, "", "data2code"], [22, 3, 1, "", "in_range"], [22, 3, 1, "", "search"]], "qiskit_qec.codes.StabSubSystemCode": [[24, 3, 1, "", "draw"], [24, 2, 1, "", "generators"], [24, 2, 1, "", "n"]], "qiskit_qec.decoders": [[27, 1, 1, "", "DecodingGraph"], [28, 1, 1, "", "UnionFindDecoder"]], "qiskit_qec.decoders.DecodingGraph": [[27, 2, 1, "", "AVAILABLE_METHODS"], [27, 2, 1, "", "METHOD_NAIVE"], [27, 2, 1, "", "METHOD_SPITZ"], [27, 3, 1, "", "clean_measurements"], [27, 3, 1, "", "edge_in_graph"], [27, 3, 1, "", "get_edge_graph"], [27, 3, 1, "", "get_error_probs"], [27, 3, 1, "", "get_node_graph"], [27, 3, 1, "", "make_error_graph"], [27, 3, 1, "", "node_index"], [27, 3, 1, "", "update_attributes"], [27, 3, 1, "", "weight_syndrome_graph"]], "qiskit_qec.decoders.UnionFindDecoder": [[28, 3, 1, "", "cluster"], [28, 3, 1, "", "find"], [28, 3, 1, "", "get_corrections"], [28, 3, 1, "", "neighbouring_edges"], [28, 3, 1, "", "peeling"], [28, 3, 1, "", "process"]], "qiskit_qec.geometry": [[29, 1, 1, "", "CheckerBoardTile"], [30, 1, 1, "", "DiagonalBarTile"], [31, 1, 1, "", "DiagonalHourGlassTile"], [32, 1, 1, "", "Edge"], [33, 1, 1, "", "Face"], [34, 1, 1, "", "GeometryBounds"], [35, 1, 1, "", "HexagonTile"], [36, 1, 1, "", "Lattice"], [37, 1, 1, "", "Manifold"], [38, 1, 1, "", "OctaSquareTile"], [39, 1, 1, "", "Plane"], [40, 1, 1, "", "QubitCount"], [41, 1, 1, "", "QubitData"], [42, 1, 1, "", "Shape"], [43, 1, 1, "", "ShapeObject"], [44, 1, 1, "", "Shell"], [45, 1, 1, "", "SquareDiamondTile"], [46, 1, 1, "", "Tile"], [47, 1, 1, "", "TileFactory"], [48, 1, 1, "", "Tiling"], [49, 1, 1, "", "TwoManifold"], [50, 1, 1, "", "Vertex"], [51, 1, 1, "", "WireFrame"]], "qiskit_qec.geometry.CheckerBoardTile": [[29, 3, 1, "", "draw"], [29, 2, 1, "", "face_colors"], [29, 2, 1, "", "faces_wf_components"], [29, 2, 1, "", "num_faces"], [29, 2, 1, "", "num_qubits"], [29, 2, 1, "", "size"], [29, 2, 1, "", "u_vec"], [29, 2, 1, "", "v_vec"], [29, 2, 1, "", "wf_coordinates"], [29, 2, 1, "", "wf_loop_indicator"], [29, 2, 1, "", "wf_operator_dict"], [29, 2, 1, "", "wf_q_indices"]], "qiskit_qec.geometry.DiagonalBarTile": [[30, 3, 1, "", "draw"], [30, 2, 1, "", "face_colors"], [30, 2, 1, "", "faces_wf_components"], [30, 2, 1, "", "num_faces"], [30, 2, 1, "", "num_qubits"], [30, 2, 1, "", "size"], [30, 2, 1, "", "u_vec"], [30, 2, 1, "", "v_vec"], [30, 2, 1, "", "wf_coordinates"], [30, 2, 1, "", "wf_loop_indicator"], [30, 2, 1, "", "wf_operator_dict"], [30, 2, 1, "", "wf_q_indices"]], "qiskit_qec.geometry.DiagonalHourGlassTile": [[31, 3, 1, "", "draw"], [31, 2, 1, "", "face_colors"], [31, 2, 1, "", "faces_wf_components"], [31, 2, 1, "", "num_faces"], [31, 2, 1, "", "num_qubits"], [31, 2, 1, "", "size"], [31, 2, 1, "", "u_vec"], [31, 2, 1, "", "v_vec"], [31, 2, 1, "", "wf_coordinates"], [31, 2, 1, "", "wf_loop_indicator"], [31, 2, 1, "", "wf_operator_dict"], [31, 2, 1, "", "wf_q_indices"]], "qiskit_qec.geometry.Edge": [[32, 3, 1, "", "add_parent"], [32, 3, 1, "", "create_id"], [32, 2, 1, "", "last_id"]], "qiskit_qec.geometry.Face": [[33, 3, 1, "", "add_parent"], [33, 3, 1, "", "create_id"], [33, 2, 1, "", "last_id"]], "qiskit_qec.geometry.GeometryBounds": [[34, 3, 1, "", "bounding_box_from_line"], [34, 3, 1, "", "combine"], [34, 3, 1, "", "contains"], [34, 3, 1, "", "copy"], [34, 3, 1, "", "expand"], [34, 3, 1, "", "intercepts"], [34, 3, 1, "", "set_min_max"]], "qiskit_qec.geometry.HexagonTile": [[35, 3, 1, "", "draw"], [35, 2, 1, "", "face_colors"], [35, 2, 1, "", "faces_wf_components"], [35, 2, 1, "", "h"], [35, 2, 1, "", "num_faces"], [35, 2, 1, "", "num_qubits"], [35, 2, 1, "", "r"], [35, 2, 1, "", "size"], [35, 2, 1, "", "u_vec"], [35, 2, 1, "", "v_vec"], [35, 2, 1, "", "wf_coordinates"], [35, 2, 1, "", "wf_loop_indicator"], [35, 2, 1, "", "wf_operator_dict"], [35, 2, 1, "", "wf_q_indices"]], "qiskit_qec.geometry.Lattice": [[36, 3, 1, "", "apply_transform_from"], [36, 3, 1, "", "find_pre_transform_length"], [36, 3, 1, "", "generate_points"], [36, 3, 1, "", "make_transform"], [36, 3, 1, "", "restrict"], [36, 3, 1, "", "restrict_for_tiling"]], "qiskit_qec.geometry.OctaSquareTile": [[38, 2, 1, "", "c8"], [38, 3, 1, "", "draw"], [38, 2, 1, "", "face_colors"], [38, 2, 1, "", "faces_wf_components"], [38, 2, 1, "", "num_faces"], [38, 2, 1, "", "num_qubits"], [38, 2, 1, "", "s8"], [38, 2, 1, "", "size"], [38, 2, 1, "", "u_vec"], [38, 2, 1, "", "v_vec"], [38, 2, 1, "", "wf_coordinates"], [38, 2, 1, "", "wf_loop_indicator"], [38, 2, 1, "", "wf_operator_dict"], [38, 2, 1, "", "wf_q_indices"]], "qiskit_qec.geometry.Plane": [[39, 3, 1, "", "ison"], [39, 3, 1, "", "rot_matrix"], [39, 3, 1, "", "rotate"]], "qiskit_qec.geometry.QubitCount": [[40, 3, 1, "", "decrement_qubit"], [40, 3, 1, "", "increment_qubit"], [40, 3, 1, "", "new_qubit"]], "qiskit_qec.geometry.QubitData": [[41, 3, 1, "", "add_data_array"], [41, 3, 1, "", "del_data_array"]], "qiskit_qec.geometry.Shape": [[42, 3, 1, "", "bounding_box_from_lines"], [42, 3, 1, "", "contains"], [42, 3, 1, "", "contains_quad_winding_number"], [42, 3, 1, "", "contains_ray_trace"], [42, 3, 1, "", "create_lines"], [42, 3, 1, "", "inside"], [42, 3, 1, "", "is_between"], [42, 3, 1, "", "rect"], [42, 3, 1, "", "square"]], "qiskit_qec.geometry.ShapeObject": [[43, 3, 1, "", "add_parent"], [43, 3, 1, "", "create_id"], [43, 2, 1, "", "last_id"]], "qiskit_qec.geometry.Shell": [[44, 3, 1, "", "add_parent"], [44, 3, 1, "", "create_id"], [44, 3, 1, "", "delete_subtree"], [44, 3, 1, "", "draw"], [44, 3, 1, "", "extract"], [44, 3, 1, "", "integer_snap"], [44, 2, 1, "", "last_id"], [44, 3, 1, "", "rotate2d"], [44, 3, 1, "", "scale"], [44, 3, 1, "", "shell2symplectic"], [44, 3, 1, "", "shift"], [44, 3, 1, "", "union"]], "qiskit_qec.geometry.SquareDiamondTile": [[45, 3, 1, "", "draw"], [45, 2, 1, "", "face_colors"], [45, 2, 1, "", "faces_wf_components"], [45, 2, 1, "", "num_faces"], [45, 2, 1, "", "num_qubits"], [45, 2, 1, "", "size"], [45, 2, 1, "", "u_vec"], [45, 2, 1, "", "v_vec"], [45, 2, 1, "", "wf_coordinates"], [45, 2, 1, "", "wf_loop_indicator"], [45, 2, 1, "", "wf_operator_dict"], [45, 2, 1, "", "wf_orientation"], [45, 2, 1, "", "wf_q_indices"]], "qiskit_qec.geometry.Tile": [[46, 3, 1, "", "draw"]], "qiskit_qec.geometry.Tiling": [[48, 3, 1, "", "distance"]], "qiskit_qec.geometry.Vertex": [[50, 3, 1, "", "add_parent"], [50, 3, 1, "", "create_id"], [50, 2, 1, "", "last_id"], [50, 2, 1, "", "position"], [50, 3, 1, "", "set_position"], [50, 3, 1, "", "shallowcopy"]], "qiskit_qec.geometry.WireFrame": [[51, 3, 1, "", "add_parent"], [51, 3, 1, "", "create_id"], [51, 2, 1, "", "last_id"]], "qiskit_qec.info": [[52, 1, 1, "", "Properties"]], "qiskit_qec.info.Properties": [[52, 2, 1, "", "AUT_GROUP_SIZE"], [52, 2, 1, "", "CITATION"], [52, 2, 1, "", "CODE_TYPES"], [52, 2, 1, "", "D"], [52, 2, 1, "", "GAUGE_GROUP"], [52, 2, 1, "", "HYPERBOLIC_GEN"], [52, 2, 1, "", "INDEX"], [52, 2, 1, "", "ISOTROPIC_GEN"], [52, 2, 1, "", "IS_CSS"], [52, 2, 1, "", "IS_CSS_KEY"], [52, 2, 1, "", "IS_DECOMPOSABLE"], [52, 2, 1, "", "IS_DECOMPOSABLE_KEY"], [52, 2, 1, "", "IS_DEGENERATE"], [52, 2, 1, "", "IS_DEGENERATE_KEY"], [52, 2, 1, "", "IS_GF4LINEAR"], [52, 2, 1, "", "IS_GF4LINEAR_KEY"], [52, 2, 1, "", "IS_TRIORTHOGONAL"], [52, 2, 1, "", "IS_TRIORTHOGONAL_KEY"], [52, 2, 1, "", "K"], [52, 2, 1, "", "LOGICAL_OPS"], [52, 2, 1, "", "N"], [52, 2, 1, "", "NAME"], [52, 2, 1, "", "STABILIZER"], [52, 2, 1, "", "TYPE"], [52, 2, 1, "", "UUID"], [52, 2, 1, "", "WEIGHT_ENUMERATOR"], [52, 2, 1, "", "info"]], "qiskit_qec.linear": [[53, 4, 1, "", "all_commute"], [54, 4, 1, "", "augment_mat"], [55, 4, 1, "", "build_hyper_partner"], [56, 4, 1, "", "create_lambda_matrix"], [57, 4, 1, "", "is_center"], [58, 4, 1, "", "is_hyper_form"], [59, 4, 1, "", "is_same_span"], [60, 4, 1, "", "is_stabilizer_group"], [61, 4, 1, "", "is_symplectic_form"], [62, 4, 1, "", "is_symplectic_matrix_form"], [63, 4, 1, "", "is_symplectic_vector_form"], [64, 4, 1, "", "locate_hyper_partner"], [65, 4, 1, "", "make_commute_hyper"], [66, 4, 1, "", "rank"], [67, 4, 1, "", "rref"], [68, 4, 1, "", "rref_complete"], [69, 4, 1, "", "symplectic_gram_schmidt"], [70, 4, 1, "", "symplectic_product"]], "qiskit_qec.operators": [[71, 1, 1, "", "BasePauli"], [72, 1, 1, "", "Pauli"], [73, 1, 1, "", "PauliList"]], "qiskit_qec.operators.BasePauli": [[71, 2, 1, "", "EXTERNAL_PAULI_ENCODING"], [71, 2, 1, "", "EXTERNAL_PHASE_ENCODING"], [71, 2, 1, "", "EXTERNAL_QUBIT_ORDER"], [71, 2, 1, "", "EXTERNAL_SYNTAX"], [71, 2, 1, "", "EXTERNAL_TENSOR_ENCODING"], [71, 2, 1, "", "PRINT_PHASE_ENCODING"], [71, 3, 1, "", "adjoint"], [71, 3, 1, "", "all_commutes"], [71, 3, 1, "", "commutes"], [71, 3, 1, "", "compose"], [71, 3, 1, "", "conjugate"], [71, 3, 1, "", "copy"], [71, 2, 1, "", "dim"], [71, 3, 1, "", "dot"], [71, 3, 1, "", "evolve"], [71, 3, 1, "", "expand"], [71, 3, 1, "", "input_dims"], [71, 2, 1, "", "num_qubits"], [71, 2, 1, "", "num_y"], [71, 3, 1, "", "output_dims"], [71, 2, 1, "", "pauli_encoding"], [71, 2, 1, "", "phase_encoding"], [71, 3, 1, "", "power"], [71, 2, 1, "", "print_phase_encoding"], [71, 2, 1, "", "qargs"], [71, 2, 1, "", "qubit_order"], [71, 3, 1, "", "reshape"], [71, 3, 1, "", "set_pauli_encoding"], [71, 3, 1, "", "set_phase_encoding"], [71, 3, 1, "", "set_print_phase_encoding"], [71, 3, 1, "", "set_qubit_order"], [71, 3, 1, "", "set_syntax"], [71, 3, 1, "", "set_tensor_encoding"], [71, 2, 1, "", "syntax"], [71, 3, 1, "", "tensor"], [71, 2, 1, "", "tensor_encoding"], [71, 3, 1, "", "to_label"], [71, 3, 1, "", "transpose"], [71, 2, 1, "", "x"], [71, 2, 1, "", "z"]], "qiskit_qec.operators.Pauli": [[72, 2, 1, "", "EXTERNAL_PAULI_ENCODING"], [72, 2, 1, "", "EXTERNAL_PHASE_ENCODING"], [72, 2, 1, "", "EXTERNAL_QUBIT_ORDER"], [72, 2, 1, "", "EXTERNAL_SYNTAX"], [72, 2, 1, "", "EXTERNAL_TENSOR_ENCODING"], [72, 2, 1, "", "PRINT_PHASE_ENCODING"], [72, 3, 1, "", "adjoint"], [72, 3, 1, "", "all_commutes"], [72, 3, 1, "", "anticommutes"], [72, 3, 1, "", "append_paulis"], [72, 3, 1, "", "commutes"], [72, 3, 1, "", "compose"], [72, 3, 1, "", "conjugate"], [72, 3, 1, "", "copy"], [72, 3, 1, "", "delete"], [72, 3, 1, "", "delete_qubits"], [72, 2, 1, "", "dim"], [72, 3, 1, "", "dot"], [72, 3, 1, "", "equiv"], [72, 3, 1, "", "evolve"], [72, 3, 1, "", "expand"], [72, 3, 1, "", "from_label"], [72, 3, 1, "", "input_dims"], [72, 3, 1, "", "insert"], [72, 3, 1, "", "insert_paulis"], [72, 3, 1, "", "instrs2symplectic"], [72, 3, 1, "", "inverse"], [72, 3, 1, "", "kron"], [72, 2, 1, "", "name"], [72, 2, 1, "", "num_clbits"], [72, 2, 1, "", "num_qubits"], [72, 2, 1, "", "num_y"], [72, 3, 1, "", "output_dims"], [72, 2, 1, "", "pauli_encoding"], [72, 3, 1, "", "pauli_single"], [72, 2, 1, "", "phase"], [72, 2, 1, "", "phase_encoding"], [72, 2, 1, "", "phase_exp"], [72, 2, 1, "", "pltb_int"], [72, 2, 1, "", "pltb_str"], [72, 3, 1, "", "power"], [72, 2, 1, "", "print_phase_encoding"], [72, 2, 1, "", "qargs"], [72, 2, 1, "", "qubit_order"], [72, 3, 1, "", "random"], [72, 3, 1, "", "reshape"], [72, 3, 1, "", "set_pauli_encoding"], [72, 3, 1, "", "set_phase_encoding"], [72, 3, 1, "", "set_print_phase_encoding"], [72, 3, 1, "", "set_qubit_order"], [72, 3, 1, "", "set_syntax"], [72, 3, 1, "", "set_tensor_encoding"], [72, 3, 1, "", "set_truncation"], [72, 2, 1, "", "settings"], [72, 3, 1, "", "sgn_prod"], [72, 2, 1, "", "syntax"], [72, 3, 1, "", "tensor"], [72, 2, 1, "", "tensor_encoding"], [72, 3, 1, "", "to_cpx_matrix"], [72, 3, 1, "", "to_instruction"], [72, 3, 1, "", "to_label"], [72, 3, 1, "", "to_matrix"], [72, 3, 1, "", "to_spmatrix"], [72, 3, 1, "", "transpose"], [72, 3, 1, "", "update_x"], [72, 3, 1, "", "update_z"], [72, 2, 1, "", "x"], [72, 2, 1, "", "z"]], "qiskit_qec.operators.PauliList": [[73, 2, 1, "", "EXTERNAL_PAULI_ENCODING"], [73, 2, 1, "", "EXTERNAL_PHASE_ENCODING"], [73, 2, 1, "", "EXTERNAL_QUBIT_ORDER"], [73, 2, 1, "", "EXTERNAL_SYNTAX"], [73, 2, 1, "", "EXTERNAL_TENSOR_ENCODING"], [73, 2, 1, "", "PRINT_PHASE_ENCODING"], [73, 3, 1, "", "adjoint"], [73, 3, 1, "", "all_commutes"], [73, 3, 1, "", "anticommutes"], [73, 3, 1, "", "anticommutes_with_all"], [73, 3, 1, "", "argsort"], [73, 3, 1, "", "commutes"], [73, 3, 1, "", "commutes_with_all"], [73, 3, 1, "", "compose"], [73, 3, 1, "", "conjugate"], [73, 3, 1, "", "copy"], [73, 3, 1, "", "delete"], [73, 2, 1, "", "dim"], [73, 3, 1, "", "dot"], [73, 3, 1, "", "evolve"], [73, 3, 1, "", "expand"], [73, 3, 1, "", "from_symplectic"], [73, 3, 1, "", "getaslist"], [73, 3, 1, "", "group_qubit_wise_commuting"], [73, 3, 1, "", "input_dims"], [73, 3, 1, "", "insert"], [73, 3, 1, "", "inverse"], [73, 3, 1, "", "label_iter"], [73, 3, 1, "", "matrix_iter"], [73, 2, 1, "", "num_paulis"], [73, 2, 1, "", "num_qubits"], [73, 2, 1, "", "num_y"], [73, 3, 1, "", "output_dims"], [73, 2, 1, "", "pauli_encoding"], [73, 2, 1, "", "phase"], [73, 2, 1, "", "phase_encoding"], [73, 2, 1, "", "phase_exp"], [73, 3, 1, "", "power"], [73, 2, 1, "", "print_phase_encoding"], [73, 2, 1, "", "qargs"], [73, 2, 1, "", "qubit_order"], [73, 3, 1, "", "reshape"], [73, 3, 1, "", "set_pauli_encoding"], [73, 3, 1, "", "set_phase_encoding"], [73, 3, 1, "", "set_print_phase_encoding"], [73, 3, 1, "", "set_qubit_order"], [73, 3, 1, "", "set_syntax"], [73, 3, 1, "", "set_tensor_encoding"], [73, 2, 1, "", "settings"], [73, 2, 1, "", "shape"], [73, 2, 1, "", "size"], [73, 3, 1, "", "sort"], [73, 2, 1, "", "syntax"], [73, 3, 1, "", "tensor"], [73, 2, 1, "", "tensor_encoding"], [73, 3, 1, "", "to_label"], [73, 3, 1, "", "to_labels"], [73, 3, 1, "", "to_matrix"], [73, 3, 1, "", "transpose"], [73, 3, 1, "", "unique"], [73, 2, 1, "", "x"], [73, 2, 1, "", "z"]], "qiskit_qec.structures": [[74, 1, 1, "", "GaugeGroup"], [75, 1, 1, "", "Group"]], "qiskit_qec.structures.GaugeGroup": [[74, 2, 1, "", "k"], [74, 2, 1, "", "n"], [74, 2, 1, "", "num_gen"]], "qiskit_qec.utils": [[76, 1, 1, "", "DecodingGraphEdge"], [77, 1, 1, "", "DecodingGraphNode"], [78, 4, 1, "", "get_counts_via_stim"], [79, 4, 1, "", "get_stim_circuits"], [80, 0, 0, "-", "indexer"], [81, 4, 1, "", "noisify_circuit"], [82, 0, 0, "-", "pauli_rep"], [83, 0, 0, "-", "visualizations"]], "qiskit_qec.utils.DecodingGraphEdge": [[76, 2, 1, "", "fault_ids"], [76, 3, 1, "", "get"], [76, 2, 1, "", "properties"], [76, 2, 1, "", "qubits"], [76, 2, 1, "", "weight"]], "qiskit_qec.utils.DecodingGraphNode": [[77, 3, 1, "", "get"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"analysi": 0, "qiskit_qec": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 25, 26, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 78, 79, 80, 81, 82, 83, 86], "modul": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10], "class": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10], "function": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10], "circuit": [1, 85], "code": [2, 12, 25, 26, 85], "decod": [3, 85, 86], "geometri": [4, 13], "qiskit": [5, 14, 15, 85], "qec": [5, 11, 14, 15, 85, 87], "api": 5, "refer": 5, "info": 6, "linear": [7, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "matrix": [7, 12], "symplect": [7, 12, 85], "oper": [8, 85], "structur": [9, 85], "util": [10, 78, 79, 80, 81, 82, 83], "discuss": 11, "how": [12, 13, 14], "creat": [12, 85], "classs": [12, 85], "factori": [12, 85], "builder": [12, 85], "librari": [12, 85], "databas": [12, 85], "provid": [12, 85], "stabil": [12, 85], "gaug": [12, 85], "gener": [12, 85], "string": [12, 85], "load": 12, "via": 12, "codebas": 12, "configur": 12, "run": 12, "tilecodefactori": 12, "specif": 12, "codebuild": 12, "work": 13, "object": 13, "guid": [14, 85], "document": 15, "arccircuit": 16, "csscodecircuit": 17, "codecircuit": 18, "repetitioncodecircuit": 19, "surfacecodecircuit": 20, "codelibrarian": 21, "codelibrari": 22, "qeccod": 23, "stabsubsystemcod": 24, "all_small_cod": 25, "small_cod": 26, "decodinggraph": 27, "unionfinddecod": 28, "checkerboardtil": 29, "diagonalbartil": 30, "diagonalhourglasstil": 31, "edg": [32, 85], "face": [33, 85], "geometrybound": 34, "hexagontil": 35, "lattic": 36, "manifold": 37, "octasquaretil": 38, "plane": 39, "qubitcount": 40, "qubitdata": 41, "shape": 42, "shapeobject": 43, "shell": 44, "squarediamondtil": 45, "tile": [46, 48, 85], "tilefactori": [47, 85], "twomanifold": 49, "vertex": 50, "wirefram": 51, "properti": 52, "all_commut": 53, "augment_mat": 54, "build_hyper_partn": 55, "create_lambda_matrix": 56, "is_cent": 57, "is_hyper_form": 58, "is_same_span": 59, "is_stabilizer_group": 60, "is_symplectic_form": 61, "is_symplectic_matrix_form": 62, "is_symplectic_vector_form": 63, "locate_hyper_partn": 64, "make_commute_hyp": 65, "rank": 66, "rref": 67, "rref_complet": 68, "symplectic_gram_schmidt": 69, "symplectic_product": 70, "basepauli": 71, "pauli": [72, 73, 85], "paulilist": 73, "represent": [73, 85], "gaugegroup": 74, "group": [75, 85], "decodinggraphedg": 76, "decodinggraphnod": 77, "get_counts_via_stim": 78, "get_stim_circuit": 79, "index": 80, "noisify_circuit": 81, "pauli_rep": 82, "visual": 83, "tutori": [84, 87], "exampl": [84, 85], "softwar": 85, "framework": 85, "design": 85, "layer": 85, "compon": 85, "now": 85, "futur": 85, "The": 85, "creator": 85, "interactor": 85, "commmand": 85, "line": 85, "program": 85, "interfac": 85, "instal": 85, "content": 85, "set": 85, "up": 85, "python": 85, "environ": 85, "option": 85, "1": 85, "conda": 85, "recommend": 85, "2": 85, "venv": 85, "includ": 85, "depend": 85, "quantum": 85, "error": 85, "correct": 85, "repitit": 85, "classici": 85, "challeng": 85, "condit": 85, "subsystem": 85, "syntax": 85, "isotrop": 85, "hyperbol": 85, "gram": 85, "schmidt": 85, "process": 85, "surfac": 85, "toric": 85, "dual": 85, "qubit": 85, "vertic": 85, "rorat": 85, "find": [85, 86], "logic": 85, "center": 85, "normal": 85, "minin": 85, "distanc": 85, "basic": 85, "algorithm": 85, "minimum": 85, "improv": 85, "comput": 85, "clifford": 85, "equival": 85, "build": 85, "A": 85, "detail": 85, "someth": 85, "more": 85, "simul": 85, "fault": 85, "toler": 85, "us": 86, "union": 86}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Analysis (qiskit_qec.analysis)": [[0, "analysis-qiskit-qec-analysis"]], "Analysis module classes and functions": [[0, "analysis-module-classes-and-functions"]], "Circuits (qiskit_qec.circuits)": [[1, "circuits-qiskit-qec-circuits"]], "Circuits module classes and functions": [[1, "circuits-module-classes-and-functions"]], "Codes (qiskit_qec.codes)": [[2, "codes-qiskit-qec-codes"]], "Codes module classes and functions": [[2, "codes-module-classes-and-functions"]], "Decoders (qiskit_qec.decoders)": [[3, "decoders-qiskit-qec-decoders"]], "Decoders module classes and functions": [[3, "decoders-module-classes-and-functions"]], "Geometry (qiskit_qec.geometry)": [[4, "geometry-qiskit-qec-geometry"]], "Geometry module classes and functions": [[4, "geometry-module-classes-and-functions"]], "Qiskit QEC API Reference": [[5, "qiskit-qec-api-reference"]], "Info (qiskit_qec.info)": [[6, "info-qiskit-qec-info"]], "Info module classes and functions": [[6, "info-module-classes-and-functions"]], "Linear (qiskit_qec.linear)": [[7, "linear-qiskit-qec-linear"]], "Linear module classes and functions": [[7, "linear-module-classes-and-functions"]], "Linear matrix functions": [[7, "linear-matrix-functions"]], "Linear symplectic functions": [[7, "linear-symplectic-functions"]], "Operators (qiskit_qec.operators)": [[8, "operators-qiskit-qec-operators"]], "Operators module classes and functions": [[8, "operators-module-classes-and-functions"]], "Structures (qiskit_qec.structures)": [[9, "structures-qiskit-qec-structures"]], "Structures module classes and functions": [[9, "structures-module-classes-and-functions"]], "Utils (qiskit_qec.utils)": [[10, "utils-qiskit-qec-utils"]], "Utils module classes and functions": [[10, "utils-module-classes-and-functions"]], "QEC Discussions": [[11, "qec-discussions"]], "How-to: Create Codes": [[12, "How-to:-Create-Codes"]], "Code Classs": [[12, "Code-Classs"], [85, "Code-Classs"]], "Code Factories": [[12, "Code-Factories"], [85, "Code-Factories"]], "Code Builders": [[12, "Code-Builders"], [85, "Code-Builders"], [85, "id9"]], "Code Library/Database": [[12, "Code-Library/Database"], [85, "Code-Library/Database"], [85, "id5"]], "Creating Codes": [[12, "Creating-Codes"], [85, "Creating-Codes"]], "Creating a symplectic matrix": [[12, "Creating-a-symplectic-matrix"]], "Providing the stabilizer/gauge generators as strings": [[12, "Providing-the-stabilizer/gauge-generators-as-strings"], [85, "Providing-the-stabilizer/gauge-generators-as-strings"]], "Loading a code via the codebase libraries": [[12, "Loading-a-code-via-the-codebase-libraries"]], "Configuring and running a TileCodeFactory": [[12, "Configuring-and-running-a-TileCodeFactory"]], "Configuring and running a specific CodeBuilder": [[12, "Configuring-and-running-a-specific-CodeBuilder"]], "How-to: work with geometry objects": [[13, "How-to:-work-with-geometry-objects"]], "Qiskit QEC How-to guides": [[14, "qiskit-qec-how-to-guides"]], "Qiskit QEC documentation": [[15, "qiskit-qec-documentation"]], "ArcCircuit": [[16, "arccircuit"]], "CSSCodeCircuit": [[17, "csscodecircuit"]], "CodeCircuit": [[18, "codecircuit"]], "RepetitionCodeCircuit": [[19, "repetitioncodecircuit"]], "SurfaceCodeCircuit": [[20, "surfacecodecircuit"]], "CodeLibrarian": [[21, "codelibrarian"]], "CodeLibrary": [[22, "codelibrary"]], "QECCode": [[23, "qeccode"]], "StabSubSystemCode": [[24, "stabsubsystemcode"]], "qiskit_qec.codes.all_small_codes": [[25, "qiskit-qec-codes-all-small-codes"]], "qiskit_qec.codes.small_code": [[26, "qiskit-qec-codes-small-code"]], "DecodingGraph": [[27, "decodinggraph"]], "UnionFindDecoder": [[28, "unionfinddecoder"]], "CheckerBoardTile": [[29, "checkerboardtile"]], "DiagonalBarTile": [[30, "diagonalbartile"]], "DiagonalHourGlassTile": [[31, "diagonalhourglasstile"]], "Edge": [[32, "edge"]], "Face": [[33, "face"]], "GeometryBounds": [[34, "geometrybounds"]], "HexagonTile": [[35, "hexagontile"]], "Lattice": [[36, "lattice"]], "Manifold": [[37, "manifold"]], "OctaSquareTile": [[38, "octasquaretile"]], "Plane": [[39, "plane"]], "QubitCount": [[40, "qubitcount"]], "QubitData": [[41, "qubitdata"]], "Shape": [[42, "shape"]], "ShapeObject": [[43, "shapeobject"]], "Shell": [[44, "shell"]], "SquareDiamondTile": [[45, "squarediamondtile"]], "Tile": [[46, "tile"]], "TileFactory": [[47, "tilefactory"]], "Tiling": [[48, "tiling"]], "TwoManifold": [[49, "twomanifold"]], "Vertex": [[50, "vertex"]], "WireFrame": [[51, "wireframe"]], "Properties": [[52, "properties"]], "qiskit_qec.linear.all_commute": [[53, "qiskit-qec-linear-all-commute"]], "qiskit_qec.linear.augment_mat": [[54, "qiskit-qec-linear-augment-mat"]], "qiskit_qec.linear.build_hyper_partner": [[55, "qiskit-qec-linear-build-hyper-partner"]], "qiskit_qec.linear.create_lambda_matrix": [[56, "qiskit-qec-linear-create-lambda-matrix"]], "qiskit_qec.linear.is_center": [[57, "qiskit-qec-linear-is-center"]], "qiskit_qec.linear.is_hyper_form": [[58, "qiskit-qec-linear-is-hyper-form"]], "qiskit_qec.linear.is_same_span": [[59, "qiskit-qec-linear-is-same-span"]], "qiskit_qec.linear.is_stabilizer_group": [[60, "qiskit-qec-linear-is-stabilizer-group"]], "qiskit_qec.linear.is_symplectic_form": [[61, "qiskit-qec-linear-is-symplectic-form"]], "qiskit_qec.linear.is_symplectic_matrix_form": [[62, "qiskit-qec-linear-is-symplectic-matrix-form"]], "qiskit_qec.linear.is_symplectic_vector_form": [[63, "qiskit-qec-linear-is-symplectic-vector-form"]], "qiskit_qec.linear.locate_hyper_partner": [[64, "qiskit-qec-linear-locate-hyper-partner"]], "qiskit_qec.linear.make_commute_hyper": [[65, "qiskit-qec-linear-make-commute-hyper"]], "qiskit_qec.linear.rank": [[66, "qiskit-qec-linear-rank"]], "qiskit_qec.linear.rref": [[67, "qiskit-qec-linear-rref"]], "qiskit_qec.linear.rref_complete": [[68, "qiskit-qec-linear-rref-complete"]], "qiskit_qec.linear.symplectic_gram_schmidt": [[69, "qiskit-qec-linear-symplectic-gram-schmidt"]], "qiskit_qec.linear.symplectic_product": [[70, "qiskit-qec-linear-symplectic-product"]], "BasePauli": [[71, "basepauli"]], "Pauli": [[72, "pauli"]], "PauliList": [[73, "paulilist"]], "Pauli Representations": [[73, "id1"], [73, "id2"]], "GaugeGroup": [[74, "gaugegroup"]], "Group": [[75, "group"]], "DecodingGraphEdge": [[76, "decodinggraphedge"]], "DecodingGraphNode": [[77, "decodinggraphnode"]], "qiskit_qec.utils.get_counts_via_stim": [[78, "qiskit-qec-utils-get-counts-via-stim"]], "qiskit_qec.utils.get_stim_circuits": [[79, "qiskit-qec-utils-get-stim-circuits"]], "qiskit_qec.utils.indexer": [[80, "module-qiskit_qec.utils.indexer"]], "qiskit_qec.utils.noisify_circuit": [[81, "qiskit-qec-utils-noisify-circuit"]], "qiskit_qec.utils.pauli_rep": [[82, "module-qiskit_qec.utils.pauli_rep"]], "qiskit_qec.utils.visualizations": [[83, "module-qiskit_qec.utils.visualizations"]], "Tutorial: example": [[84, "Tutorial:-example"]], "Qiskit QEC Software Framework": [[85, "Qiskit-QEC-Software-Framework"]], "Framework Design": [[85, "Framework-Design"]], "Layer Design": [[85, "Layer-Design"]], "Framework Components (Now and Future)": [[85, "Framework-Components-(Now-and-Future)"]], "The Creator": [[85, "The-Creator"]], "The Interactor": [[85, "The-Interactor"]], "Commmand Line/Programming Interface": [[85, "Commmand-Line/Programming-Interface"]], "Structure": [[85, "Structure"]], "Installation guide": [[85, "Installation-guide"]], "Content": [[85, "Content"]], "Setting up python environment": [[85, "Setting-up-python-environment"]], "Option 1: conda (recommended)": [[85, "Option-1:-conda-(recommended)"]], "Option 2: venv (included in Python)": [[85, "Option-2:-venv-(included-in-Python)"]], "Installing": [[85, "Installing"]], "Installing optional dependencies": [[85, "Installing-optional-dependencies"]], "Quantum Error Correction": [[85, "Quantum-Error-Correction"], [85, "id1"]], "Repitition Code (Classicial)": [[85, "Repitition-Code-(Classicial)"]], "Challenges": [[85, "Challenges"]], "Quantum Error Correcting Codes": [[85, "Quantum-Error-Correcting-Codes"]], "Error Correcting Conditions": [[85, "Error-Correcting-Conditions"]], "Stabilizer Subsystem Codes": [[85, "Stabilizer-Subsystem-Codes"], [85, "id4"]], "Pauli Operators and Groups": [[85, "Pauli-Operators-and-Groups"], [85, "id2"]], "Representation of Pauli Operators": [[85, "Representation-of-Pauli-Operators"]], "String Syntax": [[85, "String-Syntax"]], "Symplectic Representations": [[85, "Symplectic-Representations"]], "Isotropic-Hyperbolic Generating Sets": [[85, "Isotropic-Hyperbolic-Generating-Sets"]], "Symplectic Gram-Schmidt Process": [[85, "Symplectic-Gram-Schmidt-Process"]], "Stabilizer SubSystem Codes": [[85, "Stabilizer-SubSystem-Codes"]], "Stabilizer Groups": [[85, "Stabilizer-Groups"]], "Stabilizer Codes": [[85, "Stabilizer-Codes"]], "Example Stabilizer Codes - Surface Codes": [[85, "Example-Stabilizer-Codes---Surface-Codes"]], "The Toric Code (Dual Representation - Qubits on edges)": [[85, "The-Toric-Code-(Dual-Representation---Qubits-on-edges)"], [85, "id6"]], "The Toric Code (Face Representation Qubits on vertices)": [[85, "The-Toric-Code-(Face-Representation-Qubits-on-vertices)"], [85, "id7"]], "Rorated Surface Code (Face Representation - Qubits on vertices)": [[85, "Rorated-Surface-Code-(Face-Representation---Qubits-on-vertices)"], [85, "id8"]], "Gauge Groups": [[85, "Gauge-Groups"]], "Finding Logical Operators": [[85, "Finding-Logical-Operators"]], "Centeralizer and Normalizer": [[85, "Centeralizer-and-Normalizer"]], "Finding Mininal Distances": [[85, "Finding-Mininal-Distances"]], "Basic algorithm for the minimum distance of (subsystem) stabilizer codes": [[85, "Basic-algorithm-for-the-minimum-distance-of-(subsystem)-stabilizer-codes"]], "Improved algorithm for computing the minimum distance": [[85, "Improved-algorithm-for-computing-the-minimum-distance"]], "Clifford Groups": [[85, "Clifford-Groups"]], "Finding Equivalent Subsystem Codes": [[85, "Finding-Equivalent-Subsystem-Codes"]], "Building Codes": [[85, "Building-Codes"]], "Surface Codes": [[85, "Surface-Codes"]], "TileFactories": [[85, "TileFactories"]], "Tiles": [[85, "Tiles"]], "A Tile in Detail": [[85, "A-Tile-in-Detail"]], "Tile Factory": [[85, "Tile-Factory"]], "Now for something more challenging": [[85, "Now-for-something-more-challenging"]], "Simulating fault-tolerant error-correction circuits": [[85, "Simulating-fault-tolerant-error-correction-circuits"]], "Decoders": [[85, "Decoders"]], "Using the Union Find decoder in qiskit_qec": [[86, "Using-the-Union-Find-decoder-in-qiskit_qec"]], "QEC Tutorials": [[87, "qec-tutorials"]]}, "indexentries": {"module": [[0, "module-qiskit_qec.analysis"], [1, "module-qiskit_qec.circuits"], [2, "module-qiskit_qec.codes"], [3, "module-qiskit_qec.decoders"], [4, "module-qiskit_qec.geometry"], [5, "module-qiskit_qec"], [6, "module-qiskit_qec.info"], [7, "module-qiskit_qec.linear"], [8, "module-qiskit_qec.operators"], [9, "module-qiskit_qec.structures"], [10, "module-qiskit_qec.utils"], [80, "module-qiskit_qec.utils.indexer"], [82, "module-qiskit_qec.utils.pauli_rep"], [83, "module-qiskit_qec.utils.visualizations"]], "qiskit_qec.analysis": [[0, "module-qiskit_qec.analysis"]], "qiskit_qec.circuits": [[1, "module-qiskit_qec.circuits"]], "qiskit_qec.codes": [[2, "module-qiskit_qec.codes"]], "qiskit_qec.decoders": [[3, "module-qiskit_qec.decoders"]], "qiskit_qec.geometry": [[4, "module-qiskit_qec.geometry"]], "qiskit_qec": [[5, "module-qiskit_qec"]], "qiskit_qec.info": [[6, "module-qiskit_qec.info"]], "qiskit_qec.linear": [[7, "module-qiskit_qec.linear"]], "qiskit_qec.operators": [[8, "module-qiskit_qec.operators"]], "qiskit_qec.structures": [[9, "module-qiskit_qec.structures"]], "qiskit_qec.utils": [[10, "module-qiskit_qec.utils"]], "available_methods (arccircuit attribute)": [[16, "qiskit_qec.circuits.ArcCircuit.AVAILABLE_METHODS"]], "arccircuit (class in qiskit_qec.circuits)": [[16, "qiskit_qec.circuits.ArcCircuit"]], "method_naive (arccircuit attribute)": [[16, "qiskit_qec.circuits.ArcCircuit.METHOD_NAIVE"]], "method_spitz (arccircuit attribute)": [[16, "qiskit_qec.circuits.ArcCircuit.METHOD_SPITZ"]], "check_nodes() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.check_nodes"]], "clean_code() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.clean_code"]], "flatten_nodes() (arccircuit static method)": [[16, "qiskit_qec.circuits.ArcCircuit.flatten_nodes"]], "get_error_coords() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.get_error_coords"]], "is_cluster_neutral() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.is_cluster_neutral"]], "string2nodes() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.string2nodes"]], "string2raw_logicals() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.string2raw_logicals"]], "transpile() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.transpile"]], "csscodecircuit (class in qiskit_qec.circuits)": [[17, "qiskit_qec.circuits.CSSCodeCircuit"]], "check_nodes() (csscodecircuit method)": [[17, "qiskit_qec.circuits.CSSCodeCircuit.check_nodes"]], "is_cluster_neutral() (csscodecircuit method)": [[17, "qiskit_qec.circuits.CSSCodeCircuit.is_cluster_neutral"]], "stim_detectors() (csscodecircuit method)": [[17, "qiskit_qec.circuits.CSSCodeCircuit.stim_detectors"]], "string2nodes() (csscodecircuit method)": [[17, "qiskit_qec.circuits.CSSCodeCircuit.string2nodes"]], "string2raw_logicals() (csscodecircuit method)": [[17, "qiskit_qec.circuits.CSSCodeCircuit.string2raw_logicals"]], "codecircuit (class in qiskit_qec.circuits)": [[18, "qiskit_qec.circuits.CodeCircuit"]], "check_nodes() (codecircuit method)": [[18, "qiskit_qec.circuits.CodeCircuit.check_nodes"]], "is_cluster_neutral() (codecircuit method)": [[18, "qiskit_qec.circuits.CodeCircuit.is_cluster_neutral"]], "string2nodes() (codecircuit method)": [[18, "qiskit_qec.circuits.CodeCircuit.string2nodes"]], "repetitioncodecircuit (class in qiskit_qec.circuits)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit"]], "check_nodes() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.check_nodes"]], "get_circuit_list() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.get_circuit_list"]], "is_cluster_neutral() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.is_cluster_neutral"]], "partition_outcomes() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.partition_outcomes"]], "readout() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.readout"]], "string2nodes() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.string2nodes"]], "string2raw_logicals() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.string2raw_logicals"]], "syndrome_measurement() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.syndrome_measurement"]], "x() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.x"]], "surfacecodecircuit (class in qiskit_qec.circuits)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit"]], "check_nodes() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.check_nodes"]], "get_circuit_list() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.get_circuit_list"]], "is_cluster_neutral() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.is_cluster_neutral"]], "readout() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.readout"]], "string2nodes() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.string2nodes"]], "string2raw_logicals() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.string2raw_logicals"]], "syndrome_measurement() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.syndrome_measurement"]], "x() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.x"]], "z() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.z"]], "codelibrarian (class in qiskit_qec.codes)": [[21, "qiskit_qec.codes.CodeLibrarian"]], "get() (codelibrarian method)": [[21, "qiskit_qec.codes.CodeLibrarian.get"]], "n_dir_format (codelibrarian attribute)": [[21, "qiskit_qec.codes.CodeLibrarian.n_dir_format"]], "n_k_codes_file_format (codelibrarian attribute)": [[21, "qiskit_qec.codes.CodeLibrarian.n_k_codes_file_format"]], "codelibrary (class in qiskit_qec.codes)": [[22, "qiskit_qec.codes.CodeLibrary"]], "data2code() (codelibrary static method)": [[22, "qiskit_qec.codes.CodeLibrary.data2code"]], "in_range() (codelibrary method)": [[22, "qiskit_qec.codes.CodeLibrary.in_range"]], "search() (codelibrary method)": [[22, "qiskit_qec.codes.CodeLibrary.search"]], "qeccode (class in qiskit_qec.codes)": [[23, "qiskit_qec.codes.QECCode"]], "stabsubsystemcode (class in qiskit_qec.codes)": [[24, "qiskit_qec.codes.StabSubSystemCode"]], "draw() (stabsubsystemcode method)": [[24, "qiskit_qec.codes.StabSubSystemCode.draw"]], "generators (stabsubsystemcode attribute)": [[24, "qiskit_qec.codes.StabSubSystemCode.generators"]], "n (stabsubsystemcode attribute)": [[24, "qiskit_qec.codes.StabSubSystemCode.n"]], "all_small_codes() (in module qiskit_qec.codes)": [[25, "qiskit_qec.codes.all_small_codes"]], "small_code() (in module qiskit_qec.codes)": [[26, "qiskit_qec.codes.small_code"]], "available_methods (decodinggraph attribute)": [[27, "qiskit_qec.decoders.DecodingGraph.AVAILABLE_METHODS"]], "decodinggraph (class in qiskit_qec.decoders)": [[27, "qiskit_qec.decoders.DecodingGraph"]], "method_naive (decodinggraph attribute)": [[27, "qiskit_qec.decoders.DecodingGraph.METHOD_NAIVE"]], "method_spitz (decodinggraph attribute)": [[27, "qiskit_qec.decoders.DecodingGraph.METHOD_SPITZ"]], "clean_measurements() (decodinggraph method)": [[27, "qiskit_qec.decoders.DecodingGraph.clean_measurements"]], "edge_in_graph() (decodinggraph method)": [[27, "qiskit_qec.decoders.DecodingGraph.edge_in_graph"]], "get_edge_graph() (decodinggraph method)": [[27, "qiskit_qec.decoders.DecodingGraph.get_edge_graph"]], "get_error_probs() (decodinggraph method)": [[27, "qiskit_qec.decoders.DecodingGraph.get_error_probs"]], "get_node_graph() (decodinggraph method)": [[27, "qiskit_qec.decoders.DecodingGraph.get_node_graph"]], "make_error_graph() (decodinggraph method)": [[27, "qiskit_qec.decoders.DecodingGraph.make_error_graph"]], "node_index() (decodinggraph method)": [[27, "qiskit_qec.decoders.DecodingGraph.node_index"]], "update_attributes() (decodinggraph method)": [[27, "qiskit_qec.decoders.DecodingGraph.update_attributes"]], "weight_syndrome_graph() (decodinggraph method)": [[27, "qiskit_qec.decoders.DecodingGraph.weight_syndrome_graph"]], "unionfinddecoder (class in qiskit_qec.decoders)": [[28, "qiskit_qec.decoders.UnionFindDecoder"]], "cluster() (unionfinddecoder method)": [[28, "qiskit_qec.decoders.UnionFindDecoder.cluster"]], "find() (unionfinddecoder method)": [[28, "qiskit_qec.decoders.UnionFindDecoder.find"]], "get_corrections() (unionfinddecoder method)": [[28, "qiskit_qec.decoders.UnionFindDecoder.get_corrections"]], "neighbouring_edges() (unionfinddecoder method)": [[28, "qiskit_qec.decoders.UnionFindDecoder.neighbouring_edges"]], "peeling() (unionfinddecoder method)": [[28, "qiskit_qec.decoders.UnionFindDecoder.peeling"]], "process() (unionfinddecoder method)": [[28, "qiskit_qec.decoders.UnionFindDecoder.process"]], "checkerboardtile (class in qiskit_qec.geometry)": [[29, "qiskit_qec.geometry.CheckerBoardTile"]], "draw() (checkerboardtile class method)": [[29, "qiskit_qec.geometry.CheckerBoardTile.draw"]], "face_colors (checkerboardtile attribute)": [[29, "qiskit_qec.geometry.CheckerBoardTile.face_colors"]], "faces_wf_components (checkerboardtile attribute)": [[29, "qiskit_qec.geometry.CheckerBoardTile.faces_wf_components"]], "num_faces (checkerboardtile attribute)": [[29, "qiskit_qec.geometry.CheckerBoardTile.num_faces"]], "num_qubits (checkerboardtile attribute)": [[29, "qiskit_qec.geometry.CheckerBoardTile.num_qubits"]], "size (checkerboardtile attribute)": [[29, "qiskit_qec.geometry.CheckerBoardTile.size"]], "u_vec (checkerboardtile attribute)": [[29, "qiskit_qec.geometry.CheckerBoardTile.u_vec"]], "v_vec (checkerboardtile attribute)": [[29, "qiskit_qec.geometry.CheckerBoardTile.v_vec"]], "wf_coordinates (checkerboardtile attribute)": [[29, "qiskit_qec.geometry.CheckerBoardTile.wf_coordinates"]], "wf_loop_indicator (checkerboardtile attribute)": [[29, "qiskit_qec.geometry.CheckerBoardTile.wf_loop_indicator"]], "wf_operator_dict (checkerboardtile attribute)": [[29, "qiskit_qec.geometry.CheckerBoardTile.wf_operator_dict"]], "wf_q_indices (checkerboardtile attribute)": [[29, "qiskit_qec.geometry.CheckerBoardTile.wf_q_indices"]], "diagonalbartile (class in qiskit_qec.geometry)": [[30, "qiskit_qec.geometry.DiagonalBarTile"]], "draw() (diagonalbartile class method)": [[30, "qiskit_qec.geometry.DiagonalBarTile.draw"]], "face_colors (diagonalbartile attribute)": [[30, "qiskit_qec.geometry.DiagonalBarTile.face_colors"]], "faces_wf_components (diagonalbartile attribute)": [[30, "qiskit_qec.geometry.DiagonalBarTile.faces_wf_components"]], "num_faces (diagonalbartile attribute)": [[30, "qiskit_qec.geometry.DiagonalBarTile.num_faces"]], "num_qubits (diagonalbartile attribute)": [[30, "qiskit_qec.geometry.DiagonalBarTile.num_qubits"]], "size (diagonalbartile attribute)": [[30, "qiskit_qec.geometry.DiagonalBarTile.size"]], "u_vec (diagonalbartile attribute)": [[30, "qiskit_qec.geometry.DiagonalBarTile.u_vec"]], "v_vec (diagonalbartile attribute)": [[30, "qiskit_qec.geometry.DiagonalBarTile.v_vec"]], "wf_coordinates (diagonalbartile attribute)": [[30, "qiskit_qec.geometry.DiagonalBarTile.wf_coordinates"]], "wf_loop_indicator (diagonalbartile attribute)": [[30, "qiskit_qec.geometry.DiagonalBarTile.wf_loop_indicator"]], "wf_operator_dict (diagonalbartile attribute)": [[30, "qiskit_qec.geometry.DiagonalBarTile.wf_operator_dict"]], "wf_q_indices (diagonalbartile attribute)": [[30, "qiskit_qec.geometry.DiagonalBarTile.wf_q_indices"]], "diagonalhourglasstile (class in qiskit_qec.geometry)": [[31, "qiskit_qec.geometry.DiagonalHourGlassTile"]], "draw() (diagonalhourglasstile class method)": [[31, "qiskit_qec.geometry.DiagonalHourGlassTile.draw"]], "face_colors (diagonalhourglasstile attribute)": [[31, "qiskit_qec.geometry.DiagonalHourGlassTile.face_colors"]], "faces_wf_components (diagonalhourglasstile attribute)": [[31, "qiskit_qec.geometry.DiagonalHourGlassTile.faces_wf_components"]], "num_faces (diagonalhourglasstile attribute)": [[31, "qiskit_qec.geometry.DiagonalHourGlassTile.num_faces"]], "num_qubits (diagonalhourglasstile attribute)": [[31, "qiskit_qec.geometry.DiagonalHourGlassTile.num_qubits"]], "size (diagonalhourglasstile attribute)": [[31, "qiskit_qec.geometry.DiagonalHourGlassTile.size"]], "u_vec (diagonalhourglasstile attribute)": [[31, "qiskit_qec.geometry.DiagonalHourGlassTile.u_vec"]], "v_vec (diagonalhourglasstile attribute)": [[31, "qiskit_qec.geometry.DiagonalHourGlassTile.v_vec"]], "wf_coordinates (diagonalhourglasstile attribute)": [[31, "qiskit_qec.geometry.DiagonalHourGlassTile.wf_coordinates"]], "wf_loop_indicator (diagonalhourglasstile attribute)": [[31, "qiskit_qec.geometry.DiagonalHourGlassTile.wf_loop_indicator"]], "wf_operator_dict (diagonalhourglasstile attribute)": [[31, "qiskit_qec.geometry.DiagonalHourGlassTile.wf_operator_dict"]], "wf_q_indices (diagonalhourglasstile attribute)": [[31, "qiskit_qec.geometry.DiagonalHourGlassTile.wf_q_indices"]], "edge (class in qiskit_qec.geometry)": [[32, "qiskit_qec.geometry.Edge"]], "add_parent() (edge method)": [[32, "qiskit_qec.geometry.Edge.add_parent"]], "create_id() (edge static method)": [[32, "qiskit_qec.geometry.Edge.create_id"]], "last_id (edge attribute)": [[32, "qiskit_qec.geometry.Edge.last_id"]], "face (class in qiskit_qec.geometry)": [[33, "qiskit_qec.geometry.Face"]], "add_parent() (face method)": [[33, "qiskit_qec.geometry.Face.add_parent"]], "create_id() (face static method)": [[33, "qiskit_qec.geometry.Face.create_id"]], "last_id (face attribute)": [[33, "qiskit_qec.geometry.Face.last_id"]], "geometrybounds (class in qiskit_qec.geometry)": [[34, "qiskit_qec.geometry.GeometryBounds"]], "bounding_box_from_line() (geometrybounds static method)": [[34, "qiskit_qec.geometry.GeometryBounds.bounding_box_from_line"]], "combine() (geometrybounds class method)": [[34, "qiskit_qec.geometry.GeometryBounds.combine"]], "contains() (geometrybounds method)": [[34, "qiskit_qec.geometry.GeometryBounds.contains"]], "copy() (geometrybounds method)": [[34, "qiskit_qec.geometry.GeometryBounds.copy"]], "expand() (geometrybounds method)": [[34, "qiskit_qec.geometry.GeometryBounds.expand"]], "intercepts() (geometrybounds method)": [[34, "qiskit_qec.geometry.GeometryBounds.intercepts"]], "set_min_max() (geometrybounds method)": [[34, "qiskit_qec.geometry.GeometryBounds.set_min_max"]], "hexagontile (class in qiskit_qec.geometry)": [[35, "qiskit_qec.geometry.HexagonTile"]], "draw() (hexagontile class method)": [[35, "qiskit_qec.geometry.HexagonTile.draw"]], "face_colors (hexagontile attribute)": [[35, "qiskit_qec.geometry.HexagonTile.face_colors"]], "faces_wf_components (hexagontile attribute)": [[35, "qiskit_qec.geometry.HexagonTile.faces_wf_components"]], "h (hexagontile attribute)": [[35, "qiskit_qec.geometry.HexagonTile.h"]], "num_faces (hexagontile attribute)": [[35, "qiskit_qec.geometry.HexagonTile.num_faces"]], "num_qubits (hexagontile attribute)": [[35, "qiskit_qec.geometry.HexagonTile.num_qubits"]], "r (hexagontile attribute)": [[35, "qiskit_qec.geometry.HexagonTile.r"]], "size (hexagontile attribute)": [[35, "qiskit_qec.geometry.HexagonTile.size"]], "u_vec (hexagontile attribute)": [[35, "qiskit_qec.geometry.HexagonTile.u_vec"]], "v_vec (hexagontile attribute)": [[35, "qiskit_qec.geometry.HexagonTile.v_vec"]], "wf_coordinates (hexagontile attribute)": [[35, "qiskit_qec.geometry.HexagonTile.wf_coordinates"]], "wf_loop_indicator (hexagontile attribute)": [[35, "qiskit_qec.geometry.HexagonTile.wf_loop_indicator"]], "wf_operator_dict (hexagontile attribute)": [[35, "qiskit_qec.geometry.HexagonTile.wf_operator_dict"]], "wf_q_indices (hexagontile attribute)": [[35, "qiskit_qec.geometry.HexagonTile.wf_q_indices"]], "lattice (class in qiskit_qec.geometry)": [[36, "qiskit_qec.geometry.Lattice"]], "apply_transform_from() (lattice method)": [[36, "qiskit_qec.geometry.Lattice.apply_transform_from"]], "find_pre_transform_length() (lattice method)": [[36, "qiskit_qec.geometry.Lattice.find_pre_transform_length"]], "generate_points() (lattice method)": [[36, "qiskit_qec.geometry.Lattice.generate_points"]], "make_transform() (lattice class method)": [[36, "qiskit_qec.geometry.Lattice.make_transform"]], "restrict() (lattice method)": [[36, "qiskit_qec.geometry.Lattice.restrict"]], "restrict_for_tiling() (lattice method)": [[36, "qiskit_qec.geometry.Lattice.restrict_for_tiling"]], "manifold (class in qiskit_qec.geometry)": [[37, "qiskit_qec.geometry.Manifold"]], "octasquaretile (class in qiskit_qec.geometry)": [[38, "qiskit_qec.geometry.OctaSquareTile"]], "c8 (octasquaretile attribute)": [[38, "qiskit_qec.geometry.OctaSquareTile.c8"]], "draw() (octasquaretile class method)": [[38, "qiskit_qec.geometry.OctaSquareTile.draw"]], "face_colors (octasquaretile attribute)": [[38, "qiskit_qec.geometry.OctaSquareTile.face_colors"]], "faces_wf_components (octasquaretile attribute)": [[38, "qiskit_qec.geometry.OctaSquareTile.faces_wf_components"]], "num_faces (octasquaretile attribute)": [[38, "qiskit_qec.geometry.OctaSquareTile.num_faces"]], "num_qubits (octasquaretile attribute)": [[38, "qiskit_qec.geometry.OctaSquareTile.num_qubits"]], "s8 (octasquaretile attribute)": [[38, "qiskit_qec.geometry.OctaSquareTile.s8"]], "size (octasquaretile attribute)": [[38, "qiskit_qec.geometry.OctaSquareTile.size"]], "u_vec (octasquaretile attribute)": [[38, "qiskit_qec.geometry.OctaSquareTile.u_vec"]], "v_vec (octasquaretile attribute)": [[38, "qiskit_qec.geometry.OctaSquareTile.v_vec"]], "wf_coordinates (octasquaretile attribute)": [[38, "qiskit_qec.geometry.OctaSquareTile.wf_coordinates"]], "wf_loop_indicator (octasquaretile attribute)": [[38, "qiskit_qec.geometry.OctaSquareTile.wf_loop_indicator"]], "wf_operator_dict (octasquaretile attribute)": [[38, "qiskit_qec.geometry.OctaSquareTile.wf_operator_dict"]], "wf_q_indices (octasquaretile attribute)": [[38, "qiskit_qec.geometry.OctaSquareTile.wf_q_indices"]], "plane (class in qiskit_qec.geometry)": [[39, "qiskit_qec.geometry.Plane"]], "ison() (plane static method)": [[39, "qiskit_qec.geometry.Plane.ison"]], "rot_matrix() (plane static method)": [[39, "qiskit_qec.geometry.Plane.rot_matrix"]], "rotate() (plane static method)": [[39, "qiskit_qec.geometry.Plane.rotate"]], "qubitcount (class in qiskit_qec.geometry)": [[40, "qiskit_qec.geometry.QubitCount"]], "decrement_qubit() (qubitcount method)": [[40, "qiskit_qec.geometry.QubitCount.decrement_qubit"]], "increment_qubit() (qubitcount method)": [[40, "qiskit_qec.geometry.QubitCount.increment_qubit"]], "new_qubit() (qubitcount method)": [[40, "qiskit_qec.geometry.QubitCount.new_qubit"]], "qubitdata (class in qiskit_qec.geometry)": [[41, "qiskit_qec.geometry.QubitData"]], "add_data_array() (qubitdata method)": [[41, "qiskit_qec.geometry.QubitData.add_data_array"]], "del_data_array() (qubitdata method)": [[41, "qiskit_qec.geometry.QubitData.del_data_array"]], "shape (class in qiskit_qec.geometry)": [[42, "qiskit_qec.geometry.Shape"]], "bounding_box_from_lines() (shape method)": [[42, "qiskit_qec.geometry.Shape.bounding_box_from_lines"]], "contains() (shape method)": [[42, "qiskit_qec.geometry.Shape.contains"]], "contains_quad_winding_number() (shape method)": [[42, "qiskit_qec.geometry.Shape.contains_quad_winding_number"]], "contains_ray_trace() (shape method)": [[42, "qiskit_qec.geometry.Shape.contains_ray_trace"]], "create_lines() (shape static method)": [[42, "qiskit_qec.geometry.Shape.create_lines"]], "inside() (shape method)": [[42, "qiskit_qec.geometry.Shape.inside"]], "is_between() (shape static method)": [[42, "qiskit_qec.geometry.Shape.is_between"]], "rect() (shape class method)": [[42, "qiskit_qec.geometry.Shape.rect"]], "square() (shape class method)": [[42, "qiskit_qec.geometry.Shape.square"]], "shapeobject (class in qiskit_qec.geometry)": [[43, "qiskit_qec.geometry.ShapeObject"]], "add_parent() (shapeobject method)": [[43, "qiskit_qec.geometry.ShapeObject.add_parent"]], "create_id() (shapeobject static method)": [[43, "qiskit_qec.geometry.ShapeObject.create_id"]], "last_id (shapeobject attribute)": [[43, "qiskit_qec.geometry.ShapeObject.last_id"]], "shell (class in qiskit_qec.geometry)": [[44, "qiskit_qec.geometry.Shell"]], "add_parent() (shell method)": [[44, "qiskit_qec.geometry.Shell.add_parent"]], "create_id() (shell static method)": [[44, "qiskit_qec.geometry.Shell.create_id"]], "delete_subtree() (shell method)": [[44, "qiskit_qec.geometry.Shell.delete_subtree"]], "draw() (shell method)": [[44, "qiskit_qec.geometry.Shell.draw"]], "extract() (shell method)": [[44, "qiskit_qec.geometry.Shell.extract"]], "integer_snap() (shell method)": [[44, "qiskit_qec.geometry.Shell.integer_snap"]], "last_id (shell attribute)": [[44, "qiskit_qec.geometry.Shell.last_id"]], "rotate2d() (shell method)": [[44, "qiskit_qec.geometry.Shell.rotate2d"]], "scale() (shell method)": [[44, "qiskit_qec.geometry.Shell.scale"]], "shell2symplectic() (shell static method)": [[44, "qiskit_qec.geometry.Shell.shell2symplectic"]], "shift() (shell method)": [[44, "qiskit_qec.geometry.Shell.shift"]], "union() (shell method)": [[44, "qiskit_qec.geometry.Shell.union"]], "squarediamondtile (class in qiskit_qec.geometry)": [[45, "qiskit_qec.geometry.SquareDiamondTile"]], "draw() (squarediamondtile class method)": [[45, "qiskit_qec.geometry.SquareDiamondTile.draw"]], "face_colors (squarediamondtile attribute)": [[45, "qiskit_qec.geometry.SquareDiamondTile.face_colors"]], "faces_wf_components (squarediamondtile attribute)": [[45, "qiskit_qec.geometry.SquareDiamondTile.faces_wf_components"]], "num_faces (squarediamondtile attribute)": [[45, "qiskit_qec.geometry.SquareDiamondTile.num_faces"]], "num_qubits (squarediamondtile attribute)": [[45, "qiskit_qec.geometry.SquareDiamondTile.num_qubits"]], "size (squarediamondtile attribute)": [[45, "qiskit_qec.geometry.SquareDiamondTile.size"]], "u_vec (squarediamondtile attribute)": [[45, "qiskit_qec.geometry.SquareDiamondTile.u_vec"]], "v_vec (squarediamondtile attribute)": [[45, "qiskit_qec.geometry.SquareDiamondTile.v_vec"]], "wf_coordinates (squarediamondtile attribute)": [[45, "qiskit_qec.geometry.SquareDiamondTile.wf_coordinates"]], "wf_loop_indicator (squarediamondtile attribute)": [[45, "qiskit_qec.geometry.SquareDiamondTile.wf_loop_indicator"]], "wf_operator_dict (squarediamondtile attribute)": [[45, "qiskit_qec.geometry.SquareDiamondTile.wf_operator_dict"]], "wf_orientation (squarediamondtile attribute)": [[45, "qiskit_qec.geometry.SquareDiamondTile.wf_orientation"]], "wf_q_indices (squarediamondtile attribute)": [[45, "qiskit_qec.geometry.SquareDiamondTile.wf_q_indices"]], "tile (class in qiskit_qec.geometry)": [[46, "qiskit_qec.geometry.Tile"]], "draw() (tile class method)": [[46, "qiskit_qec.geometry.Tile.draw"]], "tilefactory (class in qiskit_qec.geometry)": [[47, "qiskit_qec.geometry.TileFactory"]], "tiling (class in qiskit_qec.geometry)": [[48, "qiskit_qec.geometry.Tiling"]], "distance() (tiling class method)": [[48, "qiskit_qec.geometry.Tiling.distance"]], "twomanifold (class in qiskit_qec.geometry)": [[49, "qiskit_qec.geometry.TwoManifold"]], "vertex (class in qiskit_qec.geometry)": [[50, "qiskit_qec.geometry.Vertex"]], "add_parent() (vertex method)": [[50, "qiskit_qec.geometry.Vertex.add_parent"]], "create_id() (vertex static method)": [[50, "qiskit_qec.geometry.Vertex.create_id"]], "last_id (vertex attribute)": [[50, "qiskit_qec.geometry.Vertex.last_id"]], "position (vertex attribute)": [[50, "qiskit_qec.geometry.Vertex.position"]], "set_position() (vertex method)": [[50, "qiskit_qec.geometry.Vertex.set_position"]], "shallowcopy() (vertex method)": [[50, "qiskit_qec.geometry.Vertex.shallowcopy"]], "wireframe (class in qiskit_qec.geometry)": [[51, "qiskit_qec.geometry.WireFrame"]], "add_parent() (wireframe method)": [[51, "qiskit_qec.geometry.WireFrame.add_parent"]], "create_id() (wireframe static method)": [[51, "qiskit_qec.geometry.WireFrame.create_id"]], "last_id (wireframe attribute)": [[51, "qiskit_qec.geometry.WireFrame.last_id"]], "aut_group_size (properties attribute)": [[52, "qiskit_qec.info.Properties.AUT_GROUP_SIZE"]], "citation (properties attribute)": [[52, "qiskit_qec.info.Properties.CITATION"]], "code_types (properties attribute)": [[52, "qiskit_qec.info.Properties.CODE_TYPES"]], "d (properties attribute)": [[52, "qiskit_qec.info.Properties.D"]], "gauge_group (properties attribute)": [[52, "qiskit_qec.info.Properties.GAUGE_GROUP"]], "hyperbolic_gen (properties attribute)": [[52, "qiskit_qec.info.Properties.HYPERBOLIC_GEN"]], "index (properties attribute)": [[52, "qiskit_qec.info.Properties.INDEX"]], "isotropic_gen (properties attribute)": [[52, "qiskit_qec.info.Properties.ISOTROPIC_GEN"]], "is_css (properties attribute)": [[52, "qiskit_qec.info.Properties.IS_CSS"]], "is_css_key (properties attribute)": [[52, "qiskit_qec.info.Properties.IS_CSS_KEY"]], "is_decomposable (properties attribute)": [[52, "qiskit_qec.info.Properties.IS_DECOMPOSABLE"]], "is_decomposable_key (properties attribute)": [[52, "qiskit_qec.info.Properties.IS_DECOMPOSABLE_KEY"]], "is_degenerate (properties attribute)": [[52, "qiskit_qec.info.Properties.IS_DEGENERATE"]], "is_degenerate_key (properties attribute)": [[52, "qiskit_qec.info.Properties.IS_DEGENERATE_KEY"]], "is_gf4linear (properties attribute)": [[52, "qiskit_qec.info.Properties.IS_GF4LINEAR"]], "is_gf4linear_key (properties attribute)": [[52, "qiskit_qec.info.Properties.IS_GF4LINEAR_KEY"]], "is_triorthogonal (properties attribute)": [[52, "qiskit_qec.info.Properties.IS_TRIORTHOGONAL"]], "is_triorthogonal_key (properties attribute)": [[52, "qiskit_qec.info.Properties.IS_TRIORTHOGONAL_KEY"]], "k (properties attribute)": [[52, "qiskit_qec.info.Properties.K"]], "logical_ops (properties attribute)": [[52, "qiskit_qec.info.Properties.LOGICAL_OPS"]], "n (properties attribute)": [[52, "qiskit_qec.info.Properties.N"]], "name (properties attribute)": [[52, "qiskit_qec.info.Properties.NAME"]], "properties (class in qiskit_qec.info)": [[52, "qiskit_qec.info.Properties"]], "stabilizer (properties attribute)": [[52, "qiskit_qec.info.Properties.STABILIZER"]], "type (properties attribute)": [[52, "qiskit_qec.info.Properties.TYPE"]], "uuid (properties attribute)": [[52, "qiskit_qec.info.Properties.UUID"]], "weight_enumerator (properties attribute)": [[52, "qiskit_qec.info.Properties.WEIGHT_ENUMERATOR"]], "info (properties attribute)": [[52, "qiskit_qec.info.Properties.info"]], "all_commute() (in module qiskit_qec.linear)": [[53, "qiskit_qec.linear.all_commute"]], "augment_mat() (in module qiskit_qec.linear)": [[54, "qiskit_qec.linear.augment_mat"]], "build_hyper_partner() (in module qiskit_qec.linear)": [[55, "qiskit_qec.linear.build_hyper_partner"]], "create_lambda_matrix() (in module qiskit_qec.linear)": [[56, "qiskit_qec.linear.create_lambda_matrix"]], "is_center() (in module qiskit_qec.linear)": [[57, "qiskit_qec.linear.is_center"]], "is_hyper_form() (in module qiskit_qec.linear)": [[58, "qiskit_qec.linear.is_hyper_form"]], "is_same_span() (in module qiskit_qec.linear)": [[59, "qiskit_qec.linear.is_same_span"]], "is_stabilizer_group() (in module qiskit_qec.linear)": [[60, "qiskit_qec.linear.is_stabilizer_group"]], "is_symplectic_form() (in module qiskit_qec.linear)": [[61, "qiskit_qec.linear.is_symplectic_form"]], "is_symplectic_matrix_form() (in module qiskit_qec.linear)": [[62, "qiskit_qec.linear.is_symplectic_matrix_form"]], "is_symplectic_vector_form() (in module qiskit_qec.linear)": [[63, "qiskit_qec.linear.is_symplectic_vector_form"]], "locate_hyper_partner() (in module qiskit_qec.linear)": [[64, "qiskit_qec.linear.locate_hyper_partner"]], "make_commute_hyper() (in module qiskit_qec.linear)": [[65, "qiskit_qec.linear.make_commute_hyper"]], "rank() (in module qiskit_qec.linear)": [[66, "qiskit_qec.linear.rank"]], "rref() (in module qiskit_qec.linear)": [[67, "qiskit_qec.linear.rref"]], "rref_complete() (in module qiskit_qec.linear)": [[68, "qiskit_qec.linear.rref_complete"]], "symplectic_gram_schmidt() (in module qiskit_qec.linear)": [[69, "qiskit_qec.linear.symplectic_gram_schmidt"]], "symplectic_product() (in module qiskit_qec.linear)": [[70, "qiskit_qec.linear.symplectic_product"]], "basepauli (class in qiskit_qec.operators)": [[71, "qiskit_qec.operators.BasePauli"]], "external_pauli_encoding (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.EXTERNAL_PAULI_ENCODING"]], "external_phase_encoding (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.EXTERNAL_PHASE_ENCODING"]], "external_qubit_order (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.EXTERNAL_QUBIT_ORDER"]], "external_syntax (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.EXTERNAL_SYNTAX"]], "external_tensor_encoding (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.EXTERNAL_TENSOR_ENCODING"]], "print_phase_encoding (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.PRINT_PHASE_ENCODING"], [71, "qiskit_qec.operators.BasePauli.print_phase_encoding"]], "adjoint() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.adjoint"]], "all_commutes() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.all_commutes"]], "commutes() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.commutes"]], "compose() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.compose"]], "conjugate() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.conjugate"]], "copy() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.copy"]], "dim (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.dim"]], "dot() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.dot"]], "evolve() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.evolve"]], "expand() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.expand"]], "input_dims() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.input_dims"]], "num_qubits (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.num_qubits"]], "num_y (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.num_y"]], "output_dims() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.output_dims"]], "pauli_encoding (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.pauli_encoding"]], "phase_encoding (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.phase_encoding"]], "power() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.power"]], "qargs (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.qargs"]], "qubit_order (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.qubit_order"]], "reshape() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.reshape"]], "set_pauli_encoding() (basepauli class method)": [[71, "qiskit_qec.operators.BasePauli.set_pauli_encoding"]], "set_phase_encoding() (basepauli class method)": [[71, "qiskit_qec.operators.BasePauli.set_phase_encoding"]], "set_print_phase_encoding() (basepauli class method)": [[71, "qiskit_qec.operators.BasePauli.set_print_phase_encoding"]], "set_qubit_order() (basepauli class method)": [[71, "qiskit_qec.operators.BasePauli.set_qubit_order"]], "set_syntax() (basepauli class method)": [[71, "qiskit_qec.operators.BasePauli.set_syntax"]], "set_tensor_encoding() (basepauli class method)": [[71, "qiskit_qec.operators.BasePauli.set_tensor_encoding"]], "syntax (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.syntax"]], "tensor() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.tensor"]], "tensor_encoding (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.tensor_encoding"]], "to_label() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.to_label"]], "transpose() (basepauli method)": [[71, "qiskit_qec.operators.BasePauli.transpose"]], "x (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.x"]], "z (basepauli attribute)": [[71, "qiskit_qec.operators.BasePauli.z"]], "external_pauli_encoding (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.EXTERNAL_PAULI_ENCODING"]], "external_phase_encoding (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.EXTERNAL_PHASE_ENCODING"]], "external_qubit_order (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.EXTERNAL_QUBIT_ORDER"]], "external_syntax (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.EXTERNAL_SYNTAX"]], "external_tensor_encoding (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.EXTERNAL_TENSOR_ENCODING"]], "print_phase_encoding (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.PRINT_PHASE_ENCODING"], [72, "qiskit_qec.operators.Pauli.print_phase_encoding"]], "pauli (class in qiskit_qec.operators)": [[72, "qiskit_qec.operators.Pauli"]], "adjoint() (pauli method)": [[72, "qiskit_qec.operators.Pauli.adjoint"]], "all_commutes() (pauli method)": [[72, "qiskit_qec.operators.Pauli.all_commutes"]], "anticommutes() (pauli method)": [[72, "qiskit_qec.operators.Pauli.anticommutes"]], "append_paulis() (pauli method)": [[72, "qiskit_qec.operators.Pauli.append_paulis"]], "commutes() (pauli method)": [[72, "qiskit_qec.operators.Pauli.commutes"]], "compose() (pauli method)": [[72, "qiskit_qec.operators.Pauli.compose"]], "conjugate() (pauli method)": [[72, "qiskit_qec.operators.Pauli.conjugate"]], "copy() (pauli method)": [[72, "qiskit_qec.operators.Pauli.copy"]], "delete() (pauli method)": [[72, "qiskit_qec.operators.Pauli.delete"]], "delete_qubits() (pauli method)": [[72, "qiskit_qec.operators.Pauli.delete_qubits"]], "dim (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.dim"]], "dot() (pauli method)": [[72, "qiskit_qec.operators.Pauli.dot"]], "equiv() (pauli method)": [[72, "qiskit_qec.operators.Pauli.equiv"]], "evolve() (pauli method)": [[72, "qiskit_qec.operators.Pauli.evolve"]], "expand() (pauli method)": [[72, "qiskit_qec.operators.Pauli.expand"]], "from_label() (pauli static method)": [[72, "qiskit_qec.operators.Pauli.from_label"]], "input_dims() (pauli method)": [[72, "qiskit_qec.operators.Pauli.input_dims"]], "insert() (pauli method)": [[72, "qiskit_qec.operators.Pauli.insert"]], "insert_paulis() (pauli method)": [[72, "qiskit_qec.operators.Pauli.insert_paulis"]], "instrs2symplectic() (pauli static method)": [[72, "qiskit_qec.operators.Pauli.instrs2symplectic"]], "inverse() (pauli method)": [[72, "qiskit_qec.operators.Pauli.inverse"]], "kron() (pauli method)": [[72, "qiskit_qec.operators.Pauli.kron"]], "name (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.name"]], "num_clbits (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.num_clbits"]], "num_qubits (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.num_qubits"]], "num_y (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.num_y"]], "output_dims() (pauli method)": [[72, "qiskit_qec.operators.Pauli.output_dims"]], "pauli_encoding (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.pauli_encoding"]], "pauli_single() (pauli class method)": [[72, "qiskit_qec.operators.Pauli.pauli_single"]], "phase (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.phase"]], "phase_encoding (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.phase_encoding"]], "phase_exp (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.phase_exp"]], "pltb_int (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.pltb_int"]], "pltb_str (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.pltb_str"]], "power() (pauli method)": [[72, "qiskit_qec.operators.Pauli.power"]], "qargs (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.qargs"]], "qubit_order (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.qubit_order"]], "random() (pauli class method)": [[72, "qiskit_qec.operators.Pauli.random"]], "reshape() (pauli method)": [[72, "qiskit_qec.operators.Pauli.reshape"]], "set_pauli_encoding() (pauli class method)": [[72, "qiskit_qec.operators.Pauli.set_pauli_encoding"]], "set_phase_encoding() (pauli class method)": [[72, "qiskit_qec.operators.Pauli.set_phase_encoding"]], "set_print_phase_encoding() (pauli class method)": [[72, "qiskit_qec.operators.Pauli.set_print_phase_encoding"]], "set_qubit_order() (pauli class method)": [[72, "qiskit_qec.operators.Pauli.set_qubit_order"]], "set_syntax() (pauli class method)": [[72, "qiskit_qec.operators.Pauli.set_syntax"]], "set_tensor_encoding() (pauli class method)": [[72, "qiskit_qec.operators.Pauli.set_tensor_encoding"]], "set_truncation() (pauli class method)": [[72, "qiskit_qec.operators.Pauli.set_truncation"]], "settings (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.settings"]], "sgn_prod() (pauli static method)": [[72, "qiskit_qec.operators.Pauli.sgn_prod"]], "syntax (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.syntax"]], "tensor() (pauli method)": [[72, "qiskit_qec.operators.Pauli.tensor"]], "tensor_encoding (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.tensor_encoding"]], "to_cpx_matrix() (pauli method)": [[72, "qiskit_qec.operators.Pauli.to_cpx_matrix"]], "to_instruction() (pauli method)": [[72, "qiskit_qec.operators.Pauli.to_instruction"]], "to_label() (pauli method)": [[72, "qiskit_qec.operators.Pauli.to_label"]], "to_matrix() (pauli method)": [[72, "qiskit_qec.operators.Pauli.to_matrix"]], "to_spmatrix() (pauli method)": [[72, "qiskit_qec.operators.Pauli.to_spmatrix"]], "transpose() (pauli method)": [[72, "qiskit_qec.operators.Pauli.transpose"]], "update_x() (pauli method)": [[72, "qiskit_qec.operators.Pauli.update_x"]], "update_z() (pauli method)": [[72, "qiskit_qec.operators.Pauli.update_z"]], "x (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.x"]], "z (pauli attribute)": [[72, "qiskit_qec.operators.Pauli.z"]], "external_pauli_encoding (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.EXTERNAL_PAULI_ENCODING"]], "external_phase_encoding (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.EXTERNAL_PHASE_ENCODING"]], "external_qubit_order (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.EXTERNAL_QUBIT_ORDER"]], "external_syntax (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.EXTERNAL_SYNTAX"]], "external_tensor_encoding (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.EXTERNAL_TENSOR_ENCODING"]], "print_phase_encoding (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.PRINT_PHASE_ENCODING"], [73, "qiskit_qec.operators.PauliList.print_phase_encoding"]], "paulilist (class in qiskit_qec.operators)": [[73, "qiskit_qec.operators.PauliList"]], "adjoint() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.adjoint"]], "all_commutes() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.all_commutes"]], "anticommutes() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.anticommutes"]], "anticommutes_with_all() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.anticommutes_with_all"]], "argsort() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.argsort"]], "commutes() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.commutes"]], "commutes_with_all() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.commutes_with_all"]], "compose() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.compose"]], "conjugate() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.conjugate"]], "copy() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.copy"]], "delete() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.delete"]], "dim (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.dim"]], "dot() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.dot"]], "evolve() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.evolve"]], "expand() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.expand"]], "from_symplectic() (paulilist class method)": [[73, "qiskit_qec.operators.PauliList.from_symplectic"]], "getaslist() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.getaslist"]], "group_qubit_wise_commuting() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.group_qubit_wise_commuting"]], "input_dims() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.input_dims"]], "insert() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.insert"]], "inverse() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.inverse"]], "label_iter() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.label_iter"]], "matrix_iter() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.matrix_iter"]], "num_paulis (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.num_paulis"]], "num_qubits (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.num_qubits"]], "num_y (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.num_y"]], "output_dims() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.output_dims"]], "pauli_encoding (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.pauli_encoding"]], "phase (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.phase"]], "phase_encoding (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.phase_encoding"]], "phase_exp (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.phase_exp"]], "power() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.power"]], "qargs (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.qargs"]], "qubit_order (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.qubit_order"]], "reshape() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.reshape"]], "set_pauli_encoding() (paulilist class method)": [[73, "qiskit_qec.operators.PauliList.set_pauli_encoding"]], "set_phase_encoding() (paulilist class method)": [[73, "qiskit_qec.operators.PauliList.set_phase_encoding"]], "set_print_phase_encoding() (paulilist class method)": [[73, "qiskit_qec.operators.PauliList.set_print_phase_encoding"]], "set_qubit_order() (paulilist class method)": [[73, "qiskit_qec.operators.PauliList.set_qubit_order"]], "set_syntax() (paulilist class method)": [[73, "qiskit_qec.operators.PauliList.set_syntax"]], "set_tensor_encoding() (paulilist class method)": [[73, "qiskit_qec.operators.PauliList.set_tensor_encoding"]], "settings (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.settings"]], "shape (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.shape"]], "size (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.size"]], "sort() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.sort"]], "syntax (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.syntax"]], "tensor() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.tensor"]], "tensor_encoding (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.tensor_encoding"]], "to_label() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.to_label"]], "to_labels() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.to_labels"]], "to_matrix() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.to_matrix"]], "transpose() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.transpose"]], "unique() (paulilist method)": [[73, "qiskit_qec.operators.PauliList.unique"]], "x (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.x"]], "z (paulilist attribute)": [[73, "qiskit_qec.operators.PauliList.z"]], "gaugegroup (class in qiskit_qec.structures)": [[74, "qiskit_qec.structures.GaugeGroup"]], "k (gaugegroup attribute)": [[74, "qiskit_qec.structures.GaugeGroup.k"]], "n (gaugegroup attribute)": [[74, "qiskit_qec.structures.GaugeGroup.n"]], "num_gen (gaugegroup attribute)": [[74, "qiskit_qec.structures.GaugeGroup.num_gen"]], "group (class in qiskit_qec.structures)": [[75, "qiskit_qec.structures.Group"]], "decodinggraphedge (class in qiskit_qec.utils)": [[76, "qiskit_qec.utils.DecodingGraphEdge"]], "fault_ids (decodinggraphedge attribute)": [[76, "qiskit_qec.utils.DecodingGraphEdge.fault_ids"]], "get() (decodinggraphedge method)": [[76, "qiskit_qec.utils.DecodingGraphEdge.get"]], "properties (decodinggraphedge attribute)": [[76, "qiskit_qec.utils.DecodingGraphEdge.properties"]], "qubits (decodinggraphedge attribute)": [[76, "qiskit_qec.utils.DecodingGraphEdge.qubits"]], "weight (decodinggraphedge attribute)": [[76, "qiskit_qec.utils.DecodingGraphEdge.weight"]], "decodinggraphnode (class in qiskit_qec.utils)": [[77, "qiskit_qec.utils.DecodingGraphNode"]], "get() (decodinggraphnode method)": [[77, "qiskit_qec.utils.DecodingGraphNode.get"]], "get_counts_via_stim() (in module qiskit_qec.utils)": [[78, "qiskit_qec.utils.get_counts_via_stim"]], "get_stim_circuits() (in module qiskit_qec.utils)": [[79, "qiskit_qec.utils.get_stim_circuits"]], "qiskit_qec.utils.indexer": [[80, "module-qiskit_qec.utils.indexer"]], "noisify_circuit() (in module qiskit_qec.utils)": [[81, "qiskit_qec.utils.noisify_circuit"]], "qiskit_qec.utils.pauli_rep": [[82, "module-qiskit_qec.utils.pauli_rep"]], "qiskit_qec.utils.visualizations": [[83, "module-qiskit_qec.utils.visualizations"]]}})