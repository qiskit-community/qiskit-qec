Search.setIndex({"docnames": ["apidocs/analysis", "apidocs/circuits", "apidocs/codes", "apidocs/decoders", "apidocs/geometry", "apidocs/index", "apidocs/info", "apidocs/linear", "apidocs/operators", "apidocs/structures", "apidocs/utils", "discussions/index", "how_tos/1-how-to-create-codes", "how_tos/2-how-to-work-with-shape-objects", "how_tos/index", "index", "stubs/qiskit_qec.circuits.ArcCircuit", "stubs/qiskit_qec.circuits.CSSCodeCircuit", "stubs/qiskit_qec.circuits.CodeCircuit", "stubs/qiskit_qec.circuits.RepetitionCodeCircuit", "stubs/qiskit_qec.circuits.SurfaceCodeCircuit", "stubs/qiskit_qec.codes.CodeLibrarian", "stubs/qiskit_qec.codes.CodeLibrary", "stubs/qiskit_qec.codes.QECCode", "stubs/qiskit_qec.codes.StabSubSystemCode", "stubs/qiskit_qec.codes.all_small_codes", "stubs/qiskit_qec.codes.small_code", "stubs/qiskit_qec.decoders.CircuitModelMatchingDecoder", "stubs/qiskit_qec.decoders.DecodingGraph", "stubs/qiskit_qec.decoders.RepetitionDecoder", "stubs/qiskit_qec.decoders.ThreeBitDecoder", "stubs/qiskit_qec.decoders.UnionFindDecoder", "stubs/qiskit_qec.geometry.CheckerBoardTile", "stubs/qiskit_qec.geometry.DiagonalBarTile", "stubs/qiskit_qec.geometry.DiagonalHourGlassTile", "stubs/qiskit_qec.geometry.Edge", "stubs/qiskit_qec.geometry.Face", "stubs/qiskit_qec.geometry.GeometryBounds", "stubs/qiskit_qec.geometry.HexagonTile", "stubs/qiskit_qec.geometry.Lattice", "stubs/qiskit_qec.geometry.Manifold", "stubs/qiskit_qec.geometry.OctaSquareTile", "stubs/qiskit_qec.geometry.Plane", "stubs/qiskit_qec.geometry.QubitCount", "stubs/qiskit_qec.geometry.QubitData", "stubs/qiskit_qec.geometry.Shape", "stubs/qiskit_qec.geometry.ShapeObject", "stubs/qiskit_qec.geometry.Shell", "stubs/qiskit_qec.geometry.SquareDiamondTile", "stubs/qiskit_qec.geometry.Tile", "stubs/qiskit_qec.geometry.TileFactory", "stubs/qiskit_qec.geometry.Tiling", "stubs/qiskit_qec.geometry.TwoManifold", "stubs/qiskit_qec.geometry.Vertex", "stubs/qiskit_qec.geometry.WireFrame", "stubs/qiskit_qec.info.Properties", "stubs/qiskit_qec.linear.all_commute", "stubs/qiskit_qec.linear.augment_mat", "stubs/qiskit_qec.linear.build_hyper_partner", "stubs/qiskit_qec.linear.create_lambda_matrix", "stubs/qiskit_qec.linear.is_center", "stubs/qiskit_qec.linear.is_hyper_form", "stubs/qiskit_qec.linear.is_same_span", "stubs/qiskit_qec.linear.is_stabilizer_group", "stubs/qiskit_qec.linear.is_symplectic_form", "stubs/qiskit_qec.linear.is_symplectic_matrix_form", "stubs/qiskit_qec.linear.is_symplectic_vector_form", "stubs/qiskit_qec.linear.locate_hyper_partner", "stubs/qiskit_qec.linear.make_commute_hyper", "stubs/qiskit_qec.linear.rank", "stubs/qiskit_qec.linear.rref", "stubs/qiskit_qec.linear.rref_complete", "stubs/qiskit_qec.linear.symplectic_gram_schmidt", "stubs/qiskit_qec.linear.symplectic_product", "stubs/qiskit_qec.operators.BasePauli", "stubs/qiskit_qec.operators.Pauli", "stubs/qiskit_qec.operators.PauliList", "stubs/qiskit_qec.structures.GaugeGroup", "stubs/qiskit_qec.structures.Group", "stubs/qiskit_qec.utils.DecodingGraphEdge", "stubs/qiskit_qec.utils.DecodingGraphNode", "stubs/qiskit_qec.utils.get_counts_via_stim", "stubs/qiskit_qec.utils.get_stim_circuits", "stubs/qiskit_qec.utils.indexer", "stubs/qiskit_qec.utils.noisify_circuit", "stubs/qiskit_qec.utils.pauli_rep", "stubs/qiskit_qec.utils.visualizations", "tutorials/1-tutorial-example", "tutorials/QEC_Framework_IEEE_2022", "tutorials/how-to-use-union-find", "tutorials/index"], "filenames": ["apidocs/analysis.rst", "apidocs/circuits.rst", "apidocs/codes.rst", "apidocs/decoders.rst", "apidocs/geometry.rst", "apidocs/index.rst", "apidocs/info.rst", "apidocs/linear.rst", "apidocs/operators.rst", "apidocs/structures.rst", "apidocs/utils.rst", "discussions/index.rst", "how_tos/1-how-to-create-codes.ipynb", "how_tos/2-how-to-work-with-shape-objects.ipynb", "how_tos/index.rst", "index.rst", "stubs/qiskit_qec.circuits.ArcCircuit.rst", "stubs/qiskit_qec.circuits.CSSCodeCircuit.rst", "stubs/qiskit_qec.circuits.CodeCircuit.rst", "stubs/qiskit_qec.circuits.RepetitionCodeCircuit.rst", "stubs/qiskit_qec.circuits.SurfaceCodeCircuit.rst", "stubs/qiskit_qec.codes.CodeLibrarian.rst", "stubs/qiskit_qec.codes.CodeLibrary.rst", "stubs/qiskit_qec.codes.QECCode.rst", "stubs/qiskit_qec.codes.StabSubSystemCode.rst", "stubs/qiskit_qec.codes.all_small_codes.rst", "stubs/qiskit_qec.codes.small_code.rst", "stubs/qiskit_qec.decoders.CircuitModelMatchingDecoder.rst", "stubs/qiskit_qec.decoders.DecodingGraph.rst", "stubs/qiskit_qec.decoders.RepetitionDecoder.rst", "stubs/qiskit_qec.decoders.ThreeBitDecoder.rst", "stubs/qiskit_qec.decoders.UnionFindDecoder.rst", "stubs/qiskit_qec.geometry.CheckerBoardTile.rst", "stubs/qiskit_qec.geometry.DiagonalBarTile.rst", "stubs/qiskit_qec.geometry.DiagonalHourGlassTile.rst", "stubs/qiskit_qec.geometry.Edge.rst", "stubs/qiskit_qec.geometry.Face.rst", "stubs/qiskit_qec.geometry.GeometryBounds.rst", "stubs/qiskit_qec.geometry.HexagonTile.rst", "stubs/qiskit_qec.geometry.Lattice.rst", "stubs/qiskit_qec.geometry.Manifold.rst", "stubs/qiskit_qec.geometry.OctaSquareTile.rst", "stubs/qiskit_qec.geometry.Plane.rst", "stubs/qiskit_qec.geometry.QubitCount.rst", "stubs/qiskit_qec.geometry.QubitData.rst", "stubs/qiskit_qec.geometry.Shape.rst", "stubs/qiskit_qec.geometry.ShapeObject.rst", "stubs/qiskit_qec.geometry.Shell.rst", "stubs/qiskit_qec.geometry.SquareDiamondTile.rst", "stubs/qiskit_qec.geometry.Tile.rst", "stubs/qiskit_qec.geometry.TileFactory.rst", "stubs/qiskit_qec.geometry.Tiling.rst", "stubs/qiskit_qec.geometry.TwoManifold.rst", "stubs/qiskit_qec.geometry.Vertex.rst", "stubs/qiskit_qec.geometry.WireFrame.rst", "stubs/qiskit_qec.info.Properties.rst", "stubs/qiskit_qec.linear.all_commute.rst", "stubs/qiskit_qec.linear.augment_mat.rst", "stubs/qiskit_qec.linear.build_hyper_partner.rst", "stubs/qiskit_qec.linear.create_lambda_matrix.rst", "stubs/qiskit_qec.linear.is_center.rst", "stubs/qiskit_qec.linear.is_hyper_form.rst", "stubs/qiskit_qec.linear.is_same_span.rst", "stubs/qiskit_qec.linear.is_stabilizer_group.rst", "stubs/qiskit_qec.linear.is_symplectic_form.rst", "stubs/qiskit_qec.linear.is_symplectic_matrix_form.rst", "stubs/qiskit_qec.linear.is_symplectic_vector_form.rst", "stubs/qiskit_qec.linear.locate_hyper_partner.rst", "stubs/qiskit_qec.linear.make_commute_hyper.rst", "stubs/qiskit_qec.linear.rank.rst", "stubs/qiskit_qec.linear.rref.rst", "stubs/qiskit_qec.linear.rref_complete.rst", "stubs/qiskit_qec.linear.symplectic_gram_schmidt.rst", "stubs/qiskit_qec.linear.symplectic_product.rst", "stubs/qiskit_qec.operators.BasePauli.rst", "stubs/qiskit_qec.operators.Pauli.rst", "stubs/qiskit_qec.operators.PauliList.rst", "stubs/qiskit_qec.structures.GaugeGroup.rst", "stubs/qiskit_qec.structures.Group.rst", "stubs/qiskit_qec.utils.DecodingGraphEdge.rst", "stubs/qiskit_qec.utils.DecodingGraphNode.rst", "stubs/qiskit_qec.utils.get_counts_via_stim.rst", "stubs/qiskit_qec.utils.get_stim_circuits.rst", "stubs/qiskit_qec.utils.indexer.rst", "stubs/qiskit_qec.utils.noisify_circuit.rst", "stubs/qiskit_qec.utils.pauli_rep.rst", "stubs/qiskit_qec.utils.visualizations.rst", "tutorials/1-tutorial-example.ipynb", "tutorials/QEC_Framework_IEEE_2022.ipynb", "tutorials/how-to-use-union-find.ipynb", "tutorials/index.rst"], "titles": ["Analysis (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.analysis</span></code>)", "Circuits (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.circuits</span></code>)", "Codes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.codes</span></code>)", "Decoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.decoders</span></code>)", "Geometry (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.geometry</span></code>)", "Qiskit QEC API Reference", "Info (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.info</span></code>)", "Linear (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.linear</span></code>)", "Operators (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.operators</span></code>)", "Structures (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.structures</span></code>)", "Utils (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_qec.utils</span></code>)", "QEC Discussions", "How-to: Create Codes", "How-to: work with geometry objects", "Qiskit QEC How-to guides", "Qiskit QEC documentation", "ArcCircuit", "CSSCodeCircuit", "CodeCircuit", "RepetitionCodeCircuit", "SurfaceCodeCircuit", "CodeLibrarian", "CodeLibrary", "QECCode", "StabSubSystemCode", "qiskit_qec.codes.all_small_codes", "qiskit_qec.codes.small_code", "CircuitModelMatchingDecoder", "DecodingGraph", "RepetitionDecoder", "ThreeBitDecoder", "UnionFindDecoder", "CheckerBoardTile", "DiagonalBarTile", "DiagonalHourGlassTile", "Edge", "Face", "GeometryBounds", "HexagonTile", "Lattice", "Manifold", "OctaSquareTile", "Plane", "QubitCount", "QubitData", "Shape", "ShapeObject", "Shell", "SquareDiamondTile", "Tile", "TileFactory", "Tiling", "TwoManifold", "Vertex", "WireFrame", "Properties", "qiskit_qec.linear.all_commute", "qiskit_qec.linear.augment_mat", "qiskit_qec.linear.build_hyper_partner", "qiskit_qec.linear.create_lambda_matrix", "qiskit_qec.linear.is_center", "qiskit_qec.linear.is_hyper_form", "qiskit_qec.linear.is_same_span", "qiskit_qec.linear.is_stabilizer_group", "qiskit_qec.linear.is_symplectic_form", "qiskit_qec.linear.is_symplectic_matrix_form", "qiskit_qec.linear.is_symplectic_vector_form", "qiskit_qec.linear.locate_hyper_partner", "qiskit_qec.linear.make_commute_hyper", "qiskit_qec.linear.rank", "qiskit_qec.linear.rref", "qiskit_qec.linear.rref_complete", "qiskit_qec.linear.symplectic_gram_schmidt", "qiskit_qec.linear.symplectic_product", "BasePauli", "Pauli", "PauliList", "GaugeGroup", "Group", "DecodingGraphEdge", "DecodingGraphNode", "qiskit_qec.utils.get_counts_via_stim", "qiskit_qec.utils.get_stim_circuits", "qiskit_qec.utils.indexer", "qiskit_qec.utils.noisify_circuit", "qiskit_qec.utils.pauli_rep", "qiskit_qec.utils.visualizations", "Tutorial: example", "Qiskit QEC Software Framework", "Using the Union Find decoder in qiskit_qec", "QEC Tutorials"], "terms": {"thi": [0, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 45, 56, 58, 60, 67, 68, 74, 75, 76, 79, 80, 88, 89], "contain": [0, 12, 17, 26, 32, 33, 34, 37, 38, 41, 44, 45, 48, 75, 76, 82, 88, 89], "an": [0, 12, 13, 15, 16, 17, 18, 23, 28, 31, 37, 39, 43, 45, 56, 58, 59, 63, 68, 72, 74, 75, 76, 88, 89], "errorpropag": 0, "circuit": [0, 5, 16, 17, 18, 19, 20, 27, 28, 29, 30, 74, 75, 81, 82, 84, 89], "error": [0, 12, 15, 16, 17, 18, 19, 20, 23, 27, 28, 29, 30, 31, 84, 89], "propag": 0, "interfac": [0, 18], "analysi": [5, 88, 89], "qiskit_qec": [5, 12, 13, 17, 45, 88], "code": [5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 47, 51, 55, 76, 79, 80, 89], "decod": [5, 16, 18, 23, 27, 28, 29, 30, 31, 79, 80], "geometri": [5, 12, 37, 43, 45, 46, 88], "info": [5, 12, 25, 26, 55, 88], "linear": [5, 88, 89], "oper": [5, 12, 13, 16, 17, 18, 19, 20, 27, 31, 32, 33, 34, 38, 41, 47, 48, 50, 56, 58, 60, 68, 74, 75, 76, 77, 82, 84, 89], "structur": [5, 12, 13, 41], "util": [5, 12, 88], "about": [11, 26, 88], "topic": [11, 88], "concept": [11, 88], "relat": [11, 88], "packag": [11, 15, 88], "The": [12, 13, 15, 16, 17, 24, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 43, 45, 48, 57, 65, 66, 74, 75, 76, 89], "qec": [12, 13, 23, 28, 29], "framework": [12, 13, 15, 74, 75, 76, 89], "doe": [12, 16, 58, 60, 62, 74, 75, 76, 88], "prescrib": 12, "ani": [12, 15, 16, 17, 18, 19, 20, 64, 74, 75, 76, 77, 79, 80, 81, 88], "particular": [12, 88], "wai": [12, 18, 76, 88], "follow": [12, 17, 18, 19, 20, 31, 32, 33, 34, 41, 45, 48, 88], "some": [12, 13, 19, 20, 74, 88], "simpl": [12, 17, 18, 30, 37, 45, 88], "design": 12, "philosophi": 12, "look": [12, 88, 89], "wide": [12, 88], "rang": [12, 47, 58, 68, 88], "tool": [12, 86, 88], "method": [12, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 56, 58, 60, 67, 68, 74, 75, 76, 79, 80, 88], "instructur": 12, "make": [12, 16, 17, 18, 19, 20, 47, 68, 74, 75, 76, 88], "easier": [12, 88], "within": [12, 16, 37, 45, 88], "ar": [12, 13, 16, 17, 18, 19, 20, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 45, 46, 47, 48, 53, 54, 60, 65, 66, 68, 72, 74, 75, 76, 79, 80, 82, 84, 88, 89], "veri": [12, 15, 88, 89], "few": [12, 88], "class": [12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 74, 75, 76, 77, 78, 79, 80, 83, 86, 88, 89], "i": [12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 55, 57, 58, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 80, 82, 84, 88, 89], "done": [12, 18, 27, 29, 30, 39, 88], "two": [12, 16, 42, 45, 51, 57, 65, 66, 71, 73, 75, 82, 88, 89], "primari": [12, 88], "reason": [12, 88], "first": [12, 31, 39, 62, 74, 76, 88, 89], "chang": [12, 15, 16, 17, 18, 19, 20, 74, 75, 88], "due": [12, 19, 20, 88], "failur": [12, 88], "fix": [12, 76, 88], "other": [12, 18, 39, 47, 74, 75, 76, 88], "can": [12, 18, 24, 31, 32, 38, 39, 41, 48, 65, 66, 74, 75, 76, 82, 88, 89], "easi": [12, 88], "take": [12, 16, 88, 89], "out": [12, 45, 58, 75, 76, 88], "given": [12, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 41, 44, 45, 47, 48, 57, 58, 64, 65, 66, 68, 74, 75, 76, 82, 88, 89], "wheer": [12, 88], "longer": [12, 88], "work": [12, 31, 47, 76, 88, 89], "we": [12, 19, 20, 88, 89], "want": [12, 38, 88, 89], "avoid": [12, 45, 88], "have": [12, 13, 16, 17, 18, 19, 20, 27, 29, 30, 35, 36, 43, 46, 47, 53, 54, 56, 57, 58, 67, 68, 72, 73, 76, 88], "continu": [12, 88], "check": [12, 31, 42, 45, 60, 64, 65, 66, 76, 88, 89], "still": [12, 15, 75, 76, 88], "whether": [12, 16, 17, 18, 19, 20, 28, 29, 80, 88], "keep": [12, 47, 51, 88], "insid": [12, 39, 45, 47, 88], "second": [12, 45, 62, 88], "sinc": [12, 75, 76, 88], "heirachi": [12, 88], "could": [12, 16, 17, 18, 19, 20, 88], "us": [12, 13, 16, 17, 18, 19, 20, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 45, 46, 47, 48, 53, 54, 59, 68, 71, 72, 74, 75, 76, 84, 88], "number": [12, 16, 17, 18, 19, 20, 26, 27, 28, 43, 45, 65, 66, 67, 68, 73, 74, 75, 76, 77, 81, 88, 89], "would": [12, 16, 17, 18, 19, 20, 88, 89], "larg": [12, 45, 76, 88], "overlap": [12, 88], "difficult": [12, 88], "manag": [12, 18, 88], "instead": [12, 39, 74, 75, 76, 88], "aim": [12, 88], "onli": [12, 13, 16, 17, 18, 19, 20, 26, 45, 47, 53, 54, 76, 84, 88, 89], "stabsubsystemcod": [12, 17, 25, 26, 55, 88], "which": [12, 16, 17, 18, 19, 20, 23, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 45, 46, 47, 48, 51, 53, 54, 74, 75, 76, 80, 84, 88, 89], "deal": [12, 19, 20, 88], "subsystem": [12, 24, 27, 74, 75, 76], "A": [12, 13, 17, 18, 23, 24, 31, 32, 37, 38, 39, 41, 45, 47, 48, 53, 54, 55, 71, 73, 74, 75, 76, 79, 80, 82, 89], "construct": [12, 16, 17, 23, 28, 31, 75, 76, 88], "rather": [12, 16, 88], "than": [12, 16, 75, 88], "group": [12, 24, 60, 63, 74, 75, 76, 77], "usual": [12, 88], "ha": [12, 13, 27, 29, 30, 41, 45, 58, 67, 74, 75, 76, 88], "mani": [12, 16, 17, 18, 19, 20, 88], "differ": [12, 16, 19, 47, 51, 56, 72, 74, 75, 76, 88, 89], "paramet": [12, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 84, 88], "option": [12, 16, 21, 24, 25, 32, 33, 34, 35, 37, 38, 39, 41, 45, 46, 47, 48, 51, 57, 64, 65, 66, 67, 68, 72, 74, 75, 76, 77, 81, 82], "inherit": [12, 24, 36, 47, 53, 54, 75, 76, 77, 88], "from": [12, 13, 16, 17, 18, 19, 20, 23, 28, 29, 32, 36, 37, 38, 39, 41, 44, 45, 47, 48, 51, 53, 54, 58, 68, 74, 75, 76, 77, 88, 89], "exampl": [12, 17, 24, 25, 26, 38, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76], "build": [12, 27, 58, 72], "base": [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 74, 75, 76, 77, 78, 79, 80, 88], "cut": [12, 47, 88], "glu": [12, 88], "region": [12, 39, 45, 47, 88], "tile": [12, 32, 33, 34, 38, 39, 41, 45, 48, 50], "place": [12, 39, 45, 51, 74, 75, 76, 88], "lattic": [12, 32, 38, 41, 48, 51, 88], "small": [12, 25, 88], "rel": [12, 51, 88], "often": [12, 88], "special": [12, 27, 88], "mai": [12, 13, 32, 33, 34, 38, 41, 45, 48, 88, 89], "For": [12, 27, 29, 30, 75, 76, 82, 88], "triangularcolorcodebuild": [12, 88], "heavyhexcodebuild": [12, 88], "qiskit": [12, 16, 74, 75, 76, 81, 82], "codelibrarian": [12, 88], "variou": [12, 18, 88], "codelibrari": [12, 88], "instanc": [12, 29, 35, 36, 44, 46, 47, 53, 54, 74, 75, 88], "store": [12, 13, 16, 32, 33, 34, 38, 41, 45, 48, 74, 88], "properti": [12, 25, 26, 27, 29, 30, 76, 79, 80, 88], "eventu": [12, 88], "host": [12, 88], "separ": [12, 31, 51, 88], "web": [12, 88], "server": [12, 88], "possibl": [12, 13, 28, 56, 74, 75, 76, 88, 89], "even": [12, 17, 18, 65, 66, 74, 75, 76, 88], "under": [12, 88], "local": [12, 16, 88], "clifford": [12, 74, 75, 76], "permut": [12, 88], "equival": [12, 25, 26, 74, 75], "grow": [12, 31, 88, 89], "quickli": [12, 88], "meant": [12, 88], "analog": [12, 88], "gap": [12, 25, 26, 88], "": [12, 13, 16, 17, 58, 68, 74, 75, 76, 80, 82, 88], "sloan": [12, 88], "encyclopedia": [12, 88], "integ": [12, 27, 29, 30, 31, 47, 59, 65, 66, 74, 75, 76, 88, 89], "sequenc": [12, 16, 45, 88], "There": [12, 88], "These": [12, 27, 29, 30, 31, 88], "includ": [12, 16, 17, 18, 19, 20, 31, 37, 45, 47, 76, 89], "write": [12, 74, 76, 88], "custom": [12, 84, 88], "consid": [12, 51, 68, 74, 75, 76, 79, 80, 88, 89], "7": [12, 32, 33, 34, 38, 41, 48, 88, 89], "qubit": [12, 13, 16, 17, 18, 19, 20, 24, 26, 27, 31, 32, 33, 34, 38, 41, 43, 44, 47, 48, 51, 74, 75, 76, 77, 79, 80, 82, 85, 89], "stean": [12, 88], "color": [12, 16, 32, 33, 34, 38, 41, 47, 48, 88], "todo": [12, 31, 72, 76, 88], "add": [12, 31, 35, 36, 44, 46, 47, 53, 54, 72, 84, 88], "imag": 12, "import": [12, 13, 17, 76, 87, 88, 89], "numpi": [12, 13, 24, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 87, 88], "np": [12, 13, 32, 33, 34, 38, 39, 41, 48, 56, 58, 60, 69, 70, 71, 74, 75, 76, 77, 87, 88], "gaugegroup": [12, 24, 26, 88], "pauli_list": [12, 88], "paulilist": [12, 24, 25, 26, 32, 33, 34, 38, 41, 47, 48, 74, 75, 88], "arrai": [12, 13, 24, 32, 33, 34, 38, 39, 41, 44, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 88], "1": [12, 13, 16, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 45, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 89], "0": [12, 13, 16, 17, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 45, 46, 47, 48, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 87, 88, 89], "gauge_group": [12, 24, 25, 55, 88], "also": [12, 16, 17, 18, 19, 20, 28, 45, 57, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 88], "set": [12, 13, 16, 17, 18, 19, 20, 27, 29, 30, 31, 37, 39, 45, 47, 53, 58, 62, 68, 74, 75, 76, 80, 89], "pauli": [12, 13, 17, 24, 27, 31, 32, 33, 34, 38, 41, 48, 56, 58, 60, 63, 68, 74, 81, 82, 84, 85], "genertor": [12, 88], "describ": [12, 31, 32, 33, 34, 38, 41, 45, 48, 79, 80, 88, 89], "2": [12, 13, 16, 25, 26, 32, 33, 34, 38, 41, 45, 47, 48, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 87, 89], "default": [12, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 32, 33, 34, 37, 38, 39, 41, 45, 46, 47, 48, 51, 64, 65, 66, 68, 72, 74, 75, 76, 77, 88], "read": [12, 19, 20, 74, 75, 76, 88], "product": [12, 56, 58, 59, 67, 68, 73, 74, 75, 76, 88], "sytnax": 12, "right": [12, 19, 20, 57, 74, 75, 76, 88], "left": [12, 19, 20, 57, 74, 75, 76, 88], "so": [12, 13, 16, 17, 18, 19, 20, 45, 74, 75, 76, 88, 89], "iixx": [12, 88], "x0x1": 12, "iiixxxx": 12, "iiizzzz": 12, "ixxxixi": 12, "izzzizi": 12, "xixiixx": 12, "ziziizz": 12, "3": [12, 17, 25, 26, 30, 32, 33, 34, 38, 41, 47, 48, 74, 75, 76, 88], "need": [12, 39, 74, 76, 80, 88, 89], "syntax": [12, 74, 75, 76], "form": [12, 16, 17, 18, 19, 20, 32, 33, 34, 41, 47, 48, 61, 65, 66, 70, 71, 76, 81, 84, 88], "index": [12, 17, 19, 20, 21, 22, 25, 26, 31, 32, 33, 34, 38, 41, 48, 55, 58, 67, 74, 75, 76, 80, 82, 88, 89], "x0x1x2x3": [12, 88], "z0z1z2z3": [12, 88], "x1x3x4x5": [12, 88], "z1z3z4z5": [12, 88], "x0x1x4x6": [12, 88], "z0z1z4z6": [12, 88], "6": [12, 32, 33, 34, 38, 41, 48, 88], "start": [12, 19, 88, 89], "cb": [12, 88], "output": [12, 16, 17, 18, 19, 20, 31, 74, 75, 76, 88], "format": [12, 31, 74, 75, 76, 88], "pauli_rep": [12, 74, 75, 76, 88], "base_pauli": [12, 74, 76, 88], "basepauli": [12, 75, 76, 77, 88], "set_syntax": [12, 74, 75, 76, 88], "index_syntax": [12, 74, 75, 76, 88], "set_qubit_ord": [12, 74, 75, 76, 88], "n": [12, 17, 21, 22, 24, 25, 26, 27, 29, 30, 37, 55, 59, 74, 75, 76, 77, 85, 88, 89], "5": [12, 26, 32, 33, 34, 38, 41, 48, 87, 88, 89], "k": [12, 21, 22, 25, 26, 32, 33, 34, 38, 41, 48, 55, 58, 60, 67, 68, 71, 77, 88], "show": [12, 72, 88], "its": [12, 18, 37, 67, 88], "small_cod": [12, 88], "4": [12, 25, 26, 32, 33, 34, 38, 41, 47, 48, 55, 58, 69, 71, 88, 89], "fetch": [12, 88], "inform": [12, 16, 19, 20, 26, 28, 44, 58, 88], "info_onli": [12, 21, 22, 25, 26, 88], "true": [12, 13, 16, 17, 18, 19, 20, 25, 26, 28, 31, 32, 33, 34, 37, 38, 39, 41, 45, 47, 48, 56, 57, 60, 61, 62, 63, 64, 65, 66, 74, 75, 76, 77, 88], "type": [12, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 84, 88], "isotropic_gener": [12, 25, 26, 55, 77, 88], "39": [12, 88], "z1z2": [12, 88], "z0z4": [12, 88], "y1y2x3": [12, 88], "z0z1z3": [12, 88], "y0x3y4": [12, 88], "is_subsystem": [12, 25, 26, 88], "code_typ": [12, 25, 26, 55, 88], "aut_group_s": [12, 25, 26, 55, 88], "32": [12, 88], "is_triorthogon": [12, 55, 88], "is_decompos": [12, 25, 26, 55, 88], "weight_enumer": [12, 25, 26, 55, 88], "8": [12, 25, 32, 33, 34, 38, 41, 48, 55, 88, 89], "13": [12, 38, 41, 88], "is_css": [12, 25, 26, 55, 88], "uuid": [12, 25, 26, 55, 88], "33f790cd": [12, 88], "ab06": [12, 88], "47fb": [12, 88], "a2b3": [12, 88], "057f38329942": [12, 88], "is_degener": [12, 25, 26, 55, 88], "d": [12, 17, 18, 19, 20, 25, 26, 41, 48, 55, 88, 89], "is_gf4linear": [12, 25, 26, 55, 88], "23": [12, 88], "all": [12, 16, 18, 19, 20, 23, 25, 28, 31, 43, 46, 47, 50, 60, 74, 75, 76, 88, 89], "css": [12, 17, 27, 47, 88], "all_small_cod": [12, 88], "fals": [12, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 33, 37, 38, 39, 45, 47, 56, 57, 60, 62, 64, 65, 66, 74, 75, 76, 80, 88], "36": [12, 88], "x1z2z3": 12, "y0y1x3": [12, 25], "z0z1x2z4": 12, "logical_op": [12, 25, 26, 55, 88], "z0z1x3": 12, "z2x4": 12, "z0z3": [12, 25], "z4": [12, 26], "712505a9": 12, "19ed": 12, "4702": 12, "ba25": 12, "d2270317afaa": 12, "more": [12, 16, 17, 18, 19, 20, 31, 45, 74, 76, 89], "triangular": [12, 88], "see": [12, 16, 20, 31, 38, 57, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 88], "intermedi": [12, 13, 47, 88], "result": [12, 16, 17, 18, 19, 20, 27, 28, 29, 30, 72, 74, 75, 76, 88], "when": [12, 16, 45, 74, 75, 76, 79, 80, 88, 89], "distanc": [12, 16, 17, 18, 19, 20, 45, 51], "appropri": [12, 32, 38, 41, 48, 88], "hexagon": [12, 38, 88], "hexagontil": [12, 41, 48, 88], "shape": [12, 39, 76, 88], "cutter": [12, 47, 88], "codefactori": [12, 88], "minifold": 12, "plane": [12, 45, 88], "lattiv": [12, 88], "against": [12, 88], "triangular_code_factori": [12, 88], "manifold": [12, 42, 45, 52, 88], "tile_optyp": [12, 51, 88], "dxz": [12, 38, 41, 88], "choos": [12, 74, 75, 76, 88], "both": [12, 19, 20, 24, 39, 75, 88], "x": [12, 13, 16, 17, 19, 20, 27, 32, 33, 34, 41, 48, 57, 59, 61, 68, 72, 74, 75, 76, 88, 89], "z": [12, 13, 16, 17, 19, 20, 27, 32, 33, 34, 41, 48, 60, 61, 68, 72, 74, 75, 76, 87, 88, 89], "each": [12, 16, 17, 18, 19, 20, 27, 28, 29, 30, 32, 33, 34, 37, 38, 41, 43, 47, 48, 56, 58, 68, 74, 75, 76, 88], "predefin": [12, 88], "u_vec": [12, 32, 33, 34, 38, 39, 41, 48, 88], "v_vec": [12, 32, 33, 34, 38, 39, 41, 48, 88], "length": [12, 16, 39, 45, 67, 68, 75, 88], "side": [12, 45, 74], "scale": [12, 45, 47, 88], "defin": [12, 18, 24, 32, 33, 34, 38, 41, 45, 47, 48, 56, 73, 74, 75, 84, 88, 89], "point": [12, 13, 37, 39, 42, 45, 47, 51, 74, 88, 89], "triangl": [12, 88], "h": [12, 38, 74, 75, 76, 82, 88, 89], "r": [12, 37, 38, 69, 70, 88], "on_boundari": [12, 45, 88], "boundari": [12, 16, 17, 18, 19, 20, 27, 31, 45, 47, 80, 88], "boundary_strategi": [12, 47, 88], "combin": [12, 37, 47, 74, 75, 76, 88], "peic": 12, "level": [12, 47, 88], "weight": [12, 27, 28, 29, 30, 31, 38, 47, 76, 79, 88], "after": [12, 16, 19, 20, 74, 75, 89], "displai": [12, 32, 33, 34, 38, 41, 48, 49, 74, 75, 76, 88], "view": [12, 88], "allow": [12, 13, 19, 20, 88], "correct": [12, 15, 16, 27, 28, 29, 30, 31, 45, 74, 76, 89], "show_face_color": [12, 88], "As": [12, 16, 88], "face": [12, 13, 32, 33, 34, 38, 41, 47, 48], "show_insid": [12, 88], "lattice_view": [12, 88], "precut_tiling_view": [12, 88], "befor": [12, 75, 76, 88], "set_paramet": [12, 88], "updat": [12, 27, 29, 30, 74, 75, 76, 88], "is_configur": [12, 88], "directli": [12, 88], "individu": [12, 88], "update_is_configur": [12, 88], "make_cod": [12, 88], "produc": [12, 16, 17, 18, 19, 20, 31, 74, 75, 76, 88], "who": 12, "qubit_index": 12, "draw": [12, 13, 24, 32, 33, 34, 38, 41, 47, 48, 49, 88], "face_color": [12, 32, 33, 34, 38, 41, 47, 48, 50, 88], "show_index": [12, 47, 88], "previou": [12, 16, 35], "approach": [12, 88], "wrap": 12, "In": [12, 18, 31, 88, 89], "case": [12, 16, 17, 18, 19, 20, 31, 88], "9": [12, 16, 32, 33, 34, 38, 41, 88], "triangular_color_code_build": [12, 88], "anoth": [12, 74, 75, 76, 88], "surfac": [12, 17, 18, 20, 31, 45], "surface_code_build": [12, 88], "surfacecodebuild": [12, 88], "dx": [12, 88], "dz": [12, 88], "xcolor": [12, 13, 47, 88], "lightcor": [12, 88], "zcolor": [12, 13, 47, 88], "skyblu": [12, 88], "rotat": [12, 20, 42, 47, 48, 88], "rotated_surface_code_buil": [12, 88], "rotatedsurfacecodebuild": [12, 88], "ul_op": [12, 88], "Or": 12, "heavi": [12, 88], "hex": 12, "heavyhex_code_build": [12, 88], "primit": [13, 88], "geometr": [13, 37, 50, 88], "At": [13, 16, 88], "present": [13, 88], "consist": [13, 23, 74, 88], "vertic": [13, 27, 29, 30, 35, 45, 47, 51, 89], "edg": [13, 16, 27, 28, 29, 30, 31, 47, 54, 79, 89], "wirefram": [13, 36, 47, 88], "shell": [13, 24, 32, 33, 34, 38, 41, 45, 48, 51, 88], "vertex": [13, 35, 45, 47, 88], "space": [13, 37, 88], "list": [13, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 41, 44, 45, 47, 48, 50, 53, 54, 61, 71, 74, 75, 76, 77, 79, 80, 81, 82, 84, 88, 89], "hyperedg": [13, 88], "self": [13, 16, 17, 19, 20, 27, 29, 30, 31, 37, 39, 47, 74, 75, 76, 88], "loop": [13, 31, 88], "associ": [13, 24, 51, 74, 88], "them": [13, 31, 76, 88], "current": [13, 43, 45, 74, 75, 76, 88], "etc": [13, 17, 18, 32, 33, 34, 82, 88], "ad": [13, 16, 19, 20, 72, 84, 88, 89], "futur": [13, 15], "assocoi": [13, 88], "system": [13, 24, 88], "being": [13, 17, 19, 20, 51, 53, 71, 88], "step": [13, 88, 89], "until": [13, 88], "solid": [13, 88], "c": [13, 16, 17, 32, 33, 34, 37, 41, 48, 74, 75, 76, 88], "librari": [13, 22, 26], "creat": [13, 16, 17, 18, 19, 20, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 59, 89], "implement": [13, 16, 19, 27, 45, 58, 88, 89], "thu": [13, 35, 36, 46, 47, 53, 54, 88], "necessarili": [13, 88], "fast": [13, 88], "fulli": [13, 88, 89], "featur": [13, 47, 88], "model": [13, 17, 23, 27, 29, 30, 81, 84, 88, 89], "qubit_count": [13, 24, 32, 33, 34, 38, 41, 47, 48, 50, 51, 88], "qubitcount": [13, 24, 47, 50, 51, 88], "qubit_data": [13, 24, 32, 33, 34, 38, 41, 47, 48, 50, 51, 88], "qubitdata": [13, 24, 47, 50, 51, 88], "squar": [13, 41, 45, 48, 88], "repres": [13, 31, 37, 42, 56, 58, 60, 63, 72, 74, 75, 76, 88], "xxxx": [13, 32, 33, 34, 41, 88], "zzzz": [13, 32, 33, 34, 41, 88], "share": [13, 88], "common": [13, 88], "x_oper": [13, 88], "z_oper": [13, 88], "y_oper": [13, 88], "y": [13, 16, 32, 33, 34, 41, 48, 74, 75, 76, 88, 89], "v1": [13, 32, 33, 34, 38, 41, 48, 88], "id": [13, 35, 36, 43, 46, 47, 53, 54, 88, 89], "new_qubit": [13, 43, 88], "increment_qubit": [13, 43, 88], "v2": [13, 32, 33, 34, 38, 41, 48, 88], "v3": [13, 32, 33, 34, 38, 41, 88], "v4": [13, 38, 41, 88], "e1": [13, 88], "e2": [13, 88], "e3": [13, 88], "e4": [13, 88], "wf1": [13, 88], "f1": [13, 88], "v5": [13, 38, 41, 88], "v6": [13, 41, 88], "v7": [13, 41, 88], "v8": [13, 34, 88], "e5": [13, 88], "e6": [13, 88], "e7": [13, 88], "e8": [13, 88], "wf2": [13, 88], "f2": [13, 88], "14": [13, 41, 89], "green": [13, 88], "yellow": [13, 88], "show_face_id": [13, 47, 88], "earli": 15, "stage": 15, "develop": [15, 88], "like": [15, 52, 65, 66, 82, 88], "break": 15, "api": 15, "releas": [15, 75, 88], "If": [15, 16, 17, 18, 19, 20, 25, 26, 28, 32, 33, 34, 38, 39, 41, 45, 48, 56, 58, 67, 68, 74, 75, 76, 88], "you": [15, 88, 89], "encount": 15, "bug": 15, "pleas": 15, "open": [15, 88], "issu": [15, 88], "github": [15, 82, 88], "sourc": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88], "experimentalist": [15, 88], "theorist": [15, 88], "quantum": [15, 27, 28, 58], "tutori": [15, 88], "how": [15, 16, 17, 18, 19, 20, 45, 74, 75, 76, 88], "guid": 15, "refer": [15, 16, 43, 75, 76, 88], "discuss": [15, 88], "link": [16, 88], "t": [16, 17, 18, 19, 20, 60, 73, 74, 75, 76, 80, 88, 89], "basi": [16, 17, 19, 20, 27, 29, 30, 32, 38, 39, 41, 48, 61, 68, 72, 82, 88], "xy": [16, 76, 88], "logic": [16, 17, 18, 19, 20, 27, 28, 29, 31, 77, 82, 89], "reset": [16, 19, 20, 82, 88, 89], "delai": [16, 19], "none": [16, 17, 19, 21, 22, 24, 25, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 64, 65, 66, 67, 68, 72, 74, 75, 76, 77, 80, 81, 82, 88], "barrier": [16, 19, 20, 82, 88], "max_dist": 16, "schedul": 16, "run_202": 16, "rounds_per_202": 16, "conditional_reset": 16, "codecircuit": [16, 17, 19, 20, 28], "anisotrop": 16, "repetit": [16, 17, 18, 19, 20, 88], "correspond": [16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 79, 82, 84, 88], "over": [16, 19, 74, 76, 88, 89], "syndrom": [16, 17, 18, 19, 20, 28, 29, 31, 80, 88, 89], "measur": [16, 17, 18, 19, 20, 27, 29, 30, 31, 80, 81, 82, 88, 89], "round": [16, 17, 18, 19, 20, 80, 88, 89], "provid": [16, 24, 31, 32, 33, 34, 38, 39, 41, 48, 75, 76], "param": [16, 17, 18, 19, 20, 47], "tupl": [16, 17, 19, 20, 21, 22, 31, 35, 44, 45, 47, 67, 71, 72, 74, 75, 76], "c0": 16, "c1": 16, "where": [16, 32, 33, 34, 38, 41, 48, 68, 74, 75, 76, 88, 89], "auxiliari": 16, "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 35, 36, 37, 39, 40, 43, 45, 46, 47, 50, 53, 54, 58, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 88], "str": [16, 17, 19, 20, 21, 22, 27, 28, 29, 30, 31, 44, 45, 47, 51, 57, 74, 75, 76, 77, 79, 80, 89], "pair": [16, 27, 28, 29, 30, 56, 61, 67, 68, 72, 88], "specifi": [16, 26, 28, 31, 74, 75, 76], "string": [16, 17, 18, 19, 20, 28, 31, 44, 74, 75, 76, 89], "valu": [16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 39, 43, 45, 47, 67, 71, 74, 75, 76, 89], "bool": [16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 37, 39, 45, 47, 50, 56, 60, 61, 62, 63, 64, 65, 66, 74, 75, 76, 77, 80, 88], "gate": [16, 19, 20, 82, 84, 88], "mid": [16, 19, 20], "ff": 16, "effect": [16, 88], "via": [16, 74, 88], "feed": 16, "forward": 16, "time": [16, 17, 19, 74, 75, 76, 80, 82, 88, 89], "dt": [16, 19], "float": [16, 19, 37, 39, 45, 47, 51, 53, 79], "between": [16, 17, 19, 27, 29, 30, 45, 51, 74, 75, 76, 88], "section": [16, 19, 31, 88], "dict": [16, 17, 18, 19, 20, 28, 31, 45, 47, 79, 80, 82], "dictionari": [16, 17, 18, 19, 20, 28, 31, 43, 45, 81, 82], "kei": [16, 18, 28, 31, 32, 33, 34, 41, 43, 48, 79, 80, 82, 88], "predetermin": 16, "bicolor": 16, "found": [16, 67, 88], "initi": [16, 18, 20, 24, 28, 37, 76, 88], "maximum": [16, 88], "determin": [16, 17, 18, 19, 20, 39, 47, 56], "order": [16, 17, 18, 74, 75, 76, 88], "entangl": [16, 88], "appli": [16, 19, 20, 39, 72, 74, 75, 76, 81], "element": [16, 19, 20, 28, 68, 72, 74, 88], "simultan": 16, "run": [16, 28, 31, 88, 89], "overwritten": [16, 17, 18], "high": [16, 88], "enough": [16, 45, 88], "least": 16, "rounds_per_202xlen": 16, "part": [16, 74, 76, 88], "202": 16, "typic": [16, 18, 31, 89], "begin": [16, 76, 88], "end": [16, 20, 45, 75, 76, 88], "requir": [16, 17, 18, 19, 20, 45, 88], "get": [16, 21, 74, 75, 76, 79, 80, 88, 89], "event": [16, 28, 88, 89], "dedic": [16, 88], "conjug": [16, 74, 75, 76, 88], "condit": [16, 76], "check_nod": [16, 17, 18, 19, 20], "node": [16, 17, 18, 19, 20, 28, 31, 80, 88, 89], "ignore_extra_boundari": [16, 17, 18, 19, 20], "minim": [16, 17, 18, 19, 20, 88], "neutral": [16, 17, 18, 19, 20, 31], "addit": [16, 17, 18, 19, 20, 28, 47, 81, 88], "readout": [16, 17, 18, 19, 20], "flip": [16, 17, 18, 19, 20, 88], "cluster": [16, 17, 18, 19, 20, 31, 89], "string2nod": [16, 17, 18, 19, 20, 31], "undeed": [16, 17, 18, 19, 20], "ignor": [16, 17, 18, 19, 20, 88], "should": [16, 17, 18, 19, 20, 38, 45, 54, 74, 88], "reflect": [16, 17, 18, 19, 20], "return": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 84, 88], "independ": [16, 17, 18, 19, 20, 58, 68, 88], "valid": [16, 17, 18, 19, 20], "flipped_logical_nod": [16, 17, 18, 19, 20], "were": [16, 17, 18, 19, 20, 88], "origin": [16, 17, 18, 19, 20, 24, 32, 33, 34, 38, 41, 45, 48, 50, 74, 75, 76], "num_error": [16, 17, 18, 19, 20], "minimum": [16, 17, 18, 19, 20, 51], "static": [16, 22, 35, 36, 37, 42, 45, 46, 47, 53, 54, 75], "flatten_nod": 16, "remov": [16, 75, 76, 88], "consolid": 16, "those": [16, 45, 88], "same": [16, 27, 39, 67, 68, 73, 75, 76, 88], "posit": [16, 45, 53, 57, 59, 71, 74, 75, 76, 88], "decodinggraphnod": [16, 17], "flatten": 16, "flat_nod": 16, "get_error_coord": 16, "count": [16, 24, 28, 47, 81], "decoding_graph": [16, 27, 31], "spitz": [16, 28], "remove_invalid_edg": 16, "return_sampl": [16, 28], "get_error_prob": [16, 28], "graph": [16, 18, 27, 28, 29, 30, 31, 89], "gener": [16, 17, 18, 24, 25, 26, 28, 29, 39, 45, 56, 58, 60, 63, 75, 76, 77, 81, 89], "probabl": [16, 17, 27, 28, 29, 30, 88, 89], "singl": [16, 28, 54, 75, 76, 82, 88, 89], "locat": [16, 67, 75, 88], "calcul": [16, 28, 74, 75, 76, 88], "analyz": [16, 28], "decodinggraph": [16, 17, 18, 79, 80], "object": [16, 21, 22, 23, 26, 28, 29, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 51, 55, 74, 75, 76, 78, 79, 80, 83], "support": [16, 27, 28, 45, 88], "delet": [16, 44, 47, 75, 76], "invalid": [16, 75, 76], "thei": [16, 61, 74, 75, 76, 88, 89], "sampl": [16, 28, 81], "coordin": [16, 32, 33, 34, 38, 41, 45, 48, 74, 88], "start_tim": 16, "end_tim": 16, "specif": [16, 28, 32, 33, 34, 38, 41, 48, 65, 66, 75, 79, 80, 88], "whose": [16, 17, 19, 20, 27, 28, 29, 30, 82, 88], "detect": [16, 88], "account": 16, "It": [16, 17, 18, 31, 45, 58, 68, 88, 89], "assum": [16, 17, 18, 31, 39, 45, 58, 68, 76, 84, 88], "subround": 16, "unit": [16, 88], "is_cluster_neutr": [16, 17, 18, 19, 20], "atypical_nod": [16, 17, 18, 19, 20], "mean": [16, 17, 18, 19, 20, 75, 88, 89], "one": [16, 17, 18, 19, 20, 27, 31, 45, 74, 75, 76, 88, 89], "caus": [16, 17, 18, 19, 20], "atyp": [16, 17, 18, 19, 20, 89], "pass": [16, 17, 18, 19, 20, 47, 89], "measured_log": [16, 17, 18, 19, 20, 31], "express": [16, 17, 18, 19, 20, 88], "pariti": [16, 17, 18, 19, 20, 82, 89], "final": [16, 17, 18, 19, 20, 27, 29, 30, 31, 74, 76, 88, 89], "raw": [16, 17, 18, 19, 20], "kwarg": [16, 17, 18, 19, 20, 21, 22, 24, 25, 47, 50, 75, 76], "convert": [16, 17, 18, 19, 20, 31, 47, 75, 76, 82, 88, 89], "keyword": [16, 17, 18, 19, 20], "argument": [16, 17, 18, 19, 20, 57, 65, 66, 88], "below": [16, 20, 88], "all_log": [16, 17, 19, 20, 28], "irrespect": [16, 17, 19, 20], "non": [16, 19, 20, 28, 31, 48, 76, 88, 89], "trivial": [16, 19, 20, 28, 88], "string2raw_log": [16, 17, 19, 20], "extract": [16, 19, 20, 31, 47, 88], "transpil": 16, "backend": 16, "echo": 16, "echo_num": 16, "ibmq": 16, "ibmqbackend": 16, "xzx": 16, "respect": [16, 17, 88], "repeat": [16, 27, 88], "dynam": [16, 88], "decoupl": 16, "transpiled_circuit": 16, "attribut": [16, 18, 21, 24, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 46, 47, 48, 53, 54, 55, 74, 75, 76, 77, 79, 80], "available_method": [16, 27, 28, 29, 30], "naiv": [16, 28], "method_na": [16, 28], "method_spitz": [16, 28], "round_schedul": [17, 19, 27, 30], "zx": [17, 74, 75, 76, 88], "noise_model": [17, 81, 84, 89], "either": [17, 24, 28, 74, 75, 76, 82, 88], "b": [17, 37, 45, 68, 73, 74, 75, 88], "x_gaug": 17, "indic": [17, 31, 45, 68, 75, 76, 79, 80, 88], "z_gaug": 17, "x_stabil": 17, "z_stabil": 17, "logical_x": [17, 88], "logical_z": [17, 88], "encod": [17, 19, 20, 26, 27, 74, 75, 76, 84, 85, 88, 89], "measurem": 17, "gaug": [17, 24, 27], "xz": [17, 74, 75, 76, 88], "nois": [17, 27, 29, 30, 81, 82, 84, 88, 89], "noisi": 17, "pnenomolog": 17, "entri": [17, 43, 45, 65, 66, 75, 76, 89], "probab": 17, "depolar": [17, 88], "quantumcircuit": [17, 19, 74, 75, 76, 81, 82, 84, 88], "memori": [17, 76, 88], "experi": [17, 88], "heavyhex": 17, "hhc": 17, "css_code": 17, "01": [17, 45, 51, 88], "version": [17, 18, 45, 75, 88], "here": [17, 18, 88], "odd": [17, 18, 88, 89], "assess": [17, 18], "complex": [17, 18, 74, 75, 76, 88], "care": [17, 18], "suppli": [17, 18, 39, 60], "stim_detector": 17, "detector": [17, 82], "stim": [17, 82], "clbit": [17, 82], "classic": [17, 75, 82, 88], "bit": [17, 30, 75, 82, 88], "regist": 17, "comparison": [17, 45, 82], "particip": 17, "stabil": [17, 24, 27, 55, 63, 80], "earlier": [17, 75, 89], "trigger": 17, "outcom": [17, 19, 27, 29, 30, 31, 81, 89], "abc": [18, 27, 49], "abstract": [18, 88], "well": [18, 19, 20, 71, 88], "fault": [18, 89], "toler": [18, 45], "inher": 18, "depend": 18, "famili": [18, 88], "must": [18, 26, 32, 33, 34, 38, 41, 45, 47, 48, 57, 58, 59, 62, 67, 68, 73, 75, 88], "label": [18, 48, 74, 75, 76, 88, 89], "xbasi": [19, 88], "henc": [19, 20, 74, 75], "ancilla": [19, 20, 80], "assist": [19, 20], "No": [19, 20, 88], "otherwis": [19, 20, 45, 60, 62, 64, 65, 66, 74, 75, 76, 88], "get_circuit_list": [19, 20], "circuit_list": [19, 20], "partition_outcom": 19, "infer": [19, 20], "ugli": [19, 20], "whenev": [19, 20, 88], "re": [19, 20], "syndrome_measur": [19, 20], "applic": [19, 20, 88, 89], "disregard": [19, 20], "boolean": [19, 20, 65, 66, 74, 75, 76, 88], "denot": [19, 20, 88], "log": [19, 20, 28], "state": [20, 88, 89], "config": [21, 88], "configur": [21, 22, 88], "_summary_": [21, 22, 24, 74, 75, 76, 77], "_description_": [21, 22, 24, 25, 37, 44, 45, 47, 74, 75, 76, 77], "_de_": 21, "union": [21, 22, 25, 26, 28, 31, 39, 44, 45, 46, 47, 53, 61, 65, 66, 73, 77, 81, 82, 84], "n_dir_format": 21, "n_": [21, 88], "n_k_codes_file_format": 21, "codes_n_": 21, "_k_": 21, "json": 21, "name": [22, 44, 55, 75, 77, 82, 84, 88], "path": [22, 27, 29, 30, 31, 45, 88], "config_filenam": 22, "codebas": [22, 88], "config_fil": 22, "file": [22, 88], "nme": 22, "data2cod": 22, "record": 22, "in_rang": 22, "_type_": [22, 45, 47, 76], "search": [22, 67, 88], "core": [23, 89], "central": [23, 88], "deriv": [23, 88], "recoveri": 23, "stuff": [23, 89], "init": [23, 35, 36, 40, 42, 43, 44, 45, 46, 47, 52, 53, 54, 74, 75, 76, 78], "function": [23, 31, 74, 75, 76, 85, 88], "data": [24, 27, 28, 29, 30, 31, 32, 33, 34, 38, 41, 44, 45, 47, 48, 51, 75, 76, 88], "defing": 24, "x1x2": 24, "z3z4": [24, 88], "x3z9": 24, "checkerboardtil": [24, 88], "subsytem": 24, "exist": [24, 67, 88], "list_onli": 25, "alwai": [25, 47], "desc": 25, "match": [25, 27, 30, 74, 75, 76], "queri": 25, "0x13e304f40": 25, "0x13e30a490": 25, "0x13e30a880": 25, "0x13e30aa60": 25, "z0x1z2": [25, 88], "z1x2z3": 25, "code_info": [25, 26], "z2x3": 25, "24": [25, 88], "e6e4edd6": 25, "2ec6": 25, "467f": 25, "9187": 25, "0cc64bc51f1a": 25, "allsmallgroup": 25, "physic": [26, 88], "uniqu": [26, 35, 36, 43, 46, 47, 53, 54, 75, 76, 80], "request": 26, "suitabl": [26, 28, 71], "subclass": 26, "rais": [26, 32, 33, 34, 37, 38, 39, 41, 45, 48, 57, 58, 59, 60, 62, 63, 67, 68, 71, 72, 73, 74, 75, 76], "qiskiterror": [26, 32, 33, 34, 37, 38, 39, 41, 45, 48, 57, 58, 59, 60, 62, 63, 67, 68, 71, 72, 73, 74, 75, 76, 88], "assign": [26, 27, 29, 30, 51, 88], "x0x2": 26, "z1z4": 26, "z0z2": 26, "x3": [26, 88], "x1x4": [26, 88], "z3": [26, 88], "576": 26, "47e52342": 26, "8ffc": 26, "48e5": 26, "be51": 26, "c60aab28e9b8": 26, "smallgroup": 26, "css_x_gauge_op": [27, 30], "css_x_stabilizer_op": [27, 30], "css_x_boundari": [27, 30], "css_z_gauge_op": [27, 30], "css_z_stabilizer_op": [27, 30], "css_z_boundari": [27, 30], "block": [27, 30], "uniform": [27, 29, 30], "annot": 27, "prepar": [27, 89], "do": [27, 28, 61, 63, 72, 88], "size": [27, 32, 33, 34, 37, 38, 39, 41, 45, 47, 48, 59, 74, 75, 76, 88], "along": [27, 37, 88], "entir": [27, 39, 75, 76, 88], "initializaton": 27, "everywher": 27, "rustworkx": [27, 29, 30], "comput": [27, 31, 45, 58, 69, 70, 71, 89], "matcher": [27, 29, 30], "annotated_graph": 27, "process": [27, 29, 30, 31, 72, 89], "Be": [27, 29, 30], "sure": [27, 29, 30, 88], "call": [27, 29, 30, 88], "update_edge_weight": [27, 29, 30], "transvers": [27, 29, 30, 31], "evalu": [27, 29, 30], "numer": [27, 29, 30], "weight_poli": [27, 29, 30], "polynomi": [27, 29, 30, 88], "onc": [27, 29, 30, 88], "recomput": [27, 29, 30], "shortest": [27, 29, 30], "paulinoisemodel": [27, 29, 30, 81, 84, 89], "been": [27, 29, 30, 35, 36, 46, 47, 53, 54, 88], "previous": [27, 29, 30, 35, 36, 46, 47, 53, 54, 88], "variabl": [27, 29, 30, 32, 33, 34, 38, 41, 48, 88], "symbol": [27, 29, 30], "mois": [27, 29, 30], "pymatch": [27, 29, 30], "method_pymatch": [27, 29, 30], "method_retworkx": [27, 29, 30], "brute": 28, "empti": [28, 43, 75, 76, 88], "analys": 28, "helper": 28, "estim": 28, "et": [28, 31, 88], "al": [28, 31], "http": [28, 82, 88], "doi": [28, 88], "org": [28, 88], "10": [28, 34, 38, 41, 58, 87, 88, 89], "1002": 28, "qute": 28, "201800012": 28, "make_error_graph": 28, "ouput": 28, "subgraph": [28, 31], "weight_syndrome_graph": 28, "replac": [28, 74, 75, 88], "p": [28, 32, 33, 34, 41, 45, 48, 73, 74, 75, 76, 88, 89], "code_circuit": 29, "circuitmodelmatchingdecod": [29, 30], "repetitioncodecircuit": [29, 88, 89], "constructor": [29, 30], "use_peel": 31, "clusteringdecod": 31, "around": [31, 42, 89], "erasur": [31, 89], "easili": [31, 88], "peel": [31, 89], "interfer": 31, "abritrari": 31, "arc": 31, "accord": [31, 84, 88], "huang": 31, "arxiv": [31, 88], "2004": 31, "04693": 31, "iii": 31, "1709": 31, "06218v3": 31, "detail": [31, 47, 74], "find": [31, 58, 67], "algorithm": [31, 45, 89], "u": [31, 88], "paper": [31, 88], "root": [31, 47, 88], "compress": 31, "get_correct": 31, "turn": [31, 67, 74, 75, 76, 88], "corrected_log": 31, "neighbouring_edg": 31, "node_index": 31, "neighbour": 31, "payload": 31, "decodinggraphedg": 31, "connect": [31, 54], "compon": [31, 47, 54], "infinit": [31, 45, 88], "tree": 31, "span": [31, 62, 68, 88], "forest": 31, "go": [31, 88, 89], "backward": 31, "through": [31, 67, 88, 89], "1703": 31, "01517": 31, "pygraph": 31, "occur": [31, 88], "corrected_z_log": 31, "z_logic": 31, "optyp": [32, 33, 34, 38, 41, 48], "pxzxz": [32, 38, 41, 48], "checker": [32, 38], "board": [32, 38], "diagram": [32, 33, 34], "q0": [32, 33, 34, 38, 41, 48, 88], "q1": [32, 33, 34, 38, 41, 48, 88], "q2": [32, 33, 34, 38, 41, 48, 88], "v0": [32, 33, 34, 38, 41, 48, 88], "o": [32, 33, 34, 38, 41, 45, 48, 88, 89], "q3": [32, 33, 34, 38, 41, 48, 88], "q4": [32, 33, 34, 38, 41, 48, 88], "q5": [32, 33, 34, 38, 41, 48, 88], "q6": [32, 33, 34, 38, 41, 48, 88], "q7": [32, 33, 34, 38, 41, 48, 88], "q8": [32, 33, 38, 41, 88], "yellowgreen": [32, 33, 34, 38, 41, 47, 48, 88], "tomato": [32, 33, 34, 38, 41, 47, 48, 88], "preformat": [32, 33, 34, 38, 41, 48], "op_dict": [32, 33, 34, 41, 48], "pppp": [32, 33, 34, 41, 48], "pattern": [32, 33, 34, 41, 48], "copi": [32, 33, 34, 37, 41, 48, 53, 74, 75, 76], "opertor": [32, 33, 34, 38, 41, 48], "cxzzx": [32, 41], "xzzx": 32, "avail": [32, 33, 34, 35, 36, 41, 46, 47, 48, 53, 54, 88], "precomput": [32, 33, 34, 41, 48], "layout": [32, 33, 34, 41, 48], "pzxzx": [32, 48], "cxxxx": [32, 48], "czzzz": [32, 48], "czxxz": [32, 41], "built": [32, 33, 34, 38, 41, 48], "abov": [32, 33, 34, 38, 41, 48, 88], "counter": [32, 33, 34, 38, 41, 48], "mapp": [32, 33, 34, 38, 41, 48], "scall": [32, 38, 41, 48], "access": [32, 38, 41, 48, 88], "unsupport": [32, 33, 34, 38, 41, 48], "classmethod": [32, 33, 34, 37, 38, 39, 41, 45, 48, 49, 51, 74, 75, 76], "faces_wf_compon": [32, 33, 34, 38, 41, 48, 50, 88], "num_fac": [32, 33, 34, 38, 41, 48, 88], "num_qubit": [32, 33, 34, 38, 41, 48, 50, 74, 75, 76, 88], "wf_coordin": [32, 33, 34, 38, 41, 48, 50, 88], "wf_loop_ind": [32, 33, 34, 38, 41, 48, 50, 88], "wf_operator_dict": [32, 33, 34, 38, 41, 48, 88], "zxxz": 32, "wf_q_indic": [32, 33, 34, 38, 41, 48, 50, 88], "pxxzzxx": [33, 34], "diagon": [33, 34], "bar": [33, 88], "hour": [33, 34, 88], "glass": [33, 34], "diagonalhourglasstil": [33, 88], "xx": [33, 38, 76, 89], "pzzxxzz": [33, 34], "zz": [33, 76], "v9": 34, "q9": [34, 38, 41, 88], "q10": [34, 38, 41, 88], "xxx": [34, 48], "11": [34, 38, 41, 88, 89], "zzz": [34, 48], "next_edg": 35, "previous_edg": 35, "shapeobject": [35, 36, 47, 53, 54], "endpoint": 35, "next": [35, 45, 88, 89], "add_par": [35, 36, 46, 47, 53, 54], "parent": [35, 36, 46, 47, 53, 54], "create_id": [35, 36, 46, 47, 53, 54], "track": [35, 36, 46, 47, 51, 53, 54, 75], "last_id": [35, 36, 46, 47, 53, 54], "center": [37, 39, 60, 72], "dim": [37, 40, 74, 75, 76], "bound": [37, 45, 75, 76, 88], "box": [37, 45, 88], "aabb": [37, 39, 88], "nd": 37, "ndarri": 37, "dimens": [37, 40, 57, 72, 73, 74, 75, 76, 88], "descript": [37, 75, 88], "bounding_box_from_lin": [37, 45], "point1": [37, 51], "point2": [37, 51], "points1": 37, "points2": 37, "bounds1": 37, "bounds2": 37, "smallest": [37, 88], "test": [37, 61, 88], "els": [37, 88], "expand": [37, 39, 74, 75, 76], "amount": [37, 39, 88], "increas": [37, 45, 88], "axi": [37, 88], "vector": [37, 39, 42, 45, 47, 58, 60, 62, 64, 66, 67, 68, 73, 74, 75, 76, 88], "intercept": 37, "line": [37, 45], "input": [37, 45, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 88], "ax": [37, 88], "set_min_max": 37, "min_point": 37, "max_point": 37, "max": [37, 75], "min": [37, 88], "cz": 38, "axx": 38, "q11": [38, 41, 88], "q12": [38, 41, 88], "steelblu": [38, 47, 48, 88], "red": [38, 88], "12": [38, 41, 88], "8660254037844386": 38, "46410162": 38, "59807621": 38, "7320508075688772": 38, "cx": [38, 41, 88, 89], "xxxxxx": [38, 41, 88], "cyzx2": [38, 88], "hxx": [38, 88], "xzyxzi": 38, "zzzzzz": [38, 41], "dzx": 38, "zeroth": 39, "width": [39, 73], "height": 39, "someth": [39, 75, 76], "went": [39, 75, 76], "wrong": [39, 75, 76], "apply_transform_from": 39, "transform": [39, 71], "find_pre_transform_length": 39, "shear": 39, "generate_point": 39, "make_transform": 39, "restrict": [39, 88], "in_plac": 39, "new": [39, 43, 53, 74, 75, 76, 88], "fit": [39, 88], "geometrybound": 39, "modifi": [39, 74, 75, 88], "bounding_box": 39, "restrict_for_til": 39, "expand_valu": 39, "alpha": [39, 88], "complet": [39, 82, 88], "fill": 39, "ensur": 39, "provi": 39, "approxim": [39, 88], "perform": [39, 88], "tile_s": 39, "optim": 39, "factori": [39, 79], "octa": 41, "q13": 41, "q14": 41, "q15": 41, "doubl": [41, 48], "c8": 41, "9238795325112867": 41, "16": [41, 55, 88], "s8": 41, "3826834323650897": 41, "15432203": 41, "61312593": 41, "6892463972414662": 41, "230442497387663": 41, "zzzzzzzz": 41, "xxxxxxxx": 41, "15": 41, "twomanifold": [42, 45], "r2": [42, 45], "ison": 42, "rot_matrix": 42, "theta": [42, 88], "matrix": [42, 47, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 88], "maintain": [43, 88], "pointer": 43, "decrement_qubit": 43, "decrement": 43, "increment": 43, "qubits_count": 43, "add_data_arrai": 44, "data_arrai": 44, "ndarrai": [44, 45, 50, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "del_data_arrai": 44, "select": [45, 74, 75, 76, 88], "sublattic": 45, "epsilon": [45, 51, 88], "wind": 45, "contains_quad_winding_numb": 45, "deterin": 45, "polygon": 45, "pip": [45, 88], "problem": [45, 88], "On": [45, 88], "l2": 45, "interior": 45, "hornmann": 45, "agatho": 45, "20": [45, 88], "2001": 45, "131": 45, "144": 45, "With": [45, 47, 88], "slower": 45, "later": [45, 88], "date": [45, 75], "slow": 45, "larger": [45, 88], "close": [45, 88], "contains_ray_trac": 45, "horizont": 45, "infin": 45, "straight": 45, "sophist": 45, "verison": 45, "real": [45, 88, 89], "equal": [45, 74, 75, 76, 88], "001": 45, "create_lin": 45, "expens": [45, 89], "better": [45, 52, 88], "slightli": [45, 88], "is_between": 45, "strict": [45, 88], "Will": [45, 47], "squeez": [45, 74, 75, 76], "inequ": 45, "rect": 45, "direct": [45, 88, 89], "scale1": 45, "scale2": 45, "delta": [45, 88], "dtype": [45, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 88], "rectangl": 45, "labl": 45, "r3": 45, "r1": 45, "r0": 45, "corner": 45, "up": [45, 47, 75, 76], "live": 45, "definit": [45, 82, 88], "yet": [45, 88], "2d": [45, 74, 76], "head": [45, 71], "toward": 45, "proceed": 45, "obj": 45, "children": 46, "intern": [47, 74, 88], "sever": [47, 88], "subcompon": 47, "ex": [47, 51, 76], "delete_subtre": 47, "show_axi": [47, 88], "show_qubit": [47, 88], "figsiz": [47, 88], "point_siz": 47, "50": [47, 88], "ycolor": 47, "moment": [47, 88], "is_insid": 47, "inside_level": [47, 88], "boundary_level": [47, 88], "exclud": [47, 88], "debug": 47, "subshel": 47, "in_vertic": 47, "def": [47, 88], "vertex_path": [47, 88], "deflault": 47, "That": [47, 74, 75, 88], "exlud": 47, "noth": [47, 88], "extra": [47, 88], "print": [47, 55, 74, 75, 76, 87, 88, 89], "integer_snap": 47, "snap": 47, "rotate2d": 47, "angl": 47, "90": 47, "about_point": 47, "inplac": [47, 74, 75, 76], "shell2symplect": 47, "from_index": 47, "from_qubit": 47, "symplect": [47, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76], "shift": 47, "traslat": 47, "other_shel": 47, "disjoint": 47, "diamond": [48, 88], "orient": 48, "wf_orient": 48, "tile_typ": 51, "rssc": 51, "po": [53, 57, 88], "set_posit": 53, "global": [53, 74, 75, 76], "shallowcopi": 53, "shallow": [53, 74, 75, 76], "linit": 54, "compris": 54, "prop_dict": 55, "citat": 55, "necessari": [55, 88], "hyperbolic_gen": 55, "hyperbolic_gener": [55, 77], "isotropic_gen": 55, "is_css_kei": 55, "is_decomposable_kei": 55, "is_degenerate_kei": 55, "is_gf4linear_kei": 55, "is_triorthogonal_kei": 55, "row": [56, 62, 63, 70, 71, 74, 76, 88], "gf": [56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "zero": [56, 58, 68, 88], "abelian": [56, 63, 88], "subgroup": [56, 63, 88], "mutual": [56, 76], "commut": [56, 58, 68, 74, 75, 76, 88], "bool_": [56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 88], "augment": 57, "identifi": [57, 75], "ident": [57, 59, 76, 84, 88], "m": [57, 88], "top": 57, "bottom": 57, "agument": 57, "One": [57, 88], "unknown": [57, 74, 75, 76, 88], "_augment_mat": 57, "hyperbol": [58, 61, 67, 68, 72], "partner": [58, 67, 88], "let": [58, 60, 67, 68, 73, 88], "m_0": [58, 60, 67], "m_": [58, 60, 67], "v": [58, 67, 74, 88], "m_index": 58, "pairwis": 58, "e": [58, 75, 76, 88, 89], "commmut": 58, "m_i": [58, 67, 88], "anticommut": [58, 75, 76, 88], "simplecticmatrix": 58, "full": [58, 60, 74, 75, 76, 88], "rank": [58, 71, 76, 88], "wrt": 58, "av": [58, 67, 88], "astyp": [58, 59, 67, 68, 70, 71, 72, 73, 74, 76, 88], "_build_hyper_partn": [58, 67, 88], "locate_hyper_partn": [58, 88], "_locate_hyper_partn": [58, 67], "note": [58, 74, 75, 76, 88, 89], "proposit": [58, 88], "nielsen": [58, 88], "chuang": [58, 88], "lambda": [59, 88], "i_n": 59, "_create_lambda_matrix": 59, "cntr": 60, "op": 60, "c_0": 60, "c_1": [60, 88], "c_": [60, 88], "center_matrix": 60, "m_1": 60, "Not": [60, 71, 88], "matric": [60, 61, 62, 68, 72, 73, 74, 76, 88], "symnplect": 61, "matrix1": 62, "matrix2": 62, "inpiut": 62, "is_symplectic_vector_form": [64, 65], "is_symplectic_matrix_form": [64, 66], "dimension": [65, 66, 67, 71, 73], "column": [65, 66, 67, 68, 71, 76], "is_symplectic_form": [65, 66], "int8": 66, "noncommut": 67, "parter": 67, "build_hyper_partn": [67, 88], "arang": [68, 88], "xrang": 68, "zrang": 68, "a_0": 68, "a_": 68, "a_i": [68, 88], "x_0": 68, "x_": [68, 88], "l": [68, 88], "z_0": 68, "z_": [68, 88], "x_i": [68, 88], "z_i": [68, 88], "hyerbol": 68, "b_0": 68, "b_": 68, "b_i": 68, "x_j": [68, 88], "z_j": [68, 88], "j": [68, 88], "op_": 68, "bf": 68, "iter": [68, 76, 88, 89], "x1x2x3": 68, "x2x3": 68, "x2": [68, 88], "z2": 68, "_make_commute_hyp": 68, "_rank": 69, "reduc": [70, 71, 88], "echelon": [70, 71], "_rref": [70, 71], "rref_complet": 70, "_rref_complet": [70, 71], "pivot": 71, "kth": 71, "rref_mat": 71, "transform_mat": 71, "tranform": 71, "rref": 71, "rank_": 71, "symplet": [72, 88], "gram": 72, "schmidt": 72, "gramschmidt": 72, "upon": 72, "split": 72, "accross": 72, "center_": [72, 88], "_symplectic_gram_schmidt": 72, "mat1": 73, "mat2": 73, "math": 73, "2m": [73, 88], "cdot": [73, 88], "lambda_n": 73, "_symplectic_product_vv": 73, "_symplectic_product_dens": 73, "phase_exp": [74, 75, 76], "baseoper": [74, 75, 76], "adjointmixin": 74, "multiplymixin": 74, "represent": [74, 75, 85], "phase": [74, 75, 76, 88], "izx": [74, 88], "modul": [74, 85, 88], "expon": [74, 75, 76], "z_4": [74, 76], "imput": 74, "coeffici": [74, 75, 76, 88], "compat": [74, 81, 82], "adjoint": [74, 75, 76], "all_commut": [74, 75, 76], "qarg": [74, 75, 76], "paulisbas": 74, "dot": [74, 75, 76, 88], "anti": [74, 75, 76], "compos": [74, 75, 76, 88], "front": [74, 75, 76], "composit": [74, 75, 76], "To": [74, 75, 76, 88], "multipl": [74, 75, 88], "likewis": [74, 88], "a_1": 74, "a_2": 74, "a_k": 74, "b_1": 74, "b_2": 74, "b_k": 74, "wise": [74, 76], "paulit": 74, "compositon": 74, "cl": [74, 75], "clase": [74, 75], "deep": [74, 75, 76], "multipli": [74, 75], "obtain": [74, 75], "binari": [74, 75, 88], "evolv": [74, 75, 76], "frame": [74, 75, 76, 88], "heisenberg": [74, 75, 76], "pictur": [74, 75], "evolut": [74, 75, 76], "prime": [74, 75, 76], "dagger": [74, 75, 76, 88], "By": [74, 75, 76, 88], "schr\u00f6dinger": [74, 75, 76], "yield": [74, 75, 76, 88], "faster": [74, 75, 76], "don": [74, 75, 76], "revers": [74, 75], "tensor": [74, 75, 76, 88], "otim": [74, 75, 88], "input_dim": [74, 75, 76], "output_dim": [74, 75, 76], "power": [74, 75, 76, 88], "itself": [74, 75, 76, 88], "reshap": [74, 75, 76], "preserv": [74, 75, 76, 88], "constant": [74, 75, 76, 88], "set_pauli_encod": [74, 75, 76], "iyzx": [74, 75, 76], "default_external_pauli_rep_format": [74, 75, 76], "set_phase_encod": [74, 75, 76], "default_external_phase_encod": [74, 75, 76], "set_print_phase_encod": [74, 75, 76], "phase_encod": [74, 75, 76], "qubit_ord": [74, 75, 76], "extern": [74, 75, 76, 88], "syntax_cod": [74, 75, 76], "syntax_str": [74, 75, 76], "latex": [74, 75, 76], "set_tensor_encod": [74, 75, 76], "yzx": [74, 75, 76, 88], "default_external_tensor_encod": [74, 75, 76], "to_label": [74, 75, 76], "output_pauli_encod": [74, 75, 76], "no_phas": [74, 75, 76], "return_phas": [74, 75, 76], "index_start": [74, 75, 76], "index_str": [74, 75, 76], "representatiojn": [74, 75, 76], "notat": [74, 75, 76, 88], "external_pauli_encod": [74, 75, 76], "appear": [74, 75, 76, 88], "matter": [74, 75, 76], "what": [74, 75, 76, 80, 88, 89], "xzy": [74, 75, 76, 88], "adjust": [74, 75, 76], "full_group": [74, 75, 76], "product_syntax": [74, 75, 76, 88], "aree": [74, 75, 76], "lowest": [74, 75, 76], "reult": [74, 75, 76], "scalar": [74, 75, 76], "insert": [74, 75, 76, 84, 89], "unsign": [74, 75, 76], "q": [74, 75, 76, 88], "transpos": [74, 75, 76, 88], "external_phase_encod": [74, 75, 76], "external_qubit_ord": [74, 75, 76], "external_syntax": [74, 75, 76], "external_tensor_encod": [74, 75, 76], "print_phase_encod": [74, 75, 76], "input_shap": [74, 75, 76], "output_shap": [74, 75, 76], "num_i": [74, 75, 76], "pauli_encod": [74, 75, 76], "tensor_encod": [74, 75, 76], "1d": [74, 76], "_x": [74, 76], "marked": [74, 76], "_z": [74, 76], "input_pauli_encod": [75, 76], "input_qubit_ord": [75, 76, 88], "tuple_ord": [75, 76], "progress": 75, "phase_expon": 75, "stype": 75, "tuple_prd": 75, "append_pauli": 75, "pauli_label": 75, "deprec": 75, "append": [75, 88], "month": [75, 88], "cannot": [75, 76, 88], "incompat": 75, "while": [75, 88, 89], "ind": [75, 76, 88], "delete_qubit": 75, "equiv": 75, "from_label": 75, "insert_pauli": 75, "target": 75, "similar": [75, 88], "g": [75, 88, 89], "zyxi": 75, "zy": [75, 76], "xi": [75, 76, 88, 89], "instrs2symplect": 75, "instr": 75, "invers": [75, 76], "kron": 75, "kroneck": 75, "p_2": 75, "p_1": 75, "terra": [75, 88], "17": [75, 88], "p2": 75, "pauli_singl": 75, "random": [75, 76, 87, 88, 89], "seed": 75, "random_pauli": 75, "quantum_info": [75, 76, 88], "set_trunc": 75, "val": [75, 88], "charact": [75, 88], "truncat": 75, "disabl": [75, 88], "sgn_prod": 75, "p1": 75, "now": [75, 89], "handl": [75, 84], "p_3": 75, "without": [75, 88], "sign": [75, 88], "1j": 75, "to_cpx_matrix": 75, "spars": [75, 76, 88], "to_instruct": [75, 84], "instruct": 75, "to_matrix": [75, 76], "to_spmatrix": 75, "csr": [75, 76], "scipi": 75, "csr_matrix": 75, "update_x": 75, "partial": 75, "setter": 75, "update_z": 75, "whole": 75, "num_clbit": 75, "pltb_int": 75, "pltb_str": 75, "linearmixin": 76, "groupmixin": 76, "iixxz": 76, "pdata": 76, "anticommutes_with_al": 76, "multi": 76, "satisfi": [76, 88], "argsort": 76, "sort": 76, "tabl": 76, "lexicograph": 76, "addition": 76, "term": [76, 88], "commutes_with_al": 76, "underli": 76, "from_symplect": 76, "old": 76, "getaslist": 76, "slc": 76, "group_qubit_wise_commut": 76, "partit": [76, 88], "label_it": 76, "lazi": 76, "labeliter": 76, "matrix_it": 76, "matrixiter": 76, "shuffl": 76, "ii": [76, 88], "ix": [76, 88, 89], "iz": [76, 88], "yi": 76, "yx": 76, "yy": 76, "yz": [76, 88], "zi": [76, 88], "pt": 76, "srt": 76, "effici": [76, 88, 89], "alloc": 76, "advanc": 76, "bmatrix": [76, 88], "dens": [76, 88], "return_index": 76, "return_count": 76, "item": 76, "unique_indic": 76, "occurr": 76, "unique_count": 76, "come": [76, 88], "_phase_exp": 76, "versu": 76, "num_pauli": 76, "with_gener": 77, "num_gen": 77, "compar": [79, 80], "_": [79, 80, 88], "dummi": [79, 80, 88], "docstr": [79, 80], "is_boundari": 80, "corrspond": 80, "doesn": 80, "shot": 81, "4000": 81, "get_stim_circuit": 81, "thereof": [81, 84], "standard": [81, 88], "com": [82, 88], "quantumlib": 82, "blob": [82, 88], "main": [82, 88], "doc": [82, 88], "md": 82, "control": [82, 88], "sdg": 82, "swap": [82, 88], "channel": [82, 88], "mandatori": 82, "eigenvalu": [82, 88], "total": [82, 88], "again": [82, 88], "stim_circuit": 82, "stim_measurement_data": 82, "hashabl": 83, "idl": [84, 88], "idle_": 84, "qc": 84, "idle_1": 84, "noisy_circuit": 84, "convers": 85, "interact": [86, 88], "h_": 87, "text": [87, 88], "drift": 87, "frac": [87, 88], "omega": 87, "randint": 87, "tomorrow": 88, "great": 88, "tut19": 88, "ibm": 88, "servic": 88, "micheal": 88, "heali": 88, "usa": 88, "thoma": 88, "alexand": 88, "canada": 88, "edward": 88, "chen": 88, "introduc": 88, "attende": 88, "alongsid": 88, "openqasm3": 88, "languag": 88, "achiev": 88, "advantag": 88, "overview": 88, "hardwar": 88, "flow": 88, "taught": 88, "commun": 88, "qec_framework_ieee_2022": 88, "ipynb": 88, "rapidli": 88, "envolv": 88, "field": 88, "experiment": 88, "theoret": 88, "imporant": 88, "public": 88, "most": 88, "shame": 88, "extens": 88, "generaliz": 88, "document": 88, "significi": 88, "wast": 88, "qiksit": 88, "apach": 88, "licens": 88, "isol": 88, "user": 88, "flexibl": 88, "modular": 88, "architectur": 88, "priorit": 88, "eas": 88, "speed": 88, "conveni": 88, "three": 88, "componet": 88, "cli": 88, "command": 88, "graphic": 88, "edit": 88, "abil": 88, "load": 88, "save": 88, "explor": 88, "best": 88, "visual": 88, "appeal": 88, "stabl": 88, "modern": 88, "help": 88, "theori": 88, "research": 88, "machin": 88, "pi": 88, "gui": 88, "script": 88, "repo": 88, "jame": 88, "wooton": 88, "andrew": 88, "cross": 88, "minut": 88, "higher": 88, "virtual": 88, "qrao": 88, "remaind": 88, "activ": 88, "qiskit_qec_env": 88, "wish": 88, "python3": 88, "bin": 88, "folder": 88, "directori": 88, "git": 88, "gitignor": 88, "prefer": 88, "automat": 88, "enter": 88, "direnv": 88, "clone": 88, "cd": 88, "txt": 88, "dev": 88, "pylatexenc": 88, "altern": 88, "properli": 88, "exact": 88, "shown": 88, "tox": 88, "pylint": 88, "jupyt": 88, "notebook": [88, 89], "project": 88, "cach": 88, "upgrad": 88, "troubl": 88, "lab": 88, "past": 88, "cell": 88, "Then": 88, "good": 88, "concern": 88, "funcdment": 88, "storag": 88, "mathbb": 88, "f": 88, "_2": 88, "messag": 88, "therefor": 88, "n_2": 88, "idea": [88, 89], "dan": 88, "dun": 88, "steve": 88, "flammia": 88, "summer": 88, "school": 88, "2022": 88, "simplist": 88, "sai": 88, "000": 88, "111": 88, "010011": 88, "0000000": 88, "1111111": 88, "1000000": 88, "1100000": 88, "1110000": 88, "1111000": 88, "1111100": 88, "1111110": 88, "less": 88, "half": [88, 89], "major": [88, 89], "vote": 88, "0000000000": 88, "0000100110": 88, "abl": 88, "thing": 88, "destroi": 88, "repeatedli": 88, "unknow": 88, "simplest": 88, "fundament": 88, "world": 88, "hilbert": 88, "think": 88, "inner": 88, "langl": 88, "rangl": 88, "induc": 88, "norm": 88, "metric": 88, "convent": 88, "bra": 88, "ket": 88, "mostli": 88, "adjunct": 88, "varaiabl": 88, "phi": 88, "act": 88, "psi": 88, "rai": 88, "known": 88, "pure": 88, "mechan": 88, "axiom": 88, "denisti": 88, "mix": 88, "howev": 88, "densiti": 88, "limit": 88, "aspect": 88, "rho_": 88, "unitari": 88, "action": 88, "mapsto": 88, "align": 88, "mathcal": 88, "offer": 88, "signific": 88, "cost": 88, "discret": 88, "observ": 88, "superposit": 88, "fatal": 88, "situat": 88, "decomposit": 88, "oplu": 88, "qauntum": 88, "simeq": 88, "just": 88, "subspac": 88, "trace": 88, "cptp": 88, "map": 88, "rightarrow": 88, "arbitari": 88, "recover": 88, "esist": 88, "rho_a": 88, "rho_b": 88, "rho": 88, "_b": 88, "circ": [88, 89], "studi": 88, "interest": 88, "know": 88, "understand": 88, "introducd": 88, "plai": 88, "role": 88, "sigma_0": 88, "sigma_i": 88, "quad": 88, "sigma_1": 88, "sigma_x": 88, "sigma_2": 88, "sigma_z": 88, "sigma_3": 88, "nice": 88, "hermitian": 88, "involutori": 88, "textrm": 88, "2x2": 88, "sigma_a": 88, "_1": 88, "sometim": 88, "deifn": 88, "natur": 88, "univers": 88, "_n": 88, "x_1": 88, "x_2": 88, "x_n": 88, "z_1": 88, "z_2": 88, "z_n": 88, "effectic": 88, "defint": 88, "t_i": 88, "th": 88, "remain": 88, "e_0": 88, "e_1": 88, "orthonorm": 88, "qquad": 88, "2n": 88, "written": 88, "rho_q": 88, "tau": 88, "delta_1": 88, "delta_2": 88, "delta_n": 88, "yxiz": 88, "y_0x_1z_3": 88, "ixz": 88, "x_0y_3": 88, "xyxyxxxiiix": 88, "mutilpl": 88, "interpret": 88, "primarili": 88, "respons": [88, 89], "qikit": 88, "rewritten": 88, "becom": 88, "merg": [88, 89], "plu": 88, "mention": 88, "decid": 88, "ineffici": 88, "especi": 88, "basesparsepauli": 88, "sparsepauli": 88, "sparsepaulilist": 88, "loss": 88, "delta_j": 88, "rho_j": 88, "f_2": 88, "rho_1": 88, "rho_n": 88, "ixzi": 88, "mathemat": 88, "phantom": 88, "f_4": 88, "extend": 88, "cetera": 88, "give": 88, "vert": 88, "latex_syntax": 88, "x0y1x2y3x4x5x6x10": 88, "ixyxz": 88, "prone": 88, "iiiiiixiiiiiiiiiiiiiiiiiiiiiiiz": 88, "ix_6z_": 88, "30": 88, "compact": 88, "far": 88, "much": 88, "paulirep": 88, "x1x4y6": 88, "yixiixi": 88, "taken": 88, "largest": 88, "x1i9": 88, "iiiiiiiixi": 88, "x1x2x3x4": 88, "y9y6x3x1": 88, "iiiiixxxxi": 88, "yiiyiixixi": 88, "hold": 88, "p_1n_1p_2n_2": 88, "p_kn_k": 88, "p_i": 88, "n_1": 88, "n_k": 88, "equio": 88, "bilinear": 88, "w": 88, "foral": 88, "degener": 88, "skew": 88, "symmetr": 88, "pq": 88, "qp": 88, "finit": 88, "said": 88, "proper": 88, "subset": 88, "burnsid": 88, "theorem": 88, "1016": 88, "jalgebra": 88, "2013": 88, "005": 88, "g_1": 88, "g_2": 88, "g_k": 88, "leq": 88, "_k": 88, "_j": 88, "g_l": 88, "p_n": 88, "g_i": 88, "g_j": 88, "19": 88, "x0": 88, "x1": 88, "z0": 88, "procedur": 88, "g_m": 88, "unprocess": 88, "setup": 88, "leftarrow": 88, "backslash": 88, "everi": [88, 89], "cup": 88, "vg": 88, "2r": 88, "21": 88, "22": 88, "x_k": 88, "y_1": 88, "y_k": 88, "y_i": 88, "make_commute_hyp": 88, "symplectic_gram_schmidt": 88, "x0y1x2": 88, "x0x1x3": 88, "y0x1x2z3": 88, "x0z1z2y3": 88, "shall": 88, "commonli": 88, "stabilz": 88, "princip": 88, "s_1": 88, "s_2": 88, "s_k": 88, "s_j": 88, "sum": [88, 89], "topolog": [88, 89], "demonstr": [88, 89], "fact": 88, "cousin": 88, "simpli": 88, "becaus": 88, "stabilzi": 88, "solv": 88, "propos": [88, 89], "wild": 88, "0903": 88, "5256": 88, "gottesman": 88, "phd": 88, "dissert": 88, "sect": 88, "setminu": 88, "he": 88, "dress": 88, "sp": 88, "psp": 88, "29": 88, "x_new": 88, "z_new": 88, "n_pn": 88, "x0x3": 88, "x0z2": 88, "x0z1": 88, "david": 88, "poulin": 88, "pou05": 88, "proce": 88, "underbrac": 88, "destabil": 88, "factor": 88, "protect": 88, "choic": [88, 89], "practic": 88, "bare": 88, "make_isotropic_hyperbolic_form": 88, "x1y3": 88, "x2x3y4": 88, "z1z5": 88, "cen": 88, "z1x2x3y4z5": 88, "31": 88, "codebuild": 88, "subsystem_surface_code_build": 88, "subsystemsurfacecodebuild": 88, "equat": 88, "mathrm": 88, "supp": 88, "neq": 88, "min_": 88, "gp": 88, "hard": 88, "cite": 88, "vardy1997": 88, "rp": 88, "unless": 88, "dumer2003": 88, "exactli": 88, "cw": 88, "reduct": 88, "kapshikar2022": 88, "nevertheless": 88, "valuabl": 88, "our": [88, 89], "belong": 88, "straightforward": 88, "cal": 88, "s_i": 88, "membership": 88, "latter": 88, "enumer": [88, 89], "sum_": 88, "3n": 88, "3ne": 88, "goal": 88, "synd": 88, "w_1": 88, "w_2": 88, "approx": 88, "t_": 88, "w_i": 88, "suppos": 88, "cap": 88, "6ne": 88, "sigma": 88, "ee": 88, "intersect": 88, "proport": 88, "uniformli": 88, "2k": 88, "subroutin": 88, "exercis": 88, "review": 88, "literatur": 88, "certain": 88, "minimum_dist": 88, "3x3": 88, "bacon": 88, "shor": 88, "gauge_op_str": 88, "xiixiiiii": 88, "ixiixiiii": 88, "iixiixiii": 88, "iiixiixii": 88, "iiiixiixi": 88, "iiiiixiix": 88, "zziiiiiii": 88, "izziiiiii": 88, "iiizziiii": 88, "iiiizziii": 88, "iiiiiizzi": 88, "iiiiiiizz": 88, "x3x6": 88, "z0z1": 88, "z4z5": 88, "x4x7": 88, "z6z7": 88, "x2x5": 88, "x5x8": 88, "z7z8": 88, "bacon_shor_cod": 88, "34": 88, "codet": 88, "de": 88, "yzizzzizizizzzizi": 88, "ixzziizzzzzziizzx": 88, "zzxiiziiziziiziix": 88, "zizyzzzziiiizzzzi": 88, "iiiixizizzizzizix": 88, "zzizzyiiiizziiiii": 88, "iizziiyziziiizizi": 88, "iziiizixzzzzzzzzx": 88, "zzzzzzzzxiziiizix": 88, "ziziiizizyiizziii": 88, "iiiizziiiiyzzizzi": 88, "izizzizzizixiiiix": 88, "zzzziiiizzzzyzizi": 88, "iiziiziziiziixzzx": 88, "zziizzzzzziizzxix": 88, "zizzzizizizzzizyi": 88, "code_17_1_7": 88, "35": 88, "max_weight": 88, "c_n": 88, "infti": 88, "_nt": 88, "h_j": 88, "cnot": 88, "ij": 88, "hadamard": 88, "sqrt": 88, "eta": 88, "eighth": 88, "uniti": 88, "eqsim": 88, "s_3": 88, "2h": 88, "xyz": 88, "zyx": 88, "sh": 88, "3h": 88, "hsh": 88, "s_": 88, "s_n": 88, "pi_2": 88, "simplic": 88, "coeffient": 88, "isomorph": 88, "wr": 88, "automorph": 88, "aut": 88, "four": 88, "xixi": 88, "iizz": 88, "zizi": 88, "izii": 88, "xixx": 88, "hyperbolc": 88, "diffiult": 88, "inspect": 88, "perserv": 88, "anyth": 88, "comment": 88, "i_a": 88, "i_b": 88, "h_a": 88, "h_b": 88, "ab": 88, "exchang": 88, "hand": 88, "notin": 88, "100": 88, "carri": 88, "cacluat": 88, "cardinat": 88, "soon": 88, "framemwork": 88, "librarian": 88, "40": 88, "y0y4": 88, "codelibarian": 88, "ldpc": 88, "ini": 88, "although": 88, "realli": 88, "filenam": 88, "tell": 88, "ontain": 88, "codelibraian": 88, "themselv": 88, "infom": 88, "ite": 88, "back": 88, "info_only_": 88, "flag": 88, "41": 88, "42": 88, "43": 88, "44": 88, "27": 88, "z0z1x2": 88, "x1z2x3z4": 88, "x0x1y3y4": 88, "z0x3": 88, "z1x4": 88, "z1z3": 88, "65e7ef69": 88, "1b5b": 88, "49a7": 88, "97f7": 88, "f41ca540cc8f": 88, "45": 88, "360": 88, "26": 88, "48": 88, "64": 88, "tilecodefactori": 88, "46": 88, "47": 88, "celluat": 88, "appraoch": 88, "simplifi": 88, "choosen": 88, "bedlow": 88, "regulat": 88, "collect": 88, "lai": 88, "planar": 88, "49": 88, "58": 88, "59": 88, "57": 88, "diagonalbartil": 88, "33": 88, "octasquaretil": 88, "squarediamondtil": 88, "enabl": 88, "creation": 88, "wf": 88, "car": 88, "plant": 88, "brand": 88, "lot": 88, "67": 88, "68": 88, "02": 88, "69": 88, "show_work": 88, "occupi": 88, "x4x5x6x7x8x9": 88, "z4z5z6z7z8z9": 88, "x1x3x6x8": 88, "z1z3z6z8": 88, "x10x11x12x13x14x15": 88, "z10z11z12z13z14z15": 88, "x7x9x12x14": 88, "z7z9z12z14": 88, "x13x15x16x17": 88, "z13z15z16z17": 88, "x18x19x20x21": 88, "z18z19z20z21": 88, "x0x1x4x6x20x21": 88, "z0z1z4z6z20z21": 88, "x22x23x24x25x26x27": 88, "z22z23z24z25z26z27": 88, "x4x5x19x21x24x26": 88, "z4z5z19z21z24z26": 88, "x5x7x10x12x26x27": 88, "z5z7z10z12z26z27": 88, "x10x11x25x27x28x29": 88, "z10z11z25z27z28z29": 88, "x11x13x16x29": 88, "z11z13z16z29": 88, "x30x31x32x33": 88, "z30z31z32z33": 88, "x18x19x22x24x32x33": 88, "z18z19z22z24z32z33": 88, "x22x23x31x33x34x35": 88, "z22z23z31z33z34z35": 88, "x23x25x28x35": 88, "z23z25z28z35": 88, "x30x31x34x36": 88, "z30z31z34z36": 88, "70": 88, "8660254": 88, "73205081": 88, "bundl": 88, "71": 88, "orang": 88, "blue": 88, "basudha": 88, "srivastava": 88, "anton": 88, "frisk": 88, "kockum": 88, "mat": 88, "granath": 88, "22331": 88, "04": 88, "698": 88, "unus": 88, "_weight_len": 88, "len": 88, "m_grad": 88, "near_lin": 88, "find_ind": 88, "lines_": 88, "triangle_po": 88, "zip": 88, "on_line_indic": 88, "elif": 88, "line_ind": 88, "line_index": 88, "branch": 88, "yzx2_code_factori": 88, "51": 88, "52": 88, "yxz2_code": 88, "53": 88, "compass": 88, "illustr": 88, "journal": 88, "ap": 88, "prx": 88, "1103": 88, "physrevx": 88, "011022": 88, "chamberland": 88, "zhu": 88, "yoder": 88, "hertzberg": 88, "awc": 88, "prl": 88, "physrevlett": 88, "128": 88, "110504": 88, "kim": 88, "sundaresan": 88, "srinivasan": 88, "li": 88, "c\u00f3rcole": 88, "takita": 88, "2203": 88, "07205": 88, "harper": 88, "thorbeck": 88, "awcross1": 88, "54": 88, "nonumb": 88, "overbrac": 88, "prod_i": 88, "bulk": 88, "significantli": 88, "depth": 88, "stuctur": 88, "categori": 88, "outsid": 88, "pedagog": 88, "teach": 88, "scope": 88, "realiz": 88, "put": 88, "examin": 88, "signatur": 88, "translat": 88, "eigenst": 88, "ideal": 88, "dure": 88, "cycl": 88, "sensit": 88, "hypergraph": 88, "subsequ": 88, "mpl": 88, "quantumregist": 88, "classicalregist": 88, "examples_qasm": 88, "openqasm": 88, "ninclud": 88, "qelib1": 88, "inc": 88, "nqreg": 88, "code_qubit": 88, "link_qubit": 88, "ncreg": 88, "round_0_link_bit": 88, "round_1_link_bit": 88, "code_bit": 88, "nx": 88, "nbarrier": 88, "ncx": 88, "nmeasur": 88, "nreset": 88, "qasm": 88, "from_qasm_str": 88, "example_explan": 88, "unfortun": 88, "juli": 88, "cours": 88, "address": 88, "quantumjim": 88, "qec_lectur": 88, "jan": 88, "feb": 88, "2023": 88, "video": 88, "lectur": 88, "walk": 89, "wa": 89, "nicola": 89, "delfoss": 89, "naomi": 89, "nickerson": 89, "2020": 89, "almost": 89, "per": 89, "meet": 89, "grown": 89, "twice": 89, "unweight": 89, "relev": 89, "faultenumer": 89, "unionfinddecod": 89, "surfacecodecircuit": 89, "arccircuit": 89, "quit": 89, "last": 89, "05": 89, "add_oper": 89, "set_error_prob": 89, "handi": 89, "try": 89, "normal": 89, "circumst": 89, "pick": 89, "fault_enumer": 89, "join": 89, "corrected_outcom": 89, "logical_outcom": 89, "css_z_logic": 89, "assert": 89}, "objects": {"": [[5, 0, 0, "-", "qiskit_qec"]], "qiskit_qec": [[0, 0, 0, "-", "analysis"], [1, 0, 0, "-", "circuits"], [2, 0, 0, "-", "codes"], [3, 0, 0, "-", "decoders"], [4, 0, 0, "-", "geometry"], [6, 0, 0, "-", "info"], [7, 0, 0, "-", "linear"], [8, 0, 0, "-", "operators"], [9, 0, 0, "-", "structures"], [10, 0, 0, "-", "utils"]], "qiskit_qec.circuits": [[16, 1, 1, "", "ArcCircuit"], [17, 1, 1, "", "CSSCodeCircuit"], [18, 1, 1, "", "CodeCircuit"], [19, 1, 1, "", "RepetitionCodeCircuit"], [20, 1, 1, "", "SurfaceCodeCircuit"]], "qiskit_qec.circuits.ArcCircuit": [[16, 2, 1, "", "AVAILABLE_METHODS"], [16, 2, 1, "", "METHOD_NAIVE"], [16, 2, 1, "", "METHOD_SPITZ"], [16, 3, 1, "", "check_nodes"], [16, 3, 1, "", "flatten_nodes"], [16, 3, 1, "", "get_error_coords"], [16, 3, 1, "", "is_cluster_neutral"], [16, 3, 1, "", "measured_logicals"], [16, 3, 1, "", "string2nodes"], [16, 3, 1, "", "string2raw_logicals"], [16, 3, 1, "", "transpile"]], "qiskit_qec.circuits.CSSCodeCircuit": [[17, 3, 1, "", "check_nodes"], [17, 3, 1, "", "is_cluster_neutral"], [17, 3, 1, "", "measured_logicals"], [17, 3, 1, "", "stim_detectors"], [17, 3, 1, "", "string2nodes"], [17, 3, 1, "", "string2raw_logicals"]], "qiskit_qec.circuits.CodeCircuit": [[18, 3, 1, "", "check_nodes"], [18, 3, 1, "", "is_cluster_neutral"], [18, 3, 1, "", "measured_logicals"], [18, 3, 1, "", "string2nodes"]], "qiskit_qec.circuits.RepetitionCodeCircuit": [[19, 3, 1, "", "check_nodes"], [19, 3, 1, "", "get_circuit_list"], [19, 3, 1, "", "is_cluster_neutral"], [19, 3, 1, "", "measured_logicals"], [19, 3, 1, "", "partition_outcomes"], [19, 3, 1, "", "readout"], [19, 3, 1, "", "string2nodes"], [19, 3, 1, "", "string2raw_logicals"], [19, 3, 1, "", "syndrome_measurement"], [19, 3, 1, "", "x"]], "qiskit_qec.circuits.SurfaceCodeCircuit": [[20, 3, 1, "", "check_nodes"], [20, 3, 1, "", "get_circuit_list"], [20, 3, 1, "", "is_cluster_neutral"], [20, 3, 1, "", "measured_logicals"], [20, 3, 1, "", "readout"], [20, 3, 1, "", "string2nodes"], [20, 3, 1, "", "string2raw_logicals"], [20, 3, 1, "", "syndrome_measurement"], [20, 3, 1, "", "x"], [20, 3, 1, "", "z"]], "qiskit_qec.codes": [[21, 1, 1, "", "CodeLibrarian"], [22, 1, 1, "", "CodeLibrary"], [23, 1, 1, "", "QECCode"], [24, 1, 1, "", "StabSubSystemCode"], [25, 4, 1, "", "all_small_codes"], [26, 4, 1, "", "small_code"]], "qiskit_qec.codes.CodeLibrarian": [[21, 3, 1, "", "get"], [21, 2, 1, "", "n_dir_format"], [21, 2, 1, "", "n_k_codes_file_format"]], "qiskit_qec.codes.CodeLibrary": [[22, 3, 1, "", "data2code"], [22, 3, 1, "", "in_range"], [22, 3, 1, "", "search"]], "qiskit_qec.codes.StabSubSystemCode": [[24, 3, 1, "", "draw"], [24, 2, 1, "", "generators"], [24, 2, 1, "", "n"]], "qiskit_qec.decoders": [[27, 1, 1, "", "CircuitModelMatchingDecoder"], [28, 1, 1, "", "DecodingGraph"], [29, 1, 1, "", "RepetitionDecoder"], [30, 1, 1, "", "ThreeBitDecoder"], [31, 1, 1, "", "UnionFindDecoder"]], "qiskit_qec.decoders.CircuitModelMatchingDecoder": [[27, 2, 1, "", "AVAILABLE_METHODS"], [27, 2, 1, "", "METHOD_PYMATCHING"], [27, 2, 1, "", "METHOD_RETWORKX"], [27, 3, 1, "", "process"], [27, 3, 1, "", "update_edge_weights"]], "qiskit_qec.decoders.DecodingGraph": [[28, 2, 1, "", "AVAILABLE_METHODS"], [28, 2, 1, "", "METHOD_NAIVE"], [28, 2, 1, "", "METHOD_SPITZ"], [28, 3, 1, "", "get_error_probs"], [28, 3, 1, "", "make_error_graph"], [28, 3, 1, "", "weight_syndrome_graph"]], "qiskit_qec.decoders.RepetitionDecoder": [[29, 2, 1, "", "AVAILABLE_METHODS"], [29, 2, 1, "", "METHOD_PYMATCHING"], [29, 2, 1, "", "METHOD_RETWORKX"], [29, 3, 1, "", "process"], [29, 3, 1, "", "update_edge_weights"]], "qiskit_qec.decoders.ThreeBitDecoder": [[30, 2, 1, "", "AVAILABLE_METHODS"], [30, 2, 1, "", "METHOD_PYMATCHING"], [30, 2, 1, "", "METHOD_RETWORKX"], [30, 3, 1, "", "process"], [30, 3, 1, "", "update_edge_weights"]], "qiskit_qec.decoders.UnionFindDecoder": [[31, 3, 1, "", "cluster"], [31, 3, 1, "", "find"], [31, 3, 1, "", "get_corrections"], [31, 3, 1, "", "neighbouring_edges"], [31, 3, 1, "", "peeling"], [31, 3, 1, "", "process"]], "qiskit_qec.geometry": [[32, 1, 1, "", "CheckerBoardTile"], [33, 1, 1, "", "DiagonalBarTile"], [34, 1, 1, "", "DiagonalHourGlassTile"], [35, 1, 1, "", "Edge"], [36, 1, 1, "", "Face"], [37, 1, 1, "", "GeometryBounds"], [38, 1, 1, "", "HexagonTile"], [39, 1, 1, "", "Lattice"], [40, 1, 1, "", "Manifold"], [41, 1, 1, "", "OctaSquareTile"], [42, 1, 1, "", "Plane"], [43, 1, 1, "", "QubitCount"], [44, 1, 1, "", "QubitData"], [45, 1, 1, "", "Shape"], [46, 1, 1, "", "ShapeObject"], [47, 1, 1, "", "Shell"], [48, 1, 1, "", "SquareDiamondTile"], [49, 1, 1, "", "Tile"], [50, 1, 1, "", "TileFactory"], [51, 1, 1, "", "Tiling"], [52, 1, 1, "", "TwoManifold"], [53, 1, 1, "", "Vertex"], [54, 1, 1, "", "WireFrame"]], "qiskit_qec.geometry.CheckerBoardTile": [[32, 3, 1, "", "draw"], [32, 2, 1, "", "face_colors"], [32, 2, 1, "", "faces_wf_components"], [32, 2, 1, "", "num_faces"], [32, 2, 1, "", "num_qubits"], [32, 2, 1, "", "size"], [32, 2, 1, "", "u_vec"], [32, 2, 1, "", "v_vec"], [32, 2, 1, "", "wf_coordinates"], [32, 2, 1, "", "wf_loop_indicator"], [32, 2, 1, "", "wf_operator_dict"], [32, 2, 1, "", "wf_q_indices"]], "qiskit_qec.geometry.DiagonalBarTile": [[33, 3, 1, "", "draw"], [33, 2, 1, "", "face_colors"], [33, 2, 1, "", "faces_wf_components"], [33, 2, 1, "", "num_faces"], [33, 2, 1, "", "num_qubits"], [33, 2, 1, "", "size"], [33, 2, 1, "", "u_vec"], [33, 2, 1, "", "v_vec"], [33, 2, 1, "", "wf_coordinates"], [33, 2, 1, "", "wf_loop_indicator"], [33, 2, 1, "", "wf_operator_dict"], [33, 2, 1, "", "wf_q_indices"]], "qiskit_qec.geometry.DiagonalHourGlassTile": [[34, 3, 1, "", "draw"], [34, 2, 1, "", "face_colors"], [34, 2, 1, "", "faces_wf_components"], [34, 2, 1, "", "num_faces"], [34, 2, 1, "", "num_qubits"], [34, 2, 1, "", "size"], [34, 2, 1, "", "u_vec"], [34, 2, 1, "", "v_vec"], [34, 2, 1, "", "wf_coordinates"], [34, 2, 1, "", "wf_loop_indicator"], [34, 2, 1, "", "wf_operator_dict"], [34, 2, 1, "", "wf_q_indices"]], "qiskit_qec.geometry.Edge": [[35, 3, 1, "", "add_parent"], [35, 3, 1, "", "create_id"], [35, 2, 1, "", "last_id"]], "qiskit_qec.geometry.Face": [[36, 3, 1, "", "add_parent"], [36, 3, 1, "", "create_id"], [36, 2, 1, "", "last_id"]], "qiskit_qec.geometry.GeometryBounds": [[37, 3, 1, "", "bounding_box_from_line"], [37, 3, 1, "", "combine"], [37, 3, 1, "", "contains"], [37, 3, 1, "", "copy"], [37, 3, 1, "", "expand"], [37, 3, 1, "", "intercepts"], [37, 3, 1, "", "set_min_max"]], "qiskit_qec.geometry.HexagonTile": [[38, 3, 1, "", "draw"], [38, 2, 1, "", "face_colors"], [38, 2, 1, "", "faces_wf_components"], [38, 2, 1, "", "h"], [38, 2, 1, "", "num_faces"], [38, 2, 1, "", "num_qubits"], [38, 2, 1, "", "r"], [38, 2, 1, "", "size"], [38, 2, 1, "", "u_vec"], [38, 2, 1, "", "v_vec"], [38, 2, 1, "", "wf_coordinates"], [38, 2, 1, "", "wf_loop_indicator"], [38, 2, 1, "", "wf_operator_dict"], [38, 2, 1, "", "wf_q_indices"]], "qiskit_qec.geometry.Lattice": [[39, 3, 1, "", "apply_transform_from"], [39, 3, 1, "", "find_pre_transform_length"], [39, 3, 1, "", "generate_points"], [39, 3, 1, "", "make_transform"], [39, 3, 1, "", "restrict"], [39, 3, 1, "", "restrict_for_tiling"]], "qiskit_qec.geometry.OctaSquareTile": [[41, 2, 1, "", "c8"], [41, 3, 1, "", "draw"], [41, 2, 1, "", "face_colors"], [41, 2, 1, "", "faces_wf_components"], [41, 2, 1, "", "num_faces"], [41, 2, 1, "", "num_qubits"], [41, 2, 1, "", "s8"], [41, 2, 1, "", "size"], [41, 2, 1, "", "u_vec"], [41, 2, 1, "", "v_vec"], [41, 2, 1, "", "wf_coordinates"], [41, 2, 1, "", "wf_loop_indicator"], [41, 2, 1, "", "wf_operator_dict"], [41, 2, 1, "", "wf_q_indices"]], "qiskit_qec.geometry.Plane": [[42, 3, 1, "", "ison"], [42, 3, 1, "", "rot_matrix"], [42, 3, 1, "", "rotate"]], "qiskit_qec.geometry.QubitCount": [[43, 3, 1, "", "decrement_qubit"], [43, 3, 1, "", "increment_qubit"], [43, 3, 1, "", "new_qubit"]], "qiskit_qec.geometry.QubitData": [[44, 3, 1, "", "add_data_array"], [44, 3, 1, "", "del_data_array"]], "qiskit_qec.geometry.Shape": [[45, 3, 1, "", "bounding_box_from_lines"], [45, 3, 1, "", "contains"], [45, 3, 1, "", "contains_quad_winding_number"], [45, 3, 1, "", "contains_ray_trace"], [45, 3, 1, "", "create_lines"], [45, 3, 1, "", "inside"], [45, 3, 1, "", "is_between"], [45, 3, 1, "", "rect"], [45, 3, 1, "", "square"]], "qiskit_qec.geometry.ShapeObject": [[46, 3, 1, "", "add_parent"], [46, 3, 1, "", "create_id"], [46, 2, 1, "", "last_id"]], "qiskit_qec.geometry.Shell": [[47, 3, 1, "", "add_parent"], [47, 3, 1, "", "create_id"], [47, 3, 1, "", "delete_subtree"], [47, 3, 1, "", "draw"], [47, 3, 1, "", "extract"], [47, 3, 1, "", "integer_snap"], [47, 2, 1, "", "last_id"], [47, 3, 1, "", "rotate2d"], [47, 3, 1, "", "scale"], [47, 3, 1, "", "shell2symplectic"], [47, 3, 1, "", "shift"], [47, 3, 1, "", "union"]], "qiskit_qec.geometry.SquareDiamondTile": [[48, 3, 1, "", "draw"], [48, 2, 1, "", "face_colors"], [48, 2, 1, "", "faces_wf_components"], [48, 2, 1, "", "num_faces"], [48, 2, 1, "", "num_qubits"], [48, 2, 1, "", "size"], [48, 2, 1, "", "u_vec"], [48, 2, 1, "", "v_vec"], [48, 2, 1, "", "wf_coordinates"], [48, 2, 1, "", "wf_loop_indicator"], [48, 2, 1, "", "wf_operator_dict"], [48, 2, 1, "", "wf_orientation"], [48, 2, 1, "", "wf_q_indices"]], "qiskit_qec.geometry.Tile": [[49, 3, 1, "", "draw"]], "qiskit_qec.geometry.Tiling": [[51, 3, 1, "", "distance"]], "qiskit_qec.geometry.Vertex": [[53, 3, 1, "", "add_parent"], [53, 3, 1, "", "create_id"], [53, 2, 1, "", "last_id"], [53, 2, 1, "", "position"], [53, 3, 1, "", "set_position"], [53, 3, 1, "", "shallowcopy"]], "qiskit_qec.geometry.WireFrame": [[54, 3, 1, "", "add_parent"], [54, 3, 1, "", "create_id"], [54, 2, 1, "", "last_id"]], "qiskit_qec.info": [[55, 1, 1, "", "Properties"]], "qiskit_qec.info.Properties": [[55, 2, 1, "", "AUT_GROUP_SIZE"], [55, 2, 1, "", "CITATION"], [55, 2, 1, "", "CODE_TYPES"], [55, 2, 1, "", "D"], [55, 2, 1, "", "GAUGE_GROUP"], [55, 2, 1, "", "HYPERBOLIC_GEN"], [55, 2, 1, "", "INDEX"], [55, 2, 1, "", "ISOTROPIC_GEN"], [55, 2, 1, "", "IS_CSS"], [55, 2, 1, "", "IS_CSS_KEY"], [55, 2, 1, "", "IS_DECOMPOSABLE"], [55, 2, 1, "", "IS_DECOMPOSABLE_KEY"], [55, 2, 1, "", "IS_DEGENERATE"], [55, 2, 1, "", "IS_DEGENERATE_KEY"], [55, 2, 1, "", "IS_GF4LINEAR"], [55, 2, 1, "", "IS_GF4LINEAR_KEY"], [55, 2, 1, "", "IS_TRIORTHOGONAL"], [55, 2, 1, "", "IS_TRIORTHOGONAL_KEY"], [55, 2, 1, "", "K"], [55, 2, 1, "", "LOGICAL_OPS"], [55, 2, 1, "", "N"], [55, 2, 1, "", "NAME"], [55, 2, 1, "", "STABILIZER"], [55, 2, 1, "", "TYPE"], [55, 2, 1, "", "UUID"], [55, 2, 1, "", "WEIGHT_ENUMERATOR"], [55, 2, 1, "", "info"]], "qiskit_qec.linear": [[56, 4, 1, "", "all_commute"], [57, 4, 1, "", "augment_mat"], [58, 4, 1, "", "build_hyper_partner"], [59, 4, 1, "", "create_lambda_matrix"], [60, 4, 1, "", "is_center"], [61, 4, 1, "", "is_hyper_form"], [62, 4, 1, "", "is_same_span"], [63, 4, 1, "", "is_stabilizer_group"], [64, 4, 1, "", "is_symplectic_form"], [65, 4, 1, "", "is_symplectic_matrix_form"], [66, 4, 1, "", "is_symplectic_vector_form"], [67, 4, 1, "", "locate_hyper_partner"], [68, 4, 1, "", "make_commute_hyper"], [69, 4, 1, "", "rank"], [70, 4, 1, "", "rref"], [71, 4, 1, "", "rref_complete"], [72, 4, 1, "", "symplectic_gram_schmidt"], [73, 4, 1, "", "symplectic_product"]], "qiskit_qec.operators": [[74, 1, 1, "", "BasePauli"], [75, 1, 1, "", "Pauli"], [76, 1, 1, "", "PauliList"]], "qiskit_qec.operators.BasePauli": [[74, 2, 1, "", "EXTERNAL_PAULI_ENCODING"], [74, 2, 1, "", "EXTERNAL_PHASE_ENCODING"], [74, 2, 1, "", "EXTERNAL_QUBIT_ORDER"], [74, 2, 1, "", "EXTERNAL_SYNTAX"], [74, 2, 1, "", "EXTERNAL_TENSOR_ENCODING"], [74, 2, 1, "", "PRINT_PHASE_ENCODING"], [74, 3, 1, "", "adjoint"], [74, 3, 1, "", "all_commutes"], [74, 3, 1, "", "commutes"], [74, 3, 1, "", "compose"], [74, 3, 1, "", "conjugate"], [74, 3, 1, "", "copy"], [74, 2, 1, "", "dim"], [74, 3, 1, "", "dot"], [74, 3, 1, "", "evolve"], [74, 3, 1, "", "expand"], [74, 3, 1, "", "input_dims"], [74, 2, 1, "", "num_qubits"], [74, 2, 1, "", "num_y"], [74, 3, 1, "", "output_dims"], [74, 2, 1, "", "pauli_encoding"], [74, 2, 1, "", "phase_encoding"], [74, 3, 1, "", "power"], [74, 2, 1, "", "print_phase_encoding"], [74, 2, 1, "", "qargs"], [74, 2, 1, "", "qubit_order"], [74, 3, 1, "", "reshape"], [74, 3, 1, "", "set_pauli_encoding"], [74, 3, 1, "", "set_phase_encoding"], [74, 3, 1, "", "set_print_phase_encoding"], [74, 3, 1, "", "set_qubit_order"], [74, 3, 1, "", "set_syntax"], [74, 3, 1, "", "set_tensor_encoding"], [74, 2, 1, "", "syntax"], [74, 3, 1, "", "tensor"], [74, 2, 1, "", "tensor_encoding"], [74, 3, 1, "", "to_label"], [74, 3, 1, "", "transpose"], [74, 2, 1, "", "x"], [74, 2, 1, "", "z"]], "qiskit_qec.operators.Pauli": [[75, 2, 1, "", "EXTERNAL_PAULI_ENCODING"], [75, 2, 1, "", "EXTERNAL_PHASE_ENCODING"], [75, 2, 1, "", "EXTERNAL_QUBIT_ORDER"], [75, 2, 1, "", "EXTERNAL_SYNTAX"], [75, 2, 1, "", "EXTERNAL_TENSOR_ENCODING"], [75, 2, 1, "", "PRINT_PHASE_ENCODING"], [75, 3, 1, "", "adjoint"], [75, 3, 1, "", "all_commutes"], [75, 3, 1, "", "anticommutes"], [75, 3, 1, "", "append_paulis"], [75, 3, 1, "", "commutes"], [75, 3, 1, "", "compose"], [75, 3, 1, "", "conjugate"], [75, 3, 1, "", "copy"], [75, 3, 1, "", "delete"], [75, 3, 1, "", "delete_qubits"], [75, 2, 1, "", "dim"], [75, 3, 1, "", "dot"], [75, 3, 1, "", "equiv"], [75, 3, 1, "", "evolve"], [75, 3, 1, "", "expand"], [75, 3, 1, "", "from_label"], [75, 3, 1, "", "input_dims"], [75, 3, 1, "", "insert"], [75, 3, 1, "", "insert_paulis"], [75, 3, 1, "", "instrs2symplectic"], [75, 3, 1, "", "inverse"], [75, 3, 1, "", "kron"], [75, 2, 1, "", "name"], [75, 2, 1, "", "num_clbits"], [75, 2, 1, "", "num_qubits"], [75, 2, 1, "", "num_y"], [75, 3, 1, "", "output_dims"], [75, 2, 1, "", "pauli_encoding"], [75, 3, 1, "", "pauli_single"], [75, 2, 1, "", "phase"], [75, 2, 1, "", "phase_encoding"], [75, 2, 1, "", "phase_exp"], [75, 2, 1, "", "pltb_int"], [75, 2, 1, "", "pltb_str"], [75, 3, 1, "", "power"], [75, 2, 1, "", "print_phase_encoding"], [75, 2, 1, "", "qargs"], [75, 2, 1, "", "qubit_order"], [75, 3, 1, "", "random"], [75, 3, 1, "", "reshape"], [75, 3, 1, "", "set_pauli_encoding"], [75, 3, 1, "", "set_phase_encoding"], [75, 3, 1, "", "set_print_phase_encoding"], [75, 3, 1, "", "set_qubit_order"], [75, 3, 1, "", "set_syntax"], [75, 3, 1, "", "set_tensor_encoding"], [75, 3, 1, "", "set_truncation"], [75, 2, 1, "", "settings"], [75, 3, 1, "", "sgn_prod"], [75, 2, 1, "", "syntax"], [75, 3, 1, "", "tensor"], [75, 2, 1, "", "tensor_encoding"], [75, 3, 1, "", "to_cpx_matrix"], [75, 3, 1, "", "to_instruction"], [75, 3, 1, "", "to_label"], [75, 3, 1, "", "to_matrix"], [75, 3, 1, "", "to_spmatrix"], [75, 3, 1, "", "transpose"], [75, 3, 1, "", "update_x"], [75, 3, 1, "", "update_z"], [75, 2, 1, "", "x"], [75, 2, 1, "", "z"]], "qiskit_qec.operators.PauliList": [[76, 2, 1, "", "EXTERNAL_PAULI_ENCODING"], [76, 2, 1, "", "EXTERNAL_PHASE_ENCODING"], [76, 2, 1, "", "EXTERNAL_QUBIT_ORDER"], [76, 2, 1, "", "EXTERNAL_SYNTAX"], [76, 2, 1, "", "EXTERNAL_TENSOR_ENCODING"], [76, 2, 1, "", "PRINT_PHASE_ENCODING"], [76, 3, 1, "", "adjoint"], [76, 3, 1, "", "all_commutes"], [76, 3, 1, "", "anticommutes"], [76, 3, 1, "", "anticommutes_with_all"], [76, 3, 1, "", "argsort"], [76, 3, 1, "", "commutes"], [76, 3, 1, "", "commutes_with_all"], [76, 3, 1, "", "compose"], [76, 3, 1, "", "conjugate"], [76, 3, 1, "", "copy"], [76, 3, 1, "", "delete"], [76, 2, 1, "", "dim"], [76, 3, 1, "", "dot"], [76, 3, 1, "", "evolve"], [76, 3, 1, "", "expand"], [76, 3, 1, "", "from_symplectic"], [76, 3, 1, "", "getaslist"], [76, 3, 1, "", "group_qubit_wise_commuting"], [76, 3, 1, "", "input_dims"], [76, 3, 1, "", "insert"], [76, 3, 1, "", "inverse"], [76, 3, 1, "", "label_iter"], [76, 3, 1, "", "matrix_iter"], [76, 2, 1, "", "num_paulis"], [76, 2, 1, "", "num_qubits"], [76, 2, 1, "", "num_y"], [76, 3, 1, "", "output_dims"], [76, 2, 1, "", "pauli_encoding"], [76, 2, 1, "", "phase"], [76, 2, 1, "", "phase_encoding"], [76, 2, 1, "", "phase_exp"], [76, 3, 1, "", "power"], [76, 2, 1, "", "print_phase_encoding"], [76, 2, 1, "", "qargs"], [76, 2, 1, "", "qubit_order"], [76, 3, 1, "", "reshape"], [76, 3, 1, "", "set_pauli_encoding"], [76, 3, 1, "", "set_phase_encoding"], [76, 3, 1, "", "set_print_phase_encoding"], [76, 3, 1, "", "set_qubit_order"], [76, 3, 1, "", "set_syntax"], [76, 3, 1, "", "set_tensor_encoding"], [76, 2, 1, "", "settings"], [76, 2, 1, "", "shape"], [76, 2, 1, "", "size"], [76, 3, 1, "", "sort"], [76, 2, 1, "", "syntax"], [76, 3, 1, "", "tensor"], [76, 2, 1, "", "tensor_encoding"], [76, 3, 1, "", "to_label"], [76, 3, 1, "", "to_labels"], [76, 3, 1, "", "to_matrix"], [76, 3, 1, "", "transpose"], [76, 3, 1, "", "unique"], [76, 2, 1, "", "x"], [76, 2, 1, "", "z"]], "qiskit_qec.structures": [[77, 1, 1, "", "GaugeGroup"], [78, 1, 1, "", "Group"]], "qiskit_qec.structures.GaugeGroup": [[77, 2, 1, "", "k"], [77, 2, 1, "", "n"], [77, 2, 1, "", "num_gen"]], "qiskit_qec.utils": [[79, 1, 1, "", "DecodingGraphEdge"], [80, 1, 1, "", "DecodingGraphNode"], [81, 4, 1, "", "get_counts_via_stim"], [82, 4, 1, "", "get_stim_circuits"], [83, 0, 0, "-", "indexer"], [84, 4, 1, "", "noisify_circuit"], [85, 0, 0, "-", "pauli_rep"], [86, 0, 0, "-", "visualizations"]], "qiskit_qec.utils.DecodingGraphEdge": [[79, 3, 1, "", "get"], [79, 2, 1, "", "properties"], [79, 2, 1, "", "qubits"], [79, 2, 1, "", "weight"]], "qiskit_qec.utils.DecodingGraphNode": [[80, 3, 1, "", "get"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"analysi": 0, "qiskit_qec": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 25, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 89], "modul": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10], "class": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10], "function": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10], "circuit": [1, 88], "code": [2, 12, 25, 26, 88], "decod": [3, 88, 89], "geometri": [4, 13], "qiskit": [5, 14, 15, 88], "qec": [5, 11, 14, 15, 88, 90], "api": 5, "refer": 5, "info": 6, "linear": [7, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "matrix": [7, 12], "symplect": [7, 12, 88], "oper": [8, 88], "structur": [9, 88], "util": [10, 81, 82, 83, 84, 85, 86], "discuss": 11, "how": [12, 13, 14], "creat": [12, 88], "classs": [12, 88], "factori": [12, 88], "builder": [12, 88], "librari": [12, 88], "databas": [12, 88], "provid": [12, 88], "stabil": [12, 88], "gaug": [12, 88], "gener": [12, 88], "string": [12, 88], "load": 12, "via": 12, "codebas": 12, "configur": 12, "run": 12, "tilecodefactori": 12, "specif": 12, "codebuild": 12, "work": 13, "object": 13, "guid": [14, 88], "document": 15, "arccircuit": 16, "csscodecircuit": 17, "codecircuit": 18, "repetitioncodecircuit": 19, "surfacecodecircuit": 20, "codelibrarian": 21, "codelibrari": 22, "qeccod": 23, "stabsubsystemcod": 24, "all_small_cod": 25, "small_cod": 26, "circuitmodelmatchingdecod": 27, "decodinggraph": 28, "repetitiondecod": 29, "threebitdecod": 30, "unionfinddecod": 31, "checkerboardtil": 32, "diagonalbartil": 33, "diagonalhourglasstil": 34, "edg": [35, 88], "face": [36, 88], "geometrybound": 37, "hexagontil": 38, "lattic": 39, "manifold": 40, "octasquaretil": 41, "plane": 42, "qubitcount": 43, "qubitdata": 44, "shape": 45, "shapeobject": 46, "shell": 47, "squarediamondtil": 48, "tile": [49, 51, 88], "tilefactori": [50, 88], "twomanifold": 52, "vertex": 53, "wirefram": 54, "properti": 55, "all_commut": 56, "augment_mat": 57, "build_hyper_partn": 58, "create_lambda_matrix": 59, "is_cent": 60, "is_hyper_form": 61, "is_same_span": 62, "is_stabilizer_group": 63, "is_symplectic_form": 64, "is_symplectic_matrix_form": 65, "is_symplectic_vector_form": 66, "locate_hyper_partn": 67, "make_commute_hyp": 68, "rank": 69, "rref": 70, "rref_complet": 71, "symplectic_gram_schmidt": 72, "symplectic_product": 73, "basepauli": 74, "pauli": [75, 76, 88], "paulilist": 76, "represent": [76, 88], "gaugegroup": 77, "group": [78, 88], "decodinggraphedg": 79, "decodinggraphnod": 80, "get_counts_via_stim": 81, "get_stim_circuit": 82, "index": 83, "noisify_circuit": 84, "pauli_rep": 85, "visual": 86, "tutori": [87, 90], "exampl": [87, 88], "softwar": 88, "framework": 88, "design": 88, "layer": 88, "compon": 88, "now": 88, "futur": 88, "The": 88, "creator": 88, "interactor": 88, "commmand": 88, "line": 88, "program": 88, "interfac": 88, "instal": 88, "content": 88, "set": 88, "up": 88, "python": 88, "environ": 88, "option": 88, "1": 88, "conda": 88, "recommend": 88, "2": 88, "venv": 88, "includ": 88, "depend": 88, "quantum": 88, "error": 88, "correct": 88, "repitit": 88, "classici": 88, "challeng": 88, "condit": 88, "subsystem": 88, "syntax": 88, "isotrop": 88, "hyperbol": 88, "gram": 88, "schmidt": 88, "process": 88, "surfac": 88, "toric": 88, "dual": 88, "qubit": 88, "vertic": 88, "rorat": 88, "find": [88, 89], "logic": 88, "center": 88, "normal": 88, "minin": 88, "distanc": 88, "basic": 88, "algorithm": 88, "minimum": 88, "improv": 88, "comput": 88, "clifford": 88, "equival": 88, "build": 88, "A": 88, "detail": 88, "someth": 88, "more": 88, "simul": 88, "fault": 88, "toler": 88, "us": 89, "union": 89}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Analysis (qiskit_qec.analysis)": [[0, "analysis-qiskit-qec-analysis"]], "Analysis module classes and functions": [[0, "analysis-module-classes-and-functions"]], "Circuits (qiskit_qec.circuits)": [[1, "circuits-qiskit-qec-circuits"]], "Circuits module classes and functions": [[1, "circuits-module-classes-and-functions"]], "Codes (qiskit_qec.codes)": [[2, "codes-qiskit-qec-codes"]], "Codes module classes and functions": [[2, "codes-module-classes-and-functions"]], "Decoders (qiskit_qec.decoders)": [[3, "decoders-qiskit-qec-decoders"]], "Decoders module classes and functions": [[3, "decoders-module-classes-and-functions"]], "Geometry (qiskit_qec.geometry)": [[4, "geometry-qiskit-qec-geometry"]], "Geometry module classes and functions": [[4, "geometry-module-classes-and-functions"]], "Qiskit QEC API Reference": [[5, "qiskit-qec-api-reference"]], "Info (qiskit_qec.info)": [[6, "info-qiskit-qec-info"]], "Info module classes and functions": [[6, "info-module-classes-and-functions"]], "Linear (qiskit_qec.linear)": [[7, "linear-qiskit-qec-linear"]], "Linear module classes and functions": [[7, "linear-module-classes-and-functions"]], "Linear matrix functions": [[7, "linear-matrix-functions"]], "Linear symplectic functions": [[7, "linear-symplectic-functions"]], "Operators (qiskit_qec.operators)": [[8, "operators-qiskit-qec-operators"]], "Operators module classes and functions": [[8, "operators-module-classes-and-functions"]], "Structures (qiskit_qec.structures)": [[9, "structures-qiskit-qec-structures"]], "Structures module classes and functions": [[9, "structures-module-classes-and-functions"]], "Utils (qiskit_qec.utils)": [[10, "utils-qiskit-qec-utils"]], "Utils module classes and functions": [[10, "utils-module-classes-and-functions"]], "QEC Discussions": [[11, "qec-discussions"]], "How-to: Create Codes": [[12, "How-to:-Create-Codes"]], "Code Classs": [[12, "Code-Classs"], [88, "Code-Classs"]], "Code Factories": [[12, "Code-Factories"], [88, "Code-Factories"]], "Code Builders": [[12, "Code-Builders"], [88, "Code-Builders"], [88, "id9"]], "Code Library/Database": [[12, "Code-Library/Database"], [88, "Code-Library/Database"], [88, "id5"]], "Creating Codes": [[12, "Creating-Codes"], [88, "Creating-Codes"]], "Creating a symplectic matrix": [[12, "Creating-a-symplectic-matrix"]], "Providing the stabilizer/gauge generators as strings": [[12, "Providing-the-stabilizer/gauge-generators-as-strings"], [88, "Providing-the-stabilizer/gauge-generators-as-strings"]], "Loading a code via the codebase libraries": [[12, "Loading-a-code-via-the-codebase-libraries"]], "Configuring and running a TileCodeFactory": [[12, "Configuring-and-running-a-TileCodeFactory"]], "Configuring and running a specific CodeBuilder": [[12, "Configuring-and-running-a-specific-CodeBuilder"]], "How-to: work with geometry objects": [[13, "How-to:-work-with-geometry-objects"]], "Qiskit QEC How-to guides": [[14, "qiskit-qec-how-to-guides"]], "Qiskit QEC documentation": [[15, "qiskit-qec-documentation"]], "ArcCircuit": [[16, "arccircuit"]], "CSSCodeCircuit": [[17, "csscodecircuit"]], "CodeCircuit": [[18, "codecircuit"]], "RepetitionCodeCircuit": [[19, "repetitioncodecircuit"]], "SurfaceCodeCircuit": [[20, "surfacecodecircuit"]], "CodeLibrarian": [[21, "codelibrarian"]], "CodeLibrary": [[22, "codelibrary"]], "QECCode": [[23, "qeccode"]], "StabSubSystemCode": [[24, "stabsubsystemcode"]], "qiskit_qec.codes.all_small_codes": [[25, "qiskit-qec-codes-all-small-codes"]], "qiskit_qec.codes.small_code": [[26, "qiskit-qec-codes-small-code"]], "CircuitModelMatchingDecoder": [[27, "circuitmodelmatchingdecoder"]], "DecodingGraph": [[28, "decodinggraph"]], "RepetitionDecoder": [[29, "repetitiondecoder"]], "ThreeBitDecoder": [[30, "threebitdecoder"]], "UnionFindDecoder": [[31, "unionfinddecoder"]], "CheckerBoardTile": [[32, "checkerboardtile"]], "DiagonalBarTile": [[33, "diagonalbartile"]], "DiagonalHourGlassTile": [[34, "diagonalhourglasstile"]], "Edge": [[35, "edge"]], "Face": [[36, "face"]], "GeometryBounds": [[37, "geometrybounds"]], "HexagonTile": [[38, "hexagontile"]], "Lattice": [[39, "lattice"]], "Manifold": [[40, "manifold"]], "OctaSquareTile": [[41, "octasquaretile"]], "Plane": [[42, "plane"]], "QubitCount": [[43, "qubitcount"]], "QubitData": [[44, "qubitdata"]], "Shape": [[45, "shape"]], "ShapeObject": [[46, "shapeobject"]], "Shell": [[47, "shell"]], "SquareDiamondTile": [[48, "squarediamondtile"]], "Tile": [[49, "tile"]], "TileFactory": [[50, "tilefactory"]], "Tiling": [[51, "tiling"]], "TwoManifold": [[52, "twomanifold"]], "Vertex": [[53, "vertex"]], "WireFrame": [[54, "wireframe"]], "Properties": [[55, "properties"]], "qiskit_qec.linear.all_commute": [[56, "qiskit-qec-linear-all-commute"]], "qiskit_qec.linear.augment_mat": [[57, "qiskit-qec-linear-augment-mat"]], "qiskit_qec.linear.build_hyper_partner": [[58, "qiskit-qec-linear-build-hyper-partner"]], "qiskit_qec.linear.create_lambda_matrix": [[59, "qiskit-qec-linear-create-lambda-matrix"]], "qiskit_qec.linear.is_center": [[60, "qiskit-qec-linear-is-center"]], "qiskit_qec.linear.is_hyper_form": [[61, "qiskit-qec-linear-is-hyper-form"]], "qiskit_qec.linear.is_same_span": [[62, "qiskit-qec-linear-is-same-span"]], "qiskit_qec.linear.is_stabilizer_group": [[63, "qiskit-qec-linear-is-stabilizer-group"]], "qiskit_qec.linear.is_symplectic_form": [[64, "qiskit-qec-linear-is-symplectic-form"]], "qiskit_qec.linear.is_symplectic_matrix_form": [[65, "qiskit-qec-linear-is-symplectic-matrix-form"]], "qiskit_qec.linear.is_symplectic_vector_form": [[66, "qiskit-qec-linear-is-symplectic-vector-form"]], "qiskit_qec.linear.locate_hyper_partner": [[67, "qiskit-qec-linear-locate-hyper-partner"]], "qiskit_qec.linear.make_commute_hyper": [[68, "qiskit-qec-linear-make-commute-hyper"]], "qiskit_qec.linear.rank": [[69, "qiskit-qec-linear-rank"]], "qiskit_qec.linear.rref": [[70, "qiskit-qec-linear-rref"]], "qiskit_qec.linear.rref_complete": [[71, "qiskit-qec-linear-rref-complete"]], "qiskit_qec.linear.symplectic_gram_schmidt": [[72, "qiskit-qec-linear-symplectic-gram-schmidt"]], "qiskit_qec.linear.symplectic_product": [[73, "qiskit-qec-linear-symplectic-product"]], "BasePauli": [[74, "basepauli"]], "Pauli": [[75, "pauli"]], "PauliList": [[76, "paulilist"]], "Pauli Representations": [[76, "id1"], [76, "id2"]], "GaugeGroup": [[77, "gaugegroup"]], "Group": [[78, "group"]], "DecodingGraphEdge": [[79, "decodinggraphedge"]], "DecodingGraphNode": [[80, "decodinggraphnode"]], "qiskit_qec.utils.get_counts_via_stim": [[81, "qiskit-qec-utils-get-counts-via-stim"]], "qiskit_qec.utils.get_stim_circuits": [[82, "qiskit-qec-utils-get-stim-circuits"]], "qiskit_qec.utils.indexer": [[83, "module-qiskit_qec.utils.indexer"]], "qiskit_qec.utils.noisify_circuit": [[84, "qiskit-qec-utils-noisify-circuit"]], "qiskit_qec.utils.pauli_rep": [[85, "module-qiskit_qec.utils.pauli_rep"]], "qiskit_qec.utils.visualizations": [[86, "module-qiskit_qec.utils.visualizations"]], "Tutorial: example": [[87, "Tutorial:-example"]], "Qiskit QEC Software Framework": [[88, "Qiskit-QEC-Software-Framework"]], "Framework Design": [[88, "Framework-Design"]], "Layer Design": [[88, "Layer-Design"]], "Framework Components (Now and Future)": [[88, "Framework-Components-(Now-and-Future)"]], "The Creator": [[88, "The-Creator"]], "The Interactor": [[88, "The-Interactor"]], "Commmand Line/Programming Interface": [[88, "Commmand-Line/Programming-Interface"]], "Structure": [[88, "Structure"]], "Installation guide": [[88, "Installation-guide"]], "Content": [[88, "Content"]], "Setting up python environment": [[88, "Setting-up-python-environment"]], "Option 1: conda (recommended)": [[88, "Option-1:-conda-(recommended)"]], "Option 2: venv (included in Python)": [[88, "Option-2:-venv-(included-in-Python)"]], "Installing": [[88, "Installing"]], "Installing optional dependencies": [[88, "Installing-optional-dependencies"]], "Quantum Error Correction": [[88, "Quantum-Error-Correction"], [88, "id1"]], "Repitition Code (Classicial)": [[88, "Repitition-Code-(Classicial)"]], "Challenges": [[88, "Challenges"]], "Quantum Error Correcting Codes": [[88, "Quantum-Error-Correcting-Codes"]], "Error Correcting Conditions": [[88, "Error-Correcting-Conditions"]], "Stabilizer Subsystem Codes": [[88, "Stabilizer-Subsystem-Codes"], [88, "id4"]], "Pauli Operators and Groups": [[88, "Pauli-Operators-and-Groups"], [88, "id2"]], "Representation of Pauli Operators": [[88, "Representation-of-Pauli-Operators"]], "String Syntax": [[88, "String-Syntax"]], "Symplectic Representations": [[88, "Symplectic-Representations"]], "Isotropic-Hyperbolic Generating Sets": [[88, "Isotropic-Hyperbolic-Generating-Sets"]], "Symplectic Gram-Schmidt Process": [[88, "Symplectic-Gram-Schmidt-Process"]], "Stabilizer SubSystem Codes": [[88, "Stabilizer-SubSystem-Codes"]], "Stabilizer Groups": [[88, "Stabilizer-Groups"]], "Stabilizer Codes": [[88, "Stabilizer-Codes"]], "Example Stabilizer Codes - Surface Codes": [[88, "Example-Stabilizer-Codes---Surface-Codes"]], "The Toric Code (Dual Representation - Qubits on edges)": [[88, "The-Toric-Code-(Dual-Representation---Qubits-on-edges)"], [88, "id6"]], "The Toric Code (Face Representation Qubits on vertices)": [[88, "The-Toric-Code-(Face-Representation-Qubits-on-vertices)"], [88, "id7"]], "Rorated Surface Code (Face Representation - Qubits on vertices)": [[88, "Rorated-Surface-Code-(Face-Representation---Qubits-on-vertices)"], [88, "id8"]], "Gauge Groups": [[88, "Gauge-Groups"]], "Finding Logical Operators": [[88, "Finding-Logical-Operators"]], "Centeralizer and Normalizer": [[88, "Centeralizer-and-Normalizer"]], "Finding Mininal Distances": [[88, "Finding-Mininal-Distances"]], "Basic algorithm for the minimum distance of (subsystem) stabilizer codes": [[88, "Basic-algorithm-for-the-minimum-distance-of-(subsystem)-stabilizer-codes"]], "Improved algorithm for computing the minimum distance": [[88, "Improved-algorithm-for-computing-the-minimum-distance"]], "Clifford Groups": [[88, "Clifford-Groups"]], "Finding Equivalent Subsystem Codes": [[88, "Finding-Equivalent-Subsystem-Codes"]], "Building Codes": [[88, "Building-Codes"]], "Surface Codes": [[88, "Surface-Codes"]], "TileFactories": [[88, "TileFactories"]], "Tiles": [[88, "Tiles"]], "A Tile in Detail": [[88, "A-Tile-in-Detail"]], "Tile Factory": [[88, "Tile-Factory"]], "Now for something more challenging": [[88, "Now-for-something-more-challenging"]], "Simulating fault-tolerant error-correction circuits": [[88, "Simulating-fault-tolerant-error-correction-circuits"]], "Decoders": [[88, "Decoders"]], "Using the Union Find decoder in qiskit_qec": [[89, "Using-the-Union-Find-decoder-in-qiskit_qec"]], "QEC Tutorials": [[90, "qec-tutorials"]]}, "indexentries": {"module": [[0, "module-qiskit_qec.analysis"], [1, "module-qiskit_qec.circuits"], [2, "module-qiskit_qec.codes"], [3, "module-qiskit_qec.decoders"], [4, "module-qiskit_qec.geometry"], [5, "module-qiskit_qec"], [6, "module-qiskit_qec.info"], [7, "module-qiskit_qec.linear"], [8, "module-qiskit_qec.operators"], [9, "module-qiskit_qec.structures"], [10, "module-qiskit_qec.utils"], [83, "module-qiskit_qec.utils.indexer"], [85, "module-qiskit_qec.utils.pauli_rep"], [86, "module-qiskit_qec.utils.visualizations"]], "qiskit_qec.analysis": [[0, "module-qiskit_qec.analysis"]], "qiskit_qec.circuits": [[1, "module-qiskit_qec.circuits"]], "qiskit_qec.codes": [[2, "module-qiskit_qec.codes"]], "qiskit_qec.decoders": [[3, "module-qiskit_qec.decoders"]], "qiskit_qec.geometry": [[4, "module-qiskit_qec.geometry"]], "qiskit_qec": [[5, "module-qiskit_qec"]], "qiskit_qec.info": [[6, "module-qiskit_qec.info"]], "qiskit_qec.linear": [[7, "module-qiskit_qec.linear"]], "qiskit_qec.operators": [[8, "module-qiskit_qec.operators"]], "qiskit_qec.structures": [[9, "module-qiskit_qec.structures"]], "qiskit_qec.utils": [[10, "module-qiskit_qec.utils"]], "available_methods (arccircuit attribute)": [[16, "qiskit_qec.circuits.ArcCircuit.AVAILABLE_METHODS"]], "arccircuit (class in qiskit_qec.circuits)": [[16, "qiskit_qec.circuits.ArcCircuit"]], "method_naive (arccircuit attribute)": [[16, "qiskit_qec.circuits.ArcCircuit.METHOD_NAIVE"]], "method_spitz (arccircuit attribute)": [[16, "qiskit_qec.circuits.ArcCircuit.METHOD_SPITZ"]], "check_nodes() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.check_nodes"]], "flatten_nodes() (arccircuit static method)": [[16, "qiskit_qec.circuits.ArcCircuit.flatten_nodes"]], "get_error_coords() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.get_error_coords"]], "is_cluster_neutral() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.is_cluster_neutral"]], "measured_logicals() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.measured_logicals"]], "string2nodes() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.string2nodes"]], "string2raw_logicals() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.string2raw_logicals"]], "transpile() (arccircuit method)": [[16, "qiskit_qec.circuits.ArcCircuit.transpile"]], "csscodecircuit (class in qiskit_qec.circuits)": [[17, "qiskit_qec.circuits.CSSCodeCircuit"]], "check_nodes() (csscodecircuit method)": [[17, "qiskit_qec.circuits.CSSCodeCircuit.check_nodes"]], "is_cluster_neutral() (csscodecircuit method)": [[17, "qiskit_qec.circuits.CSSCodeCircuit.is_cluster_neutral"]], "measured_logicals() (csscodecircuit method)": [[17, "qiskit_qec.circuits.CSSCodeCircuit.measured_logicals"]], "stim_detectors() (csscodecircuit method)": [[17, "qiskit_qec.circuits.CSSCodeCircuit.stim_detectors"]], "string2nodes() (csscodecircuit method)": [[17, "qiskit_qec.circuits.CSSCodeCircuit.string2nodes"]], "string2raw_logicals() (csscodecircuit method)": [[17, "qiskit_qec.circuits.CSSCodeCircuit.string2raw_logicals"]], "codecircuit (class in qiskit_qec.circuits)": [[18, "qiskit_qec.circuits.CodeCircuit"]], "check_nodes() (codecircuit method)": [[18, "qiskit_qec.circuits.CodeCircuit.check_nodes"]], "is_cluster_neutral() (codecircuit method)": [[18, "qiskit_qec.circuits.CodeCircuit.is_cluster_neutral"]], "measured_logicals() (codecircuit method)": [[18, "qiskit_qec.circuits.CodeCircuit.measured_logicals"]], "string2nodes() (codecircuit method)": [[18, "qiskit_qec.circuits.CodeCircuit.string2nodes"]], "repetitioncodecircuit (class in qiskit_qec.circuits)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit"]], "check_nodes() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.check_nodes"]], "get_circuit_list() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.get_circuit_list"]], "is_cluster_neutral() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.is_cluster_neutral"]], "measured_logicals() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.measured_logicals"]], "partition_outcomes() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.partition_outcomes"]], "readout() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.readout"]], "string2nodes() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.string2nodes"]], "string2raw_logicals() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.string2raw_logicals"]], "syndrome_measurement() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.syndrome_measurement"]], "x() (repetitioncodecircuit method)": [[19, "qiskit_qec.circuits.RepetitionCodeCircuit.x"]], "surfacecodecircuit (class in qiskit_qec.circuits)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit"]], "check_nodes() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.check_nodes"]], "get_circuit_list() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.get_circuit_list"]], "is_cluster_neutral() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.is_cluster_neutral"]], "measured_logicals() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.measured_logicals"]], "readout() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.readout"]], "string2nodes() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.string2nodes"]], "string2raw_logicals() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.string2raw_logicals"]], "syndrome_measurement() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.syndrome_measurement"]], "x() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.x"]], "z() (surfacecodecircuit method)": [[20, "qiskit_qec.circuits.SurfaceCodeCircuit.z"]], "codelibrarian (class in qiskit_qec.codes)": [[21, "qiskit_qec.codes.CodeLibrarian"]], "get() (codelibrarian method)": [[21, "qiskit_qec.codes.CodeLibrarian.get"]], "n_dir_format (codelibrarian attribute)": [[21, "qiskit_qec.codes.CodeLibrarian.n_dir_format"]], "n_k_codes_file_format (codelibrarian attribute)": [[21, "qiskit_qec.codes.CodeLibrarian.n_k_codes_file_format"]], "codelibrary (class in qiskit_qec.codes)": [[22, "qiskit_qec.codes.CodeLibrary"]], "data2code() (codelibrary static method)": [[22, "qiskit_qec.codes.CodeLibrary.data2code"]], "in_range() (codelibrary method)": [[22, "qiskit_qec.codes.CodeLibrary.in_range"]], "search() (codelibrary method)": [[22, "qiskit_qec.codes.CodeLibrary.search"]], "qeccode (class in qiskit_qec.codes)": [[23, "qiskit_qec.codes.QECCode"]], "stabsubsystemcode (class in qiskit_qec.codes)": [[24, "qiskit_qec.codes.StabSubSystemCode"]], "draw() (stabsubsystemcode method)": [[24, "qiskit_qec.codes.StabSubSystemCode.draw"]], "generators (stabsubsystemcode attribute)": [[24, "qiskit_qec.codes.StabSubSystemCode.generators"]], "n (stabsubsystemcode attribute)": [[24, "qiskit_qec.codes.StabSubSystemCode.n"]], "all_small_codes() (in module qiskit_qec.codes)": [[25, "qiskit_qec.codes.all_small_codes"]], "small_code() (in module qiskit_qec.codes)": [[26, "qiskit_qec.codes.small_code"]], "available_methods (circuitmodelmatchingdecoder attribute)": [[27, "qiskit_qec.decoders.CircuitModelMatchingDecoder.AVAILABLE_METHODS"]], "circuitmodelmatchingdecoder (class in qiskit_qec.decoders)": [[27, "qiskit_qec.decoders.CircuitModelMatchingDecoder"]], "method_pymatching (circuitmodelmatchingdecoder attribute)": [[27, "qiskit_qec.decoders.CircuitModelMatchingDecoder.METHOD_PYMATCHING"]], "method_retworkx (circuitmodelmatchingdecoder attribute)": [[27, "qiskit_qec.decoders.CircuitModelMatchingDecoder.METHOD_RETWORKX"]], "process() (circuitmodelmatchingdecoder method)": [[27, "qiskit_qec.decoders.CircuitModelMatchingDecoder.process"]], "update_edge_weights() (circuitmodelmatchingdecoder method)": [[27, "qiskit_qec.decoders.CircuitModelMatchingDecoder.update_edge_weights"]], "available_methods (decodinggraph attribute)": [[28, "qiskit_qec.decoders.DecodingGraph.AVAILABLE_METHODS"]], "decodinggraph (class in qiskit_qec.decoders)": [[28, "qiskit_qec.decoders.DecodingGraph"]], "method_naive (decodinggraph attribute)": [[28, "qiskit_qec.decoders.DecodingGraph.METHOD_NAIVE"]], "method_spitz (decodinggraph attribute)": [[28, "qiskit_qec.decoders.DecodingGraph.METHOD_SPITZ"]], "get_error_probs() (decodinggraph method)": [[28, "qiskit_qec.decoders.DecodingGraph.get_error_probs"]], "make_error_graph() (decodinggraph method)": [[28, "qiskit_qec.decoders.DecodingGraph.make_error_graph"]], "weight_syndrome_graph() (decodinggraph method)": [[28, "qiskit_qec.decoders.DecodingGraph.weight_syndrome_graph"]], "available_methods (repetitiondecoder attribute)": [[29, "qiskit_qec.decoders.RepetitionDecoder.AVAILABLE_METHODS"]], "method_pymatching (repetitiondecoder attribute)": [[29, "qiskit_qec.decoders.RepetitionDecoder.METHOD_PYMATCHING"]], "method_retworkx (repetitiondecoder attribute)": [[29, "qiskit_qec.decoders.RepetitionDecoder.METHOD_RETWORKX"]], "repetitiondecoder (class in qiskit_qec.decoders)": [[29, "qiskit_qec.decoders.RepetitionDecoder"]], "process() (repetitiondecoder method)": [[29, "qiskit_qec.decoders.RepetitionDecoder.process"]], "update_edge_weights() (repetitiondecoder method)": [[29, "qiskit_qec.decoders.RepetitionDecoder.update_edge_weights"]], "available_methods (threebitdecoder attribute)": [[30, "qiskit_qec.decoders.ThreeBitDecoder.AVAILABLE_METHODS"]], "method_pymatching (threebitdecoder attribute)": [[30, "qiskit_qec.decoders.ThreeBitDecoder.METHOD_PYMATCHING"]], "method_retworkx (threebitdecoder attribute)": [[30, "qiskit_qec.decoders.ThreeBitDecoder.METHOD_RETWORKX"]], "threebitdecoder (class in qiskit_qec.decoders)": [[30, "qiskit_qec.decoders.ThreeBitDecoder"]], "process() (threebitdecoder method)": [[30, "qiskit_qec.decoders.ThreeBitDecoder.process"]], "update_edge_weights() (threebitdecoder method)": [[30, "qiskit_qec.decoders.ThreeBitDecoder.update_edge_weights"]], "unionfinddecoder (class in qiskit_qec.decoders)": [[31, "qiskit_qec.decoders.UnionFindDecoder"]], "cluster() (unionfinddecoder method)": [[31, "qiskit_qec.decoders.UnionFindDecoder.cluster"]], "find() (unionfinddecoder method)": [[31, "qiskit_qec.decoders.UnionFindDecoder.find"]], "get_corrections() (unionfinddecoder method)": [[31, "qiskit_qec.decoders.UnionFindDecoder.get_corrections"]], "neighbouring_edges() (unionfinddecoder method)": [[31, "qiskit_qec.decoders.UnionFindDecoder.neighbouring_edges"]], "peeling() (unionfinddecoder method)": [[31, "qiskit_qec.decoders.UnionFindDecoder.peeling"]], "process() (unionfinddecoder method)": [[31, "qiskit_qec.decoders.UnionFindDecoder.process"]], "checkerboardtile (class in qiskit_qec.geometry)": [[32, "qiskit_qec.geometry.CheckerBoardTile"]], "draw() (checkerboardtile class method)": [[32, "qiskit_qec.geometry.CheckerBoardTile.draw"]], "face_colors (checkerboardtile attribute)": [[32, "qiskit_qec.geometry.CheckerBoardTile.face_colors"]], "faces_wf_components (checkerboardtile attribute)": [[32, "qiskit_qec.geometry.CheckerBoardTile.faces_wf_components"]], "num_faces (checkerboardtile attribute)": [[32, "qiskit_qec.geometry.CheckerBoardTile.num_faces"]], "num_qubits (checkerboardtile attribute)": [[32, "qiskit_qec.geometry.CheckerBoardTile.num_qubits"]], "size (checkerboardtile attribute)": [[32, "qiskit_qec.geometry.CheckerBoardTile.size"]], "u_vec (checkerboardtile attribute)": [[32, "qiskit_qec.geometry.CheckerBoardTile.u_vec"]], "v_vec (checkerboardtile attribute)": [[32, "qiskit_qec.geometry.CheckerBoardTile.v_vec"]], "wf_coordinates (checkerboardtile attribute)": [[32, "qiskit_qec.geometry.CheckerBoardTile.wf_coordinates"]], "wf_loop_indicator (checkerboardtile attribute)": [[32, "qiskit_qec.geometry.CheckerBoardTile.wf_loop_indicator"]], "wf_operator_dict (checkerboardtile attribute)": [[32, "qiskit_qec.geometry.CheckerBoardTile.wf_operator_dict"]], "wf_q_indices (checkerboardtile attribute)": [[32, "qiskit_qec.geometry.CheckerBoardTile.wf_q_indices"]], "diagonalbartile (class in qiskit_qec.geometry)": [[33, "qiskit_qec.geometry.DiagonalBarTile"]], "draw() (diagonalbartile class method)": [[33, "qiskit_qec.geometry.DiagonalBarTile.draw"]], "face_colors (diagonalbartile attribute)": [[33, "qiskit_qec.geometry.DiagonalBarTile.face_colors"]], "faces_wf_components (diagonalbartile attribute)": [[33, "qiskit_qec.geometry.DiagonalBarTile.faces_wf_components"]], "num_faces (diagonalbartile attribute)": [[33, "qiskit_qec.geometry.DiagonalBarTile.num_faces"]], "num_qubits (diagonalbartile attribute)": [[33, "qiskit_qec.geometry.DiagonalBarTile.num_qubits"]], "size (diagonalbartile attribute)": [[33, "qiskit_qec.geometry.DiagonalBarTile.size"]], "u_vec (diagonalbartile attribute)": [[33, "qiskit_qec.geometry.DiagonalBarTile.u_vec"]], "v_vec (diagonalbartile attribute)": [[33, "qiskit_qec.geometry.DiagonalBarTile.v_vec"]], "wf_coordinates (diagonalbartile attribute)": [[33, "qiskit_qec.geometry.DiagonalBarTile.wf_coordinates"]], "wf_loop_indicator (diagonalbartile attribute)": [[33, "qiskit_qec.geometry.DiagonalBarTile.wf_loop_indicator"]], "wf_operator_dict (diagonalbartile attribute)": [[33, "qiskit_qec.geometry.DiagonalBarTile.wf_operator_dict"]], "wf_q_indices (diagonalbartile attribute)": [[33, "qiskit_qec.geometry.DiagonalBarTile.wf_q_indices"]], "diagonalhourglasstile (class in qiskit_qec.geometry)": [[34, "qiskit_qec.geometry.DiagonalHourGlassTile"]], "draw() (diagonalhourglasstile class method)": [[34, "qiskit_qec.geometry.DiagonalHourGlassTile.draw"]], "face_colors (diagonalhourglasstile attribute)": [[34, "qiskit_qec.geometry.DiagonalHourGlassTile.face_colors"]], "faces_wf_components (diagonalhourglasstile attribute)": [[34, "qiskit_qec.geometry.DiagonalHourGlassTile.faces_wf_components"]], "num_faces (diagonalhourglasstile attribute)": [[34, "qiskit_qec.geometry.DiagonalHourGlassTile.num_faces"]], "num_qubits (diagonalhourglasstile attribute)": [[34, "qiskit_qec.geometry.DiagonalHourGlassTile.num_qubits"]], "size (diagonalhourglasstile attribute)": [[34, "qiskit_qec.geometry.DiagonalHourGlassTile.size"]], "u_vec (diagonalhourglasstile attribute)": [[34, "qiskit_qec.geometry.DiagonalHourGlassTile.u_vec"]], "v_vec (diagonalhourglasstile attribute)": [[34, "qiskit_qec.geometry.DiagonalHourGlassTile.v_vec"]], "wf_coordinates (diagonalhourglasstile attribute)": [[34, "qiskit_qec.geometry.DiagonalHourGlassTile.wf_coordinates"]], "wf_loop_indicator (diagonalhourglasstile attribute)": [[34, "qiskit_qec.geometry.DiagonalHourGlassTile.wf_loop_indicator"]], "wf_operator_dict (diagonalhourglasstile attribute)": [[34, "qiskit_qec.geometry.DiagonalHourGlassTile.wf_operator_dict"]], "wf_q_indices (diagonalhourglasstile attribute)": [[34, "qiskit_qec.geometry.DiagonalHourGlassTile.wf_q_indices"]], "edge (class in qiskit_qec.geometry)": [[35, "qiskit_qec.geometry.Edge"]], "add_parent() (edge method)": [[35, "qiskit_qec.geometry.Edge.add_parent"]], "create_id() (edge static method)": [[35, "qiskit_qec.geometry.Edge.create_id"]], "last_id (edge attribute)": [[35, "qiskit_qec.geometry.Edge.last_id"]], "face (class in qiskit_qec.geometry)": [[36, "qiskit_qec.geometry.Face"]], "add_parent() (face method)": [[36, "qiskit_qec.geometry.Face.add_parent"]], "create_id() (face static method)": [[36, "qiskit_qec.geometry.Face.create_id"]], "last_id (face attribute)": [[36, "qiskit_qec.geometry.Face.last_id"]], "geometrybounds (class in qiskit_qec.geometry)": [[37, "qiskit_qec.geometry.GeometryBounds"]], "bounding_box_from_line() (geometrybounds static method)": [[37, "qiskit_qec.geometry.GeometryBounds.bounding_box_from_line"]], "combine() (geometrybounds class method)": [[37, "qiskit_qec.geometry.GeometryBounds.combine"]], "contains() (geometrybounds method)": [[37, "qiskit_qec.geometry.GeometryBounds.contains"]], "copy() (geometrybounds method)": [[37, "qiskit_qec.geometry.GeometryBounds.copy"]], "expand() (geometrybounds method)": [[37, "qiskit_qec.geometry.GeometryBounds.expand"]], "intercepts() (geometrybounds method)": [[37, "qiskit_qec.geometry.GeometryBounds.intercepts"]], "set_min_max() (geometrybounds method)": [[37, "qiskit_qec.geometry.GeometryBounds.set_min_max"]], "hexagontile (class in qiskit_qec.geometry)": [[38, "qiskit_qec.geometry.HexagonTile"]], "draw() (hexagontile class method)": [[38, "qiskit_qec.geometry.HexagonTile.draw"]], "face_colors (hexagontile attribute)": [[38, "qiskit_qec.geometry.HexagonTile.face_colors"]], "faces_wf_components (hexagontile attribute)": [[38, "qiskit_qec.geometry.HexagonTile.faces_wf_components"]], "h (hexagontile attribute)": [[38, "qiskit_qec.geometry.HexagonTile.h"]], "num_faces (hexagontile attribute)": [[38, "qiskit_qec.geometry.HexagonTile.num_faces"]], "num_qubits (hexagontile attribute)": [[38, "qiskit_qec.geometry.HexagonTile.num_qubits"]], "r (hexagontile attribute)": [[38, "qiskit_qec.geometry.HexagonTile.r"]], "size (hexagontile attribute)": [[38, "qiskit_qec.geometry.HexagonTile.size"]], "u_vec (hexagontile attribute)": [[38, "qiskit_qec.geometry.HexagonTile.u_vec"]], "v_vec (hexagontile attribute)": [[38, "qiskit_qec.geometry.HexagonTile.v_vec"]], "wf_coordinates (hexagontile attribute)": [[38, "qiskit_qec.geometry.HexagonTile.wf_coordinates"]], "wf_loop_indicator (hexagontile attribute)": [[38, "qiskit_qec.geometry.HexagonTile.wf_loop_indicator"]], "wf_operator_dict (hexagontile attribute)": [[38, "qiskit_qec.geometry.HexagonTile.wf_operator_dict"]], "wf_q_indices (hexagontile attribute)": [[38, "qiskit_qec.geometry.HexagonTile.wf_q_indices"]], "lattice (class in qiskit_qec.geometry)": [[39, "qiskit_qec.geometry.Lattice"]], "apply_transform_from() (lattice method)": [[39, "qiskit_qec.geometry.Lattice.apply_transform_from"]], "find_pre_transform_length() (lattice method)": [[39, "qiskit_qec.geometry.Lattice.find_pre_transform_length"]], "generate_points() (lattice method)": [[39, "qiskit_qec.geometry.Lattice.generate_points"]], "make_transform() (lattice class method)": [[39, "qiskit_qec.geometry.Lattice.make_transform"]], "restrict() (lattice method)": [[39, "qiskit_qec.geometry.Lattice.restrict"]], "restrict_for_tiling() (lattice method)": [[39, "qiskit_qec.geometry.Lattice.restrict_for_tiling"]], "manifold (class in qiskit_qec.geometry)": [[40, "qiskit_qec.geometry.Manifold"]], "octasquaretile (class in qiskit_qec.geometry)": [[41, "qiskit_qec.geometry.OctaSquareTile"]], "c8 (octasquaretile attribute)": [[41, "qiskit_qec.geometry.OctaSquareTile.c8"]], "draw() (octasquaretile class method)": [[41, "qiskit_qec.geometry.OctaSquareTile.draw"]], "face_colors (octasquaretile attribute)": [[41, "qiskit_qec.geometry.OctaSquareTile.face_colors"]], "faces_wf_components (octasquaretile attribute)": [[41, "qiskit_qec.geometry.OctaSquareTile.faces_wf_components"]], "num_faces (octasquaretile attribute)": [[41, "qiskit_qec.geometry.OctaSquareTile.num_faces"]], "num_qubits (octasquaretile attribute)": [[41, "qiskit_qec.geometry.OctaSquareTile.num_qubits"]], "s8 (octasquaretile attribute)": [[41, "qiskit_qec.geometry.OctaSquareTile.s8"]], "size (octasquaretile attribute)": [[41, "qiskit_qec.geometry.OctaSquareTile.size"]], "u_vec (octasquaretile attribute)": [[41, "qiskit_qec.geometry.OctaSquareTile.u_vec"]], "v_vec (octasquaretile attribute)": [[41, "qiskit_qec.geometry.OctaSquareTile.v_vec"]], "wf_coordinates (octasquaretile attribute)": [[41, "qiskit_qec.geometry.OctaSquareTile.wf_coordinates"]], "wf_loop_indicator (octasquaretile attribute)": [[41, "qiskit_qec.geometry.OctaSquareTile.wf_loop_indicator"]], "wf_operator_dict (octasquaretile attribute)": [[41, "qiskit_qec.geometry.OctaSquareTile.wf_operator_dict"]], "wf_q_indices (octasquaretile attribute)": [[41, "qiskit_qec.geometry.OctaSquareTile.wf_q_indices"]], "plane (class in qiskit_qec.geometry)": [[42, "qiskit_qec.geometry.Plane"]], "ison() (plane static method)": [[42, "qiskit_qec.geometry.Plane.ison"]], "rot_matrix() (plane static method)": [[42, "qiskit_qec.geometry.Plane.rot_matrix"]], "rotate() (plane static method)": [[42, "qiskit_qec.geometry.Plane.rotate"]], "qubitcount (class in qiskit_qec.geometry)": [[43, "qiskit_qec.geometry.QubitCount"]], "decrement_qubit() (qubitcount method)": [[43, "qiskit_qec.geometry.QubitCount.decrement_qubit"]], "increment_qubit() (qubitcount method)": [[43, "qiskit_qec.geometry.QubitCount.increment_qubit"]], "new_qubit() (qubitcount method)": [[43, "qiskit_qec.geometry.QubitCount.new_qubit"]], "qubitdata (class in qiskit_qec.geometry)": [[44, "qiskit_qec.geometry.QubitData"]], "add_data_array() (qubitdata method)": [[44, "qiskit_qec.geometry.QubitData.add_data_array"]], "del_data_array() (qubitdata method)": [[44, "qiskit_qec.geometry.QubitData.del_data_array"]], "shape (class in qiskit_qec.geometry)": [[45, "qiskit_qec.geometry.Shape"]], "bounding_box_from_lines() (shape method)": [[45, "qiskit_qec.geometry.Shape.bounding_box_from_lines"]], "contains() (shape method)": [[45, "qiskit_qec.geometry.Shape.contains"]], "contains_quad_winding_number() (shape method)": [[45, "qiskit_qec.geometry.Shape.contains_quad_winding_number"]], "contains_ray_trace() (shape method)": [[45, "qiskit_qec.geometry.Shape.contains_ray_trace"]], "create_lines() (shape static method)": [[45, "qiskit_qec.geometry.Shape.create_lines"]], "inside() (shape method)": [[45, "qiskit_qec.geometry.Shape.inside"]], "is_between() (shape static method)": [[45, "qiskit_qec.geometry.Shape.is_between"]], "rect() (shape class method)": [[45, "qiskit_qec.geometry.Shape.rect"]], "square() (shape class method)": [[45, "qiskit_qec.geometry.Shape.square"]], "shapeobject (class in qiskit_qec.geometry)": [[46, "qiskit_qec.geometry.ShapeObject"]], "add_parent() (shapeobject method)": [[46, "qiskit_qec.geometry.ShapeObject.add_parent"]], "create_id() (shapeobject static method)": [[46, "qiskit_qec.geometry.ShapeObject.create_id"]], "last_id (shapeobject attribute)": [[46, "qiskit_qec.geometry.ShapeObject.last_id"]], "shell (class in qiskit_qec.geometry)": [[47, "qiskit_qec.geometry.Shell"]], "add_parent() (shell method)": [[47, "qiskit_qec.geometry.Shell.add_parent"]], "create_id() (shell static method)": [[47, "qiskit_qec.geometry.Shell.create_id"]], "delete_subtree() (shell method)": [[47, "qiskit_qec.geometry.Shell.delete_subtree"]], "draw() (shell method)": [[47, "qiskit_qec.geometry.Shell.draw"]], "extract() (shell method)": [[47, "qiskit_qec.geometry.Shell.extract"]], "integer_snap() (shell method)": [[47, "qiskit_qec.geometry.Shell.integer_snap"]], "last_id (shell attribute)": [[47, "qiskit_qec.geometry.Shell.last_id"]], "rotate2d() (shell method)": [[47, "qiskit_qec.geometry.Shell.rotate2d"]], "scale() (shell method)": [[47, "qiskit_qec.geometry.Shell.scale"]], "shell2symplectic() (shell static method)": [[47, "qiskit_qec.geometry.Shell.shell2symplectic"]], "shift() (shell method)": [[47, "qiskit_qec.geometry.Shell.shift"]], "union() (shell method)": [[47, "qiskit_qec.geometry.Shell.union"]], "squarediamondtile (class in qiskit_qec.geometry)": [[48, "qiskit_qec.geometry.SquareDiamondTile"]], "draw() (squarediamondtile class method)": [[48, "qiskit_qec.geometry.SquareDiamondTile.draw"]], "face_colors (squarediamondtile attribute)": [[48, "qiskit_qec.geometry.SquareDiamondTile.face_colors"]], "faces_wf_components (squarediamondtile attribute)": [[48, "qiskit_qec.geometry.SquareDiamondTile.faces_wf_components"]], "num_faces (squarediamondtile attribute)": [[48, "qiskit_qec.geometry.SquareDiamondTile.num_faces"]], "num_qubits (squarediamondtile attribute)": [[48, "qiskit_qec.geometry.SquareDiamondTile.num_qubits"]], "size (squarediamondtile attribute)": [[48, "qiskit_qec.geometry.SquareDiamondTile.size"]], "u_vec (squarediamondtile attribute)": [[48, "qiskit_qec.geometry.SquareDiamondTile.u_vec"]], "v_vec (squarediamondtile attribute)": [[48, "qiskit_qec.geometry.SquareDiamondTile.v_vec"]], "wf_coordinates (squarediamondtile attribute)": [[48, "qiskit_qec.geometry.SquareDiamondTile.wf_coordinates"]], "wf_loop_indicator (squarediamondtile attribute)": [[48, "qiskit_qec.geometry.SquareDiamondTile.wf_loop_indicator"]], "wf_operator_dict (squarediamondtile attribute)": [[48, "qiskit_qec.geometry.SquareDiamondTile.wf_operator_dict"]], "wf_orientation (squarediamondtile attribute)": [[48, "qiskit_qec.geometry.SquareDiamondTile.wf_orientation"]], "wf_q_indices (squarediamondtile attribute)": [[48, "qiskit_qec.geometry.SquareDiamondTile.wf_q_indices"]], "tile (class in qiskit_qec.geometry)": [[49, "qiskit_qec.geometry.Tile"]], "draw() (tile class method)": [[49, "qiskit_qec.geometry.Tile.draw"]], "tilefactory (class in qiskit_qec.geometry)": [[50, "qiskit_qec.geometry.TileFactory"]], "tiling (class in qiskit_qec.geometry)": [[51, "qiskit_qec.geometry.Tiling"]], "distance() (tiling class method)": [[51, "qiskit_qec.geometry.Tiling.distance"]], "twomanifold (class in qiskit_qec.geometry)": [[52, "qiskit_qec.geometry.TwoManifold"]], "vertex (class in qiskit_qec.geometry)": [[53, "qiskit_qec.geometry.Vertex"]], "add_parent() (vertex method)": [[53, "qiskit_qec.geometry.Vertex.add_parent"]], "create_id() (vertex static method)": [[53, "qiskit_qec.geometry.Vertex.create_id"]], "last_id (vertex attribute)": [[53, "qiskit_qec.geometry.Vertex.last_id"]], "position (vertex attribute)": [[53, "qiskit_qec.geometry.Vertex.position"]], "set_position() (vertex method)": [[53, "qiskit_qec.geometry.Vertex.set_position"]], "shallowcopy() (vertex method)": [[53, "qiskit_qec.geometry.Vertex.shallowcopy"]], "wireframe (class in qiskit_qec.geometry)": [[54, "qiskit_qec.geometry.WireFrame"]], "add_parent() (wireframe method)": [[54, "qiskit_qec.geometry.WireFrame.add_parent"]], "create_id() (wireframe static method)": [[54, "qiskit_qec.geometry.WireFrame.create_id"]], "last_id (wireframe attribute)": [[54, "qiskit_qec.geometry.WireFrame.last_id"]], "aut_group_size (properties attribute)": [[55, "qiskit_qec.info.Properties.AUT_GROUP_SIZE"]], "citation (properties attribute)": [[55, "qiskit_qec.info.Properties.CITATION"]], "code_types (properties attribute)": [[55, "qiskit_qec.info.Properties.CODE_TYPES"]], "d (properties attribute)": [[55, "qiskit_qec.info.Properties.D"]], "gauge_group (properties attribute)": [[55, "qiskit_qec.info.Properties.GAUGE_GROUP"]], "hyperbolic_gen (properties attribute)": [[55, "qiskit_qec.info.Properties.HYPERBOLIC_GEN"]], "index (properties attribute)": [[55, "qiskit_qec.info.Properties.INDEX"]], "isotropic_gen (properties attribute)": [[55, "qiskit_qec.info.Properties.ISOTROPIC_GEN"]], "is_css (properties attribute)": [[55, "qiskit_qec.info.Properties.IS_CSS"]], "is_css_key (properties attribute)": [[55, "qiskit_qec.info.Properties.IS_CSS_KEY"]], "is_decomposable (properties attribute)": [[55, "qiskit_qec.info.Properties.IS_DECOMPOSABLE"]], "is_decomposable_key (properties attribute)": [[55, "qiskit_qec.info.Properties.IS_DECOMPOSABLE_KEY"]], "is_degenerate (properties attribute)": [[55, "qiskit_qec.info.Properties.IS_DEGENERATE"]], "is_degenerate_key (properties attribute)": [[55, "qiskit_qec.info.Properties.IS_DEGENERATE_KEY"]], "is_gf4linear (properties attribute)": [[55, "qiskit_qec.info.Properties.IS_GF4LINEAR"]], "is_gf4linear_key (properties attribute)": [[55, "qiskit_qec.info.Properties.IS_GF4LINEAR_KEY"]], "is_triorthogonal (properties attribute)": [[55, "qiskit_qec.info.Properties.IS_TRIORTHOGONAL"]], "is_triorthogonal_key (properties attribute)": [[55, "qiskit_qec.info.Properties.IS_TRIORTHOGONAL_KEY"]], "k (properties attribute)": [[55, "qiskit_qec.info.Properties.K"]], "logical_ops (properties attribute)": [[55, "qiskit_qec.info.Properties.LOGICAL_OPS"]], "n (properties attribute)": [[55, "qiskit_qec.info.Properties.N"]], "name (properties attribute)": [[55, "qiskit_qec.info.Properties.NAME"]], "properties (class in qiskit_qec.info)": [[55, "qiskit_qec.info.Properties"]], "stabilizer (properties attribute)": [[55, "qiskit_qec.info.Properties.STABILIZER"]], "type (properties attribute)": [[55, "qiskit_qec.info.Properties.TYPE"]], "uuid (properties attribute)": [[55, "qiskit_qec.info.Properties.UUID"]], "weight_enumerator (properties attribute)": [[55, "qiskit_qec.info.Properties.WEIGHT_ENUMERATOR"]], "info (properties attribute)": [[55, "qiskit_qec.info.Properties.info"]], "all_commute() (in module qiskit_qec.linear)": [[56, "qiskit_qec.linear.all_commute"]], "augment_mat() (in module qiskit_qec.linear)": [[57, "qiskit_qec.linear.augment_mat"]], "build_hyper_partner() (in module qiskit_qec.linear)": [[58, "qiskit_qec.linear.build_hyper_partner"]], "create_lambda_matrix() (in module qiskit_qec.linear)": [[59, "qiskit_qec.linear.create_lambda_matrix"]], "is_center() (in module qiskit_qec.linear)": [[60, "qiskit_qec.linear.is_center"]], "is_hyper_form() (in module qiskit_qec.linear)": [[61, "qiskit_qec.linear.is_hyper_form"]], "is_same_span() (in module qiskit_qec.linear)": [[62, "qiskit_qec.linear.is_same_span"]], "is_stabilizer_group() (in module qiskit_qec.linear)": [[63, "qiskit_qec.linear.is_stabilizer_group"]], "is_symplectic_form() (in module qiskit_qec.linear)": [[64, "qiskit_qec.linear.is_symplectic_form"]], "is_symplectic_matrix_form() (in module qiskit_qec.linear)": [[65, "qiskit_qec.linear.is_symplectic_matrix_form"]], "is_symplectic_vector_form() (in module qiskit_qec.linear)": [[66, "qiskit_qec.linear.is_symplectic_vector_form"]], "locate_hyper_partner() (in module qiskit_qec.linear)": [[67, "qiskit_qec.linear.locate_hyper_partner"]], "make_commute_hyper() (in module qiskit_qec.linear)": [[68, "qiskit_qec.linear.make_commute_hyper"]], "rank() (in module qiskit_qec.linear)": [[69, "qiskit_qec.linear.rank"]], "rref() (in module qiskit_qec.linear)": [[70, "qiskit_qec.linear.rref"]], "rref_complete() (in module qiskit_qec.linear)": [[71, "qiskit_qec.linear.rref_complete"]], "symplectic_gram_schmidt() (in module qiskit_qec.linear)": [[72, "qiskit_qec.linear.symplectic_gram_schmidt"]], "symplectic_product() (in module qiskit_qec.linear)": [[73, "qiskit_qec.linear.symplectic_product"]], "basepauli (class in qiskit_qec.operators)": [[74, "qiskit_qec.operators.BasePauli"]], "external_pauli_encoding (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.EXTERNAL_PAULI_ENCODING"]], "external_phase_encoding (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.EXTERNAL_PHASE_ENCODING"]], "external_qubit_order (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.EXTERNAL_QUBIT_ORDER"]], "external_syntax (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.EXTERNAL_SYNTAX"]], "external_tensor_encoding (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.EXTERNAL_TENSOR_ENCODING"]], "print_phase_encoding (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.PRINT_PHASE_ENCODING"], [74, "qiskit_qec.operators.BasePauli.print_phase_encoding"]], "adjoint() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.adjoint"]], "all_commutes() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.all_commutes"]], "commutes() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.commutes"]], "compose() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.compose"]], "conjugate() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.conjugate"]], "copy() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.copy"]], "dim (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.dim"]], "dot() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.dot"]], "evolve() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.evolve"]], "expand() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.expand"]], "input_dims() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.input_dims"]], "num_qubits (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.num_qubits"]], "num_y (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.num_y"]], "output_dims() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.output_dims"]], "pauli_encoding (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.pauli_encoding"]], "phase_encoding (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.phase_encoding"]], "power() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.power"]], "qargs (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.qargs"]], "qubit_order (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.qubit_order"]], "reshape() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.reshape"]], "set_pauli_encoding() (basepauli class method)": [[74, "qiskit_qec.operators.BasePauli.set_pauli_encoding"]], "set_phase_encoding() (basepauli class method)": [[74, "qiskit_qec.operators.BasePauli.set_phase_encoding"]], "set_print_phase_encoding() (basepauli class method)": [[74, "qiskit_qec.operators.BasePauli.set_print_phase_encoding"]], "set_qubit_order() (basepauli class method)": [[74, "qiskit_qec.operators.BasePauli.set_qubit_order"]], "set_syntax() (basepauli class method)": [[74, "qiskit_qec.operators.BasePauli.set_syntax"]], "set_tensor_encoding() (basepauli class method)": [[74, "qiskit_qec.operators.BasePauli.set_tensor_encoding"]], "syntax (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.syntax"]], "tensor() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.tensor"]], "tensor_encoding (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.tensor_encoding"]], "to_label() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.to_label"]], "transpose() (basepauli method)": [[74, "qiskit_qec.operators.BasePauli.transpose"]], "x (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.x"]], "z (basepauli attribute)": [[74, "qiskit_qec.operators.BasePauli.z"]], "external_pauli_encoding (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.EXTERNAL_PAULI_ENCODING"]], "external_phase_encoding (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.EXTERNAL_PHASE_ENCODING"]], "external_qubit_order (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.EXTERNAL_QUBIT_ORDER"]], "external_syntax (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.EXTERNAL_SYNTAX"]], "external_tensor_encoding (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.EXTERNAL_TENSOR_ENCODING"]], "print_phase_encoding (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.PRINT_PHASE_ENCODING"], [75, "qiskit_qec.operators.Pauli.print_phase_encoding"]], "pauli (class in qiskit_qec.operators)": [[75, "qiskit_qec.operators.Pauli"]], "adjoint() (pauli method)": [[75, "qiskit_qec.operators.Pauli.adjoint"]], "all_commutes() (pauli method)": [[75, "qiskit_qec.operators.Pauli.all_commutes"]], "anticommutes() (pauli method)": [[75, "qiskit_qec.operators.Pauli.anticommutes"]], "append_paulis() (pauli method)": [[75, "qiskit_qec.operators.Pauli.append_paulis"]], "commutes() (pauli method)": [[75, "qiskit_qec.operators.Pauli.commutes"]], "compose() (pauli method)": [[75, "qiskit_qec.operators.Pauli.compose"]], "conjugate() (pauli method)": [[75, "qiskit_qec.operators.Pauli.conjugate"]], "copy() (pauli method)": [[75, "qiskit_qec.operators.Pauli.copy"]], "delete() (pauli method)": [[75, "qiskit_qec.operators.Pauli.delete"]], "delete_qubits() (pauli method)": [[75, "qiskit_qec.operators.Pauli.delete_qubits"]], "dim (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.dim"]], "dot() (pauli method)": [[75, "qiskit_qec.operators.Pauli.dot"]], "equiv() (pauli method)": [[75, "qiskit_qec.operators.Pauli.equiv"]], "evolve() (pauli method)": [[75, "qiskit_qec.operators.Pauli.evolve"]], "expand() (pauli method)": [[75, "qiskit_qec.operators.Pauli.expand"]], "from_label() (pauli static method)": [[75, "qiskit_qec.operators.Pauli.from_label"]], "input_dims() (pauli method)": [[75, "qiskit_qec.operators.Pauli.input_dims"]], "insert() (pauli method)": [[75, "qiskit_qec.operators.Pauli.insert"]], "insert_paulis() (pauli method)": [[75, "qiskit_qec.operators.Pauli.insert_paulis"]], "instrs2symplectic() (pauli static method)": [[75, "qiskit_qec.operators.Pauli.instrs2symplectic"]], "inverse() (pauli method)": [[75, "qiskit_qec.operators.Pauli.inverse"]], "kron() (pauli method)": [[75, "qiskit_qec.operators.Pauli.kron"]], "name (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.name"]], "num_clbits (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.num_clbits"]], "num_qubits (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.num_qubits"]], "num_y (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.num_y"]], "output_dims() (pauli method)": [[75, "qiskit_qec.operators.Pauli.output_dims"]], "pauli_encoding (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.pauli_encoding"]], "pauli_single() (pauli class method)": [[75, "qiskit_qec.operators.Pauli.pauli_single"]], "phase (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.phase"]], "phase_encoding (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.phase_encoding"]], "phase_exp (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.phase_exp"]], "pltb_int (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.pltb_int"]], "pltb_str (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.pltb_str"]], "power() (pauli method)": [[75, "qiskit_qec.operators.Pauli.power"]], "qargs (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.qargs"]], "qubit_order (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.qubit_order"]], "random() (pauli class method)": [[75, "qiskit_qec.operators.Pauli.random"]], "reshape() (pauli method)": [[75, "qiskit_qec.operators.Pauli.reshape"]], "set_pauli_encoding() (pauli class method)": [[75, "qiskit_qec.operators.Pauli.set_pauli_encoding"]], "set_phase_encoding() (pauli class method)": [[75, "qiskit_qec.operators.Pauli.set_phase_encoding"]], "set_print_phase_encoding() (pauli class method)": [[75, "qiskit_qec.operators.Pauli.set_print_phase_encoding"]], "set_qubit_order() (pauli class method)": [[75, "qiskit_qec.operators.Pauli.set_qubit_order"]], "set_syntax() (pauli class method)": [[75, "qiskit_qec.operators.Pauli.set_syntax"]], "set_tensor_encoding() (pauli class method)": [[75, "qiskit_qec.operators.Pauli.set_tensor_encoding"]], "set_truncation() (pauli class method)": [[75, "qiskit_qec.operators.Pauli.set_truncation"]], "settings (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.settings"]], "sgn_prod() (pauli static method)": [[75, "qiskit_qec.operators.Pauli.sgn_prod"]], "syntax (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.syntax"]], "tensor() (pauli method)": [[75, "qiskit_qec.operators.Pauli.tensor"]], "tensor_encoding (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.tensor_encoding"]], "to_cpx_matrix() (pauli method)": [[75, "qiskit_qec.operators.Pauli.to_cpx_matrix"]], "to_instruction() (pauli method)": [[75, "qiskit_qec.operators.Pauli.to_instruction"]], "to_label() (pauli method)": [[75, "qiskit_qec.operators.Pauli.to_label"]], "to_matrix() (pauli method)": [[75, "qiskit_qec.operators.Pauli.to_matrix"]], "to_spmatrix() (pauli method)": [[75, "qiskit_qec.operators.Pauli.to_spmatrix"]], "transpose() (pauli method)": [[75, "qiskit_qec.operators.Pauli.transpose"]], "update_x() (pauli method)": [[75, "qiskit_qec.operators.Pauli.update_x"]], "update_z() (pauli method)": [[75, "qiskit_qec.operators.Pauli.update_z"]], "x (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.x"]], "z (pauli attribute)": [[75, "qiskit_qec.operators.Pauli.z"]], "external_pauli_encoding (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.EXTERNAL_PAULI_ENCODING"]], "external_phase_encoding (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.EXTERNAL_PHASE_ENCODING"]], "external_qubit_order (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.EXTERNAL_QUBIT_ORDER"]], "external_syntax (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.EXTERNAL_SYNTAX"]], "external_tensor_encoding (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.EXTERNAL_TENSOR_ENCODING"]], "print_phase_encoding (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.PRINT_PHASE_ENCODING"], [76, "qiskit_qec.operators.PauliList.print_phase_encoding"]], "paulilist (class in qiskit_qec.operators)": [[76, "qiskit_qec.operators.PauliList"]], "adjoint() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.adjoint"]], "all_commutes() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.all_commutes"]], "anticommutes() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.anticommutes"]], "anticommutes_with_all() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.anticommutes_with_all"]], "argsort() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.argsort"]], "commutes() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.commutes"]], "commutes_with_all() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.commutes_with_all"]], "compose() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.compose"]], "conjugate() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.conjugate"]], "copy() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.copy"]], "delete() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.delete"]], "dim (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.dim"]], "dot() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.dot"]], "evolve() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.evolve"]], "expand() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.expand"]], "from_symplectic() (paulilist class method)": [[76, "qiskit_qec.operators.PauliList.from_symplectic"]], "getaslist() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.getaslist"]], "group_qubit_wise_commuting() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.group_qubit_wise_commuting"]], "input_dims() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.input_dims"]], "insert() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.insert"]], "inverse() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.inverse"]], "label_iter() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.label_iter"]], "matrix_iter() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.matrix_iter"]], "num_paulis (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.num_paulis"]], "num_qubits (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.num_qubits"]], "num_y (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.num_y"]], "output_dims() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.output_dims"]], "pauli_encoding (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.pauli_encoding"]], "phase (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.phase"]], "phase_encoding (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.phase_encoding"]], "phase_exp (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.phase_exp"]], "power() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.power"]], "qargs (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.qargs"]], "qubit_order (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.qubit_order"]], "reshape() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.reshape"]], "set_pauli_encoding() (paulilist class method)": [[76, "qiskit_qec.operators.PauliList.set_pauli_encoding"]], "set_phase_encoding() (paulilist class method)": [[76, "qiskit_qec.operators.PauliList.set_phase_encoding"]], "set_print_phase_encoding() (paulilist class method)": [[76, "qiskit_qec.operators.PauliList.set_print_phase_encoding"]], "set_qubit_order() (paulilist class method)": [[76, "qiskit_qec.operators.PauliList.set_qubit_order"]], "set_syntax() (paulilist class method)": [[76, "qiskit_qec.operators.PauliList.set_syntax"]], "set_tensor_encoding() (paulilist class method)": [[76, "qiskit_qec.operators.PauliList.set_tensor_encoding"]], "settings (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.settings"]], "shape (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.shape"]], "size (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.size"]], "sort() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.sort"]], "syntax (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.syntax"]], "tensor() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.tensor"]], "tensor_encoding (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.tensor_encoding"]], "to_label() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.to_label"]], "to_labels() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.to_labels"]], "to_matrix() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.to_matrix"]], "transpose() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.transpose"]], "unique() (paulilist method)": [[76, "qiskit_qec.operators.PauliList.unique"]], "x (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.x"]], "z (paulilist attribute)": [[76, "qiskit_qec.operators.PauliList.z"]], "gaugegroup (class in qiskit_qec.structures)": [[77, "qiskit_qec.structures.GaugeGroup"]], "k (gaugegroup attribute)": [[77, "qiskit_qec.structures.GaugeGroup.k"]], "n (gaugegroup attribute)": [[77, "qiskit_qec.structures.GaugeGroup.n"]], "num_gen (gaugegroup attribute)": [[77, "qiskit_qec.structures.GaugeGroup.num_gen"]], "group (class in qiskit_qec.structures)": [[78, "qiskit_qec.structures.Group"]], "decodinggraphedge (class in qiskit_qec.utils)": [[79, "qiskit_qec.utils.DecodingGraphEdge"]], "get() (decodinggraphedge method)": [[79, "qiskit_qec.utils.DecodingGraphEdge.get"]], "properties (decodinggraphedge attribute)": [[79, "qiskit_qec.utils.DecodingGraphEdge.properties"]], "qubits (decodinggraphedge attribute)": [[79, "qiskit_qec.utils.DecodingGraphEdge.qubits"]], "weight (decodinggraphedge attribute)": [[79, "qiskit_qec.utils.DecodingGraphEdge.weight"]], "decodinggraphnode (class in qiskit_qec.utils)": [[80, "qiskit_qec.utils.DecodingGraphNode"]], "get() (decodinggraphnode method)": [[80, "qiskit_qec.utils.DecodingGraphNode.get"]], "get_counts_via_stim() (in module qiskit_qec.utils)": [[81, "qiskit_qec.utils.get_counts_via_stim"]], "get_stim_circuits() (in module qiskit_qec.utils)": [[82, "qiskit_qec.utils.get_stim_circuits"]], "qiskit_qec.utils.indexer": [[83, "module-qiskit_qec.utils.indexer"]], "noisify_circuit() (in module qiskit_qec.utils)": [[84, "qiskit_qec.utils.noisify_circuit"]], "qiskit_qec.utils.pauli_rep": [[85, "module-qiskit_qec.utils.pauli_rep"]], "qiskit_qec.utils.visualizations": [[86, "module-qiskit_qec.utils.visualizations"]]}})