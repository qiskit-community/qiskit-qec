name: Tests, linter and coverage

on:
  pull_request:
    branches:
      - main
      - 'stable/**'
concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  tests:
    if: github.repository_owner == 'qiskit-community'
    name: tests-python${{ matrix.python-version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.11]
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Pip cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-${{ hashFiles('setup.py','requirements.txt','requirements-dev.txt') }}
    - name: Set up tox env
      run: |
        python -m pip install -U tox 
    - name: Test using tox envs
      run: |
        tox -vv -e py
  lint:
    if: github.repository_owner == 'qiskit-community'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
          python-version: '3.9'
    - name: Pip cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-lint-${{ hashFiles('setup.py','requirements.txt','requirements-dev.txt') }}
    - name: Install tox
      run: |
        python -m pip install -U tox
    - name: Run styles check
      run: tox -elint
  docs:
    if: github.repository_owner == 'qiskit-community'
    name: Docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
          python-version: '3.9'
    - name: Pip cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-docs-${{ hashFiles('setup.py','requirements.txt','requirements-dev.txt') }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
        sudo apt-get update
        sudo apt-get install -y pandoc
    - name: Build Docs
      run: tox -edocs
    - uses: actions/upload-artifact@v3
      with:
        name: html_docs
        path: docs/_build/html
